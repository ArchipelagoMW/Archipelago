# This workflow will create an AP world release and store builds to it when an vX.Y.Z tag is pushed

name: Release AP World

on:
  push:
    tags:
      - v*.*.*

env:
  # Name of AP World
  AP_WORLD_NAME: SoulBlazer
  # Name of world's directory (in the worlds directory).
  AP_WORLD_DIR: soulblazer

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV  # tag vX.Y.Z will become "env.AP_WORLD_NAME APWorld vX.Y.Z"
      - name: Checkout APWorld Repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: worlds/${{ env.AP_WORLD_DIR }}
      - name: Checkout dataclass-wizard dependancy library
        uses: actions/checkout@v4
        with:
          repository: Tranquilite0/dataclass-wizard
          path: ./dataclass-wizard
          sparse-checkout: |
            LICENCE
            dataclass_wizard
      - name: Copy dataclass-wizard to APWorld Directory
        run: |
          cp -R ./dataclass-wizard/dataclass_wizard ./worlds/${{ env.AP_WORLD_DIR }}/Data
          cp ./dataclass-wizard/LICENCE ./worlds/${{ env.AP_WORLD_DIR }}/Data/dataclass_wizard
      - name: Create AP World Archive
        run: |
          mkdir dist
          cd worlds
          zip -r ../dist/${{ env.AP_WORLD_DIR }}.apworld ${{ env.AP_WORLD_DIR }}
      - name: Create Release
        uses: softprops/action-gh-release@975c1b265e11dd76618af1c374e7981f9a6ff44a
        with:
          draft: true  # don't publish right away # TODO: Set to false once confirming this works.
          prerelease: false #TODO: add pre-release detection?
          name: ${{ env.AP_WORLD_NAME }} APWorld ${{ env.RELEASE_VERSION }}
          files: dist/${{ env.AP_WORLD_DIR }}.apworld
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
