general_options:
  # Where to place output files
  output_path: "output"
# Options for MultiServer
# Null means nothing, for the server this means to default the value
# These overwrite command line arguments!
server_options:
  host: null
  port: 38281
  password: null
  multidata: null
  savefile: null
  disable_save: false
  loglevel: "info"
  # Allows for clients to log on and manage the server.  If this is null, no remote administration is possible.
  server_password: null
  # Disallow !getitem.
  disable_item_cheat: false
  # Client hint system
  # Points given to a player for each acquired item in their world
  location_check_points: 1
  # Relative point cost to receive a hint via !hint for players
  # so for example hint_cost: 20 would mean that for every 20% of available checks, you get the ability to hint, for a total of 5
  hint_cost: 10 # Set to 0 if you want free hints
  # Release modes
  # A Release sends out the remaining items *from* a world that releases
  # "disabled" -> clients can't release,
  # "enabled" -> clients can always release
  # "auto" -> automatic release on goal completion
  # "auto-enabled" -> automatic release on goal completion and manual release is also enabled
  # "goal" -> release is allowed after goal completion
  release_mode: "goal"
  # Collect modes
  # A Collect sends the remaining items *to* a world that collects
  # "disabled" -> clients can't collect,
  # "enabled" -> clients can always collect
  # "auto" -> automatic collect on goal completion
  # "auto-enabled" -> automatic collect on goal completion and manual collect is also enabled
  # "goal" -> collect is allowed after goal completion
  collect_mode: "goal"
  # Remaining modes
  # !remaining handling, that tells a client which items remain in their pool
  # "enabled" -> Client can always ask for remaining items
  # "disabled" -> Client can never ask for remaining items
  # "goal" -> Client can ask for remaining items after goal completion
  remaining_mode: "goal"
  # Automatically shut down the server after this many seconds without new location checks, 0 to keep running
  auto_shutdown: 0
  # Compatibility handling
  # 2 -> Recommended for casual/cooperative play, attempt to be compatible with everything across all versions
  # 1 -> No longer in use, kept reserved in case of future use
  # 0 -> Recommended for tournaments to force a level playing field, only allow an exact version match
  compatibility: 2
  # log all server traffic, mostly for dev use
  log_network: 0
# Options for Generation
generator:
  # Location of your Enemizer CLI, available here: https://github.com/Ijwu/Enemizer/releases
  enemizer_path: "EnemizerCLI/EnemizerCLI.Core" # + ".exe" is implied on Windows
  # Folder from which the player yaml files are pulled from
  player_files_path: "Players"
  #amount of players, 0 to infer from player files
  players: 0
  # general weights file, within the stated player_files_path location
  # gets used if players is higher than the amount of per-player files found to fill remaining slots
  weights_file_path: "weights.yaml"
  # Meta file name, within the stated player_files_path location
  meta_file_path: "meta.yaml"
  # Create a spoiler file
  # 0 -> None
  # 1 -> Spoiler without playthrough or paths to playthrough required items
  # 2 -> Spoiler with playthrough (viable solution to goals)
  # 3 -> Spoiler with playthrough and traversal paths towards items
  spoiler: 3
  # Glitch to Triforce room from Ganon
  # When disabled, you have to have a weapon that can hurt ganon (master sword or swordless/easy item functionality + hammer)
  # and have completed the goal required for killing ganon to be able to access the triforce room.
  # 1 -> Enabled.
  # 0 -> Disabled (except in no-logic)
  glitch_triforce_room: 1
  # Create encrypted race roms and flag games as race mode
  race: 0
  # List of options that can be plando'd. Can be combined, for example "bosses, items"
  # Available options: bosses, items, texts, connections
  plando_options: "bosses, items"
sni_options:
  # Set this to your SNI folder location if you want the MultiClient to attempt an auto start, does nothing if not found
  sni_path: "SNI"
  # Set this to false to never autostart a rom (such as after patching)
  # True for operating system default program
  # Alternatively, a path to a program to open the .sfc file with
  snes_rom_start: true
lttp_options:
  # File name of the v1.0 J rom
  rom_file: "Zelda no Densetsu - Kamigami no Triforce (Japan).sfc"
lufia2ac_options:
  # File name of the US rom
  rom_file: "Lufia II - Rise of the Sinistrals (USA).sfc"
sm_options:
  # File name of the v1.0 J rom
  rom_file: "Super Metroid (JU).sfc"
factorio_options:
  executable: "factorio/bin/x64/factorio"
  # by default, no settings are loaded if this file does not exist.  If this file does exist, then it will be used.
  # server_settings: "factorio\\data\\server-settings.json"
  # Whether to filter item send messages displayed in-game to only those that involve you.
  filter_item_sends: false
  # Whether to send chat messages from players on the Factorio server to Archipelago.
  bridge_chat_out: true
minecraft_options: 
  forge_directory: "Minecraft Forge server"
  max_heap_size: "2G"
  # release channel, currently "release", or "beta"
  # any games played on the "beta" channel have a high likelihood of no longer working on the "release" channel.
  release_channel: "release"
oot_options:
  # File name of the OoT v1.0 ROM
  rom_file: "The Legend of Zelda - Ocarina of Time.z64"
  # Set this to false to never autostart a rom (such as after patching)
  #             true  for operating system default program
  # Alternatively, a path to a program to open the .z64 file with
  rom_start: true
soe_options:
  # File name of the SoE US ROM
  rom_file: "Secret of Evermore (USA).sfc"
ffr_options:
  display_msgs: true
dkc3_options:
  # File name of the DKC3 US rom
  rom_file: "Donkey Kong Country 3 - Dixie Kong's Double Trouble! (USA) (En,Fr).sfc"
smw_options:
  # File name of the SMW US rom
  rom_file: "Super Mario World (USA).sfc"
pokemon_rb_options:
  # File names of the Pokemon Red and Blue roms
  red_rom_file: "Pokemon Red (UE) [S][!].gb"
  blue_rom_file: "Pokemon Blue (UE) [S][!].gb"
  # Set this to false to never autostart a rom (such as after patching)
  # True for operating system default program
  # Alternatively, a path to a program to open the .gb file with
  rom_start: true
zillion_options:
  # File name of the Zillion US rom
  rom_file: "Zillion (UE) [!].sms"
  # Set this to false to never autostart a rom (such as after patching)
  # True for operating system default program
  # Alternatively, a path to a program to open the .sfc file with
  # RetroArch doesn't make it easy to launch a game from the command line.
  # You have to know the path to the emulator core library on the user's computer.
  rom_start: "retroarch"
