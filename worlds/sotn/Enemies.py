class EnemyData:
    def __init__(self, enemy_id: int, vanilla_drop: list, drop_addresses: list):
        self.enemy_id = enemy_id
        self.vanilla_drop = vanilla_drop
        self.drop_addresses = drop_addresses


Enemy_dict = {
    "Dracula": EnemyData(1, [], [0x0b766a, 0x0b766c]),
    "Blood skeleton": EnemyData(2, [], [0x0b6492, 0x0b6494]),
    "Bat": EnemyData(3, ["Monster vial 2", "Potion"], [0x0b63a2, 0x0b63a4]),
    "Stone skull": EnemyData(4, [], [0x0b9cc2, 0x0b9cc4]),
    "Zombie": EnemyData(5, ["Cloth tunic", "$100"], [0x0b6c02, 0x0b6c04]),
    "Merman": EnemyData(6, ["Monster vial 1", "Zircon"], [0x0b5caa, 0x0b5cac]),
    "Skeleton": EnemyData(7, ["Monster vial 3", "Shield potion"], [0x0b655a, 0x0b655c]),
    "Warg": EnemyData(8, [], [0x0b775a, 0x0b775c]),
    "Bone scimitar": EnemyData(9, ["Red rust", "Short sword"], [0x0b6b3a, 0x0b6b3c]),
    "Merman(red)": EnemyData(10, ["Monster vial 1", "Zircon"], [0x0b5cfa, 0x0b5cfc]),
    "Spittle bone": EnemyData(11, [], [0x0b664a, 0x0b664c]),
    "Axe knight": EnemyData(12, ["Bronze cuirass", "Axe"], [0x0b83a2, 0x0b83a4]),
    "Bloody zombie": EnemyData(13, ["Basilard", "Cloth tunic"], [0x0b5a7a, 0x0b5a7c]),
    "Slinger": EnemyData(14, ["Knight shield", "Leather shield"], [0x0b77d2, 0x0b77d4]),
    "Ouija table": EnemyData(15, ["Morning set", "Barley tea"], [0x0b7a2a, 0x0b7a2c]),
    "Skelerang": EnemyData(16, ["Fire boomerang", "Boomerang"], [0x0b5a2a, 0x0b5a2c]),
    "Thornweed": EnemyData(17, ["Strawberry", "Grapes"], [0x0b748a, 0x0b748c]),
    "Gaibon": EnemyData(18, [], [0x0b8612, 0x0b8614]),
    "Ghost": EnemyData(19, ["Antivenom", "$400"], [0x0b7462, 0x0b7464]),
    "Marionette": EnemyData(20, ["Circlet", "Smart potion"], [0x0b614a, 0x0b614c]),
    "Slogra": EnemyData(21, [], [0x0b832a, 0x0b832c]),
    "Diplocephalus": EnemyData(22, ["Tart", "Pentagram"], [0x0b5af2, 0x0b5af4]),
    "Flea man": EnemyData(23, ["Cheese", "Takemitsu"], [0x0b5eb2, 0x0b5eb4]),
    "Medusa head": EnemyData(24, ["Medusa shield", "Resist stone"], [0x0b8eea, 0x0b8eec]),
    "Blade soldier": EnemyData(25, ["Namakura", "$400"], [0x0b6e32, 0x0b6e34]),
    "Bone musket": EnemyData(26, ["Talisman", "Magic missile"], [0x0b6ac2, 0x0b6ac4]),
    "Medusa head(yellow)": EnemyData(27, ["Medusa shield", "Resist stone"], [0x0b8f12, 0x0b8f14]),
    "Plate lord": EnemyData(28, ["Neutron bomb", "Iron ball"], [0x0b69fa, 0x0b69fc]),
    "Stone rose": EnemyData(29, ["Meal ticket", "Leather shield"], [0x0b66ea, 0x0b66ec]),
    "Axe knight(armored)": EnemyData(30, ["AxeLord shield", "Axe"], [0x0b5962, 0x0b5964]),
    "Ctulhu": EnemyData(31, ["Bat pentagram", "Pentagram"], [0x0b819a, 0x0b819c]),
    "Bone archer": EnemyData(32, ["Magic missile", "$400"], [0x0b6bb2, 0x0b6bb4]),
    "Bone pillar": EnemyData(33, ["Ballroom mask", "Antivenom"], [0x0b789a, 0x0b789c]),
    "Doppleganger10": EnemyData(34, [], [0x0b85ea, 0x0b85ec]),
    "Owl": EnemyData(35, [], [0x0b5be2, 0x0b5be4]),
    "Phantom skull": EnemyData(36, ["Resist dark", "Felt hat"], [0x0b641a, 0x0b641c]),
    "Scylla wyrm": EnemyData(37, [], [0x0b8c52, 0x0b8c54]),
    "Skeleton ape": EnemyData(38, ["TNT", "Banana"], [0x0b669a, 0x0b669c]),
    "Spear guard": EnemyData(39, ["Iron cuirass", "Javelin"], [0x0b682a, 0x0b682c]),
    "Spellbook": EnemyData(40, ["Pentagram", "$1000"], [0x0b83ca, 0x0b83cc]),
    "Winged guard": EnemyData(41, ["Javelin", "Iron shield"], [0x0b6ed2, 0x0b6ed4]),
    "Ectoplasm": EnemyData(42, ["Manna prism", "Uncurse"], [0x0b6762, 0x0b6764]),
    "Sword lord": EnemyData(43, ["Bekatowa", "Cutlass"], [0x0b59da, 0x0b59dc]),
    "Toad": EnemyData(44, ["Pizza", "Blue knuckles"], [0x0b6b62, 0x0b6b64]),
    "Armor lord": EnemyData(45, ["Saber", "Rapier"], [0x0b5dc2, 0x0b5dc4]),
    "Corner guard": EnemyData(46, ["Damascus sword", "Cutlass"], [0x0b7822, 0x0b7824]),
    "Dhuron": EnemyData(47, ["Rapier", "Hide cuirass"], [0x0b71a2, 0x0b71a4]),
    "Frog": EnemyData(48, ["Pizza", "Knuckle duster"], [0x0b6b8a, 0x0b6b8c]),
    "Frozen shade": EnemyData(49, ["Ice cream", "Ice mail"], [0x0b6a4a, 0x0b6a4c]),
    "Magic tome": EnemyData(50, ["Saber", "$2000"], [0x0b859a, 0x0b859c]),
    "Skull lord": EnemyData(51, ["Skull shield", "Scimitar"], [0x0b872a, 0x0b872c]),
    "Black crow": EnemyData(52, ["Red bean bun", "Aquamarine"], [0x0b6cca, 0x0b6ccc]),
    "Blue raven": EnemyData(53, ["Pork bun", "Zircon"], [0x0b6ca2, 0x0b6ca4]),
    "Corpseweed": EnemyData(54, ["Potion", "Antivenom"], [0x0b74b2, 0x0b74b4]),
    "Flail guard": EnemyData(55, ["Pot roast", "Morningstar"], [0x0b6442, 0x0b6444]),
    "Flea rider": EnemyData(56, ["Ham and eggs", "Turkey"], [0x0b6122, 0x0b6124]),
    "Spectral sword": EnemyData(57, ["Bastard sword", "Broadsword"], [0x0b6efa, 0x0b6efc]),
    "Bone halberd": EnemyData(58, ["Ham and eggs", "Javelin"], [0x0b6d42, 0x0b6d44]),
    "Scylla": EnemyData(59, [], [0x0b8b3a, 0x0b8b3c]),
    "Hunting girl": EnemyData(60, ["Cheesecake", "Were bane"], [0x0b80aa, 0x0b80ac]),
    "Mudman": EnemyData(61, [], [0x0b7ea2, 0x0b7ea4]),
    "Owl knight": EnemyData(62, ["Medal", "Cutlass"], [0x0b5b92, 0x0b5b94]),
    "Spectral sword(swords)": EnemyData(63, ["Bastard sword", "Broadsword"], [0x0b7012, 0x0b7014]),
    "Vandal sword": EnemyData(64, ["Muramasa", "Holy sword"], [0x0b80d2, 0x0b80d4]),
    "Flea armor": EnemyData(65, ["Iron cuirass", "High potion"], [0x0b5eda, 0x0b5edc]),
    "Hippogryph": EnemyData(66, [], [0x0b8d42, 0x0b8d44]),
    "Paranthropus": EnemyData(67, ["Ring of varda", "Gauntlet"], [0x0b7e2a, 0x0b7e2c]),
    "Slime": EnemyData(68, [], [0x0b63f2, 0x0b63f4]),
    "Blade master": EnemyData(69, ["Cross shuriken", "Shotel"], [0x0b6de2, 0x0b6de4]),
    "Wereskeleton": EnemyData(70, ["Garnet", "Str. potion"], [0x0b632a, 0x0b632c]),
    "Grave keeper": EnemyData(71, ["Natou", "Miso soup"], [0x0b6c2a, 0x0b6c2c]),
    "Gremlin": EnemyData(72, ["Fire mail", "Resist fire"], [0x0b805a, 0x0b805c]),
    "Harpy": EnemyData(73, ["Life apple", "Apple"], [0x0b828a, 0x0b828c]),
    "Minotaurus": EnemyData(74, [], [0x0b7cea, 0x0b7cec]),
    "Werewolf": EnemyData(75, [], [0x0b7d62, 0x0b7d64]),
    "Bone ark": EnemyData(76, ["Skull shield", "Monster vial 3"], [0x0b60aa, 0x0b60ac]),
    "Valhalla knight": EnemyData(77, ["Claymore", "Estoc"], [0x0b6f9a, 0x0b6f9c]),
    "Cloaked knight": EnemyData(78, ["Heaven sword", "Flamberge"], [0x0b88ba, 0x0b88bc]),
    "Fishhead": EnemyData(79, ["Icebrand", "Resist ice"], [0x0b89aa, 0x0b89ac]),
    "Lesser demon": EnemyData(80, ["Holbein dagger", "Obsidian sword"], [0x0b5c0a, 0x0b5c0c]),
    "Lossoth": EnemyData(81, ["Firebrand", "Sirloin"], [0x0b6f4a, 0x0b6f4c]),
    "Salem witch": EnemyData(82, ["Shortcake", "Gold circlet"], [0x0b7fba, 0x0b7fbc]),
    "Blade": EnemyData(83, ["Gold plate", "Hunter sword"], [0x0b79b2, 0x0b79b4]),
    "Gurkha": EnemyData(84, ["Gold plate", "Combat knife"], [0x0b7962, 0x0b7964]),
    "Hammer": EnemyData(85, ["Gold plate", "Hammer"], [0x0b7912, 0x0b7914]),
    "Discus lord": EnemyData(86, ["Jewel sword", "Chakram"], [0x0b65aa, 0x0b65ac]),
    "Karasuman": EnemyData(87, ["Ring of feanor", "Resist dark"], [0x0b8a22, 0x0b8a24]),
    "Large slime": EnemyData(88, [], [0x0b63ca, 0x0b63cc]),
    "Hellfire beast": EnemyData(89, ["Fire mail", "Lightning mail"], [0x0b64ba, 0x0b64bc]),
    "Cerberos": EnemyData(90, [], [0x0b997a, 0x0b997c]),
    "Killer fish": EnemyData(91, ["Sushi", "Aquamarine"], [0x0b9642, 0x0b9644]),
    "Olrox": EnemyData(92, [], [0x0b6172, 0x0b6174]),
    "Succubus": EnemyData(93, [], [0x0b9502, 0x0b9504]),
    "Tombstone": EnemyData(94, ["Green tea", "Katana"], [0x0b6c7a, 0x0b6c7c]),
    "Venus weed": EnemyData(95, ["Heart refresh", "Coral circlet"], [0x0b752a, 0x0b752c]),
    "Lion": EnemyData(96, ["Fist of tulkas", "Gauntlet"], [0x0b8752, 0x0b8754]),
    "Scarecrow": EnemyData(97, ["Muramasa", "Javelin"], [0x0b91e2, 0x0b91e4]),
    "Granfaloon": EnemyData(98, [], [0x0b8c7a, 0x0b8c7c]),
    "Schmoo": EnemyData(99, ["Crissaegrim", "Ramen"], [0x0b920a, 0x0b920c]),
    "Tin man": EnemyData(100, ["Mojo mail", "Lunch A"], [0x0b87a2, 0x0b87a4]),
    "Balloon pod": EnemyData(101, [], [0x0b8aea, 0x0b8aec]),
    "Yorick": EnemyData(102, ["Skull shield", "Monster vial 3"], [0x0b6d92, 0x0b6d94]),
    "Bomb knight": EnemyData(103, ["Dynamite", "TNT"], [0x0b75ca, 0x0b75cc]),
    "Flying zombie": EnemyData(104, ["Frankfurter", "Shuriken"], [0x0b5aa2, 0x0b5aa4]),
    "Bitterfly": EnemyData(105, ["Mystic pendant", "Luck potion"], [0x0b7872, 0x0b7874]),
    "Jack O'bones": EnemyData(106, ["Flame star", "Shuriken"], [0x0b6cf2, 0x0b6cf4]),
    "Archer": EnemyData(107, ["Vorpal blade", "Heart refresh"], [0x0b8f3a, 0x0b8f3c]),
    "Werewolf(reverse)": EnemyData(108, ["Yasutsuna", "Iron fist"], [0x0b9d8a, 0x0b9d8c]),
    "Black panther": EnemyData(109, ["Masamune", "Meal ticket"], [0x0b5e3a, 0x0b5e3c]),
    "Darkwing bat": EnemyData(110, [], [0x0b890a, 0x0b890c]),
    "Dragon rider": EnemyData(111, [], [0x0b7152, 0x0b7154]),
    "Minotaur": EnemyData(112, ["Fury plate", "Sirloin"], [0x0b9d12, 0x0b9d14]),
    "Nova skeleton": EnemyData(113, ["Terminus est", "Monster vial 3"], [0x0b6e82, 0x0b6e84]),
    "Orobourous": EnemyData(114, ["Lapis lazuli", "Karma coin"], [0x0b70da, 0x0b70dc]),
    "White dragon": EnemyData(115, [], [0x0b5f2a, 0x0b5f2c]),
    "Fire warg": EnemyData(116, ["Karma coin", "Turquoise"], [0x0b7322, 0x0b7324]),
    "Rock knight": EnemyData(117, ["Platinum mail", "Jewel knuckles"], [0x0b761a, 0x0b761c]),
    "Sniper of goth": EnemyData(118, ["Brilliant mail", "Magic missile"], [0x0b7a7a, 0x0b7a7c]),
    "Spectral sword(shields)": EnemyData(119, ["Mablung sword", "Gurthang"], [0x0b7062, 0x0b7064]),
    "Ghost dancer": EnemyData(120, ["Stone mask", "Buffalo star"], [0x0b7ef2, 0x0b7ef4]),
    "Warg rider": EnemyData(121, [], [0x0b739a, 0x0b739c]),
    "Cave troll": EnemyData(122, ["Nauglamir", "Neutron bomb"], [0x0b73ea, 0x0b73ec]),
    "Dark octopus": EnemyData(123, ["Green tea", "Sushi"], [0x0b5e62, 0x0b5e64]),
    "Fire demon": EnemyData(124, ["Marsil", "Fire shield"], [0x0b65fa, 0x0b65fc]),
    "Gorgon": EnemyData(125, ["Stone sword", "Hammer"], [0x0b5d4a, 0x0b5d4c]),
    "Malachi": EnemyData(126, ["Dark armor", "Dark shield"], [0x0b8212, 0x0b8214]),
    "Akmodan II": EnemyData(127, [], [0x0b881a, 0x0b881c]),
    "Blue venus weed": EnemyData(128, ["Heart refresh", "Zwei hander"], [0x0b9e02, 0x0b9e04, 0x0b9e2a, 0x0b9e2c]),
    "Doppleganger40": EnemyData(129, [], [0x0b9ae2, 0x0b9ae4]),
    "Medusa": EnemyData(130, [], [0x0b99f2, 0x0b99f4]),
    "The creature": EnemyData(131, [], [0x0b9a92, 0x0b9a94]),
    "Fake grant": EnemyData(132, [], [0x0b93c2, 0x0b93c4]),
    "Fake trevor": EnemyData(133, [], [0x0b92d2, 0x0b92d4]),
    "Imp": EnemyData(134, ["King's stone", "Luck potion"], [0x0b8ac2, 0x0b8ac4]),
    "Fake sypha": EnemyData(135, [], [0x0b943a, 0x0b943c]),
    "Beezelbub": EnemyData(136, [], [0x0b9232, 0x0b9234]),
    "Azaghal": EnemyData(137, ["Mourneblade", "Covenant stone"], [0x0b8032, 0x0b8034]),
    "Frozen half": EnemyData(138, ["Opal circlet", "Necklace of j"], [0x0b7f1a, 0x0b7f1c]),
    "Salome": EnemyData(139, ["Manna prism", "Wizard hat"], [0x0b80fa, 0x0b80fc]),
    "Richter belmont": EnemyData(140, [], [0x0b8f8a, 0x0b8f8c]),
    "Dodo bird": EnemyData(141, ["Runesword", "Heart broach"], [0x0b6b12, 0x0b6b14]),
    "Galamoth": EnemyData(142, [], [0x0b7c22, 0x0b7c24]),
    "Guardian": EnemyData(143, ["God's Garb", "Great sword"], [0x0b9ea2, 0x0b9ea4]),
    "Death": EnemyData(144, [], [0x0b9862, 0x0b9864]),
    "Shaft": EnemyData(145, [], [0x0b966a, 0x0b966c]),
    "Dracula(reverse)": EnemyData(146, [], [0x0b9bfa, 0x0b9bfc]),
    "Poltergeist": EnemyData(147, ["Bwaka knife"], [0x0b6f24]),
    "Puppet sword": EnemyData(148, ["Takemitsu"], [0x0b703c]),
    "Shield": EnemyData(149, ["Knight shield"], [0x0b70b4]),
    "Spear": EnemyData(150, ["Javelin"], [0x0b708c]),
    "Ball": EnemyData(151, ["Turquoise", "Iron ball"], [0x0b6dba, 0x0b6dbc])
}


class DropData:
    def __init__(self, vanilla_drop: str, drop_addresses: list):
        self.vanilla_drop = vanilla_drop
        self.drop_addresses = drop_addresses


Global_drop = [
    DropData("Heart", [0x043c3612, 0x044917e2, 0x0455cc62, 0x045e99ba, 0x0467755a, 0x048fb156,
                       0x049d3a26, 0x04aa1a42, 0x04b68aea, 0x04c328ee, 0x04cfbd2e, 0x04da5736, 0x04e327d2, 0x04ee32fe,
                       0x04f86072, 0x05050946, 0x050f8e72, 0x051ade86, 0x0526c722, 0x053f6466, 0x054b290e, 0x05573db2,
                       0x0560fbe2, 0x056be926, 0x0575197a, 0x057e077a, 0x05883f4a, 0x0590361a, 0x059bca06, 0x05a6ee9a,
                       0x05af32a6, 0x0606f0da, 0x060fdd0e, 0x061a7792, 0x0624789a, 0x0630618a, 0x063aafe2, 0x06471a0a,
                       0x065094be, 0x065918ba, 0x06621d0a, 0x066b4092, 0x06742eaa, 0x067d0d06, 0x06862056, 0x0692c45e,
                       0x069d21f2, 0x06a611d6, 0x047a3e76]),
    DropData("Heart", [0x043c362e, 0x044917fe, 0x0455cc7e, 0x045e99d6, 0x04677576, 0x048fb172,
                       0x049d3a42, 0x04aa1a5e, 0x04b68b06, 0x04c3290a, 0x04cfbd4a, 0x04da5752, 0x04e327ee, 0x04ee331a,
                       0x04f8608e, 0x05050962, 0x050f8e8e, 0x051adea2, 0x0526c73e, 0x053f6482, 0x054b292a, 0x05573dce,
                       0x0560fbfe, 0x056be942, 0x05751996, 0x057e0796, 0x05883f66, 0x05903636, 0x059bca22, 0x05a6eeb6,
                       0x05af32c2, 0x0606f0f6, 0x060fdd2a, 0x061a77ae, 0x062478b6, 0x063061a6, 0x063aaffe, 0x06471a26,
                       0x065094da, 0x065918d6, 0x06621d26, 0x066b40ae, 0x06742ec6, 0x067d0d22, 0x06862072, 0x0692c47a,
                       0x069d220e, 0x06a611f2, 0x047a3fc2]),
    DropData("Heart", [0x043c3630, 0x04491800, 0x0455cc80, 0x045e99d8, 0x04677578, 0x048fb174,
                       0x049d3a44, 0x04aa1a60, 0x04b68b08, 0x04c3290c, 0x04cfbd4c, 0x04da5754, 0x04e327f0, 0x04ee331c,
                       0x04f86090, 0x05050964, 0x050f8e90, 0x051adea4, 0x0526c740, 0x053f6484, 0x054b292c, 0x05573dd0,
                       0x0560fc00, 0x056be944, 0x05751998, 0x057e0798, 0x05883f68, 0x05903638, 0x059bca24, 0x05a6eeb8,
                       0x05af32c4, 0x0606f0f8, 0x060fdd2c, 0x061a77b0, 0x062478b8, 0x063061a8, 0x063ab000, 0x06471a28,
                       0x065094dc, 0x065918d8, 0x06621d28, 0x066b40b0, 0x06742ec8, 0x067d0d24, 0x06862074, 0x0692c47c,
                       0x069d2210, 0x06a611f4, 0x047a3fc4]),
    DropData("Heart", [0x043c3632, 0x04491802, 0x0455cc82, 0x045e99da, 0x0467757a, 0x048fb176,
                       0x049d3a46, 0x04aa1a62, 0x04b68b0a, 0x04c3290e, 0x04cfbd4e, 0x04da5756, 0x04e327f2, 0x04ee331e,
                       0x04f86092, 0x05050966, 0x050f8e92, 0x051adea6, 0x0526c742, 0x053f6486, 0x054b292e, 0x05573dd2,
                       0x0560fc02, 0x056be946, 0x0575199a, 0x057e079a, 0x05883f6a, 0x0590363a, 0x059bca26, 0x05a6eeba,
                       0x05af32c6, 0x0606f0fa, 0x060fdd2e, 0x061a77b2, 0x062478ba, 0x063061aa, 0x063ab002, 0x06471a2a,
                       0x065094de, 0x065918da, 0x06621d2a, 0x066b40b2, 0x06742eca, 0x067d0d26, 0x06862076, 0x0692c47e,
                       0x069d2212, 0x06a611f6, 0x047a3fc6]),
    DropData("Heart", [0x043c3634, 0x04491804, 0x0455cc84, 0x045e99dc, 0x0467757c, 0x048fb178,
                       0x049d3a48, 0x04aa1a64, 0x04b68b0c, 0x04c32910, 0x04cfbd50, 0x04da5758, 0x04e327f4, 0x04ee3320,
                       0x04f86094, 0x05050968, 0x050f8e94, 0x051adea8, 0x0526c744, 0x053f6488, 0x054b2930, 0x05573dd4,
                       0x0560fc04, 0x056be948, 0x0575199c, 0x057e079c, 0x05883f6c, 0x0590363c, 0x059bca28, 0x05a6eebc,
                       0x05af32c8, 0x0606f0fc, 0x060fdd30, 0x061a77b4, 0x062478bc, 0x063061ac, 0x063ab004, 0x06471a2c,
                       0x065094e0, 0x065918dc, 0x06621d2c, 0x066b40b4, 0x06742ecc, 0x067d0d28, 0x06862078, 0x0692c480,
                       0x069d2214, 0x06a611f8, 0x047a3fc8]),
    DropData("Heart", [0x043c3636, 0x04491806, 0x0455cc86, 0x045e99de, 0x0467757e, 0x048fb17a,
                       0x049d3a4a, 0x04aa1a66, 0x04b68b0e, 0x04c32912, 0x04cfbd52, 0x04da575a, 0x04e327f6, 0x04ee3322,
                       0x04f86096, 0x0505096a, 0x050f8e96, 0x051adeaa, 0x0526c746, 0x053f648a, 0x054b2932, 0x05573dd6,
                       0x0560fc06, 0x056be94a, 0x0575199e, 0x057e079e, 0x05883f6e, 0x0590363e, 0x059bca2a, 0x05a6eebe,
                       0x05af32ca, 0x0606f0fe, 0x060fdd32, 0x061a77b6, 0x062478be, 0x063061ae, 0x063ab006, 0x06471a2e,
                       0x065094e2, 0x065918de, 0x06621d2e, 0x066b40b6, 0x06742ece, 0x067d0d2a, 0x0686207a, 0x0692c482,
                       0x069d2216, 0x06a611fa, 0x047a3fca]),
    DropData("Heart", [0x043c3638, 0x04491808, 0x0455cc88, 0x045e99e0, 0x04677580, 0x048fb17c,
                       0x049d3a4c, 0x04aa1a68, 0x04b68b10, 0x04c32914, 0x04cfbd54, 0x04da575c, 0x04e327f8, 0x04ee3324,
                       0x04f86098, 0x0505096c, 0x050f8e98, 0x051adeac, 0x0526c748, 0x053f648c, 0x054b2934, 0x05573dd8,
                       0x0560fc08, 0x056be94c, 0x057519a0, 0x057e07a0, 0x05883f70, 0x05903640, 0x059bca2c, 0x05a6eec0,
                       0x05af32cc, 0x0606f100, 0x060fdd34, 0x061a77b8, 0x062478c0, 0x063061b0, 0x063ab008, 0x06471a30,
                       0x065094e4, 0x065918e0, 0x06621d30, 0x066b40b8, 0x06742ed0, 0x067d0d2c, 0x0686207c, 0x0692c484,
                       0x069d2218, 0x06a611fc, 0x047a3fcc]),
    DropData("Heart", [0x043c363a, 0x0449180a, 0x0455cc8a, 0x045e99e2, 0x04677582, 0x048fb17e,
                       0x049d3a4e, 0x04aa1a6a, 0x04b68b12, 0x04c32916, 0x04cfbd56, 0x04da575e, 0x04e327fa, 0x04ee3326,
                       0x04f8609a, 0x0505096e, 0x050f8e9a, 0x051adeae, 0x0526c74a, 0x053f648e, 0x054b2936, 0x05573dda,
                       0x0560fc0a, 0x056be94e, 0x057519a2, 0x057e07a2, 0x05883f72, 0x05903642, 0x059bca2e, 0x05a6eec2,
                       0x05af32ce, 0x0606f102, 0x060fdd36, 0x061a77ba, 0x062478c2, 0x063061b2, 0x063ab00a, 0x06471a32,
                       0x065094e6, 0x065918e2, 0x06621d32, 0x066b40ba, 0x06742ed2, 0x067d0d2e, 0x0686207e, 0x0692c486,
                       0x069d221a, 0x06a611fe, 0x047a3fce]),
    DropData("Heart", [0x043c363c, 0x0449180c, 0x0455cc8c, 0x045e99e4, 0x04677584, 0x048fb180,
                       0x049d3a50, 0x04aa1a6c, 0x04b68b14, 0x04c32918, 0x04cfbd58, 0x04da5760, 0x04e327fc, 0x04ee3328,
                       0x04f8609c, 0x05050970, 0x050f8e9c, 0x051adeb0, 0x0526c74c, 0x053f6490, 0x054b2938, 0x05573ddc,
                       0x0560fc0c, 0x056be950, 0x057519a4, 0x057e07a4, 0x05883f74, 0x05903644, 0x059bca30, 0x05a6eec4,
                       0x05af32d0, 0x0606f104, 0x060fdd38, 0x061a77bc, 0x062478c4, 0x063061b4, 0x063ab00c, 0x06471a34,
                       0x065094e8, 0x065918e4, 0x06621d34, 0x066b40bc, 0x06742ed4, 0x067d0d30, 0x06862080, 0x0692c488,
                       0x069d221c, 0x06a61200, 0x047a3fd0]),
    DropData("Heart", [0x043c363e, 0x0449180e, 0x0455cc8e, 0x045e99e6, 0x04677586, 0x048fb182,
                       0x049d3a52, 0x04aa1a6e, 0x04b68b16, 0x04c3291a, 0x04cfbd5a, 0x04da5762, 0x04e327fe, 0x04ee332a,
                       0x04f8609e, 0x05050972, 0x050f8e9e, 0x051adeb2, 0x0526c74e, 0x053f6492, 0x054b293a, 0x05573dde,
                       0x0560fc0e, 0x056be952, 0x057519a6, 0x057e07a6, 0x05883f76, 0x05903646, 0x059bca32, 0x05a6eec6,
                       0x05af32d2, 0x0606f106, 0x060fdd3a, 0x061a77be, 0x062478c6, 0x063061b6, 0x063ab00e, 0x06471a36,
                       0x065094ea, 0x065918e6, 0x06621d36, 0x066b40be, 0x06742ed6, 0x067d0d32, 0x06862082, 0x0692c48a,
                       0x069d221e, 0x06a61202, 0x047a3fd2]),
    DropData("Heart", [0x043c3640, 0x04491810, 0x0455cc90, 0x045e99e8, 0x04677588, 0x048fb184,
                       0x049d3a54, 0x04aa1a70, 0x04b68b18, 0x04c3291c, 0x04cfbd5c, 0x04da5764, 0x04e32800, 0x04ee332c,
                       0x04f860a0, 0x05050974, 0x050f8ea0, 0x051adeb4, 0x0526c750, 0x053f6494, 0x054b293c, 0x05573de0,
                       0x0560fc10, 0x056be954, 0x057519a8, 0x057e07a8, 0x05883f78, 0x05903648, 0x059bca34, 0x05a6eec8,
                       0x05af32d4, 0x0606f108, 0x060fdd3c, 0x061a77c0, 0x062478c8, 0x063061b8, 0x063ab010, 0x06471a38,
                       0x065094ec, 0x065918e8, 0x06621d38, 0x066b40c0, 0x06742ed8, 0x067d0d34, 0x06862084, 0x0692c48c,
                       0x069d2220, 0x06a61204, 0x047a3fd4]),
    DropData("Heart", [0x043c3642, 0x04491812, 0x0455cc92, 0x045e99ea, 0x0467758a, 0x048fb186,
                       0x049d3a56, 0x04aa1a72, 0x04b68b1a, 0x04c3291e, 0x04cfbd5e, 0x04da5766, 0x04e32802, 0x04ee332e,
                       0x04f860a2, 0x05050976, 0x050f8ea2, 0x051adeb6, 0x0526c752, 0x053f6496, 0x054b293e, 0x05573de2,
                       0x0560fc12, 0x056be956, 0x057519aa, 0x057e07aa, 0x05883f7a, 0x0590364a, 0x059bca36, 0x05a6eeca,
                       0x05af32d6, 0x0606f10a, 0x060fdd3e, 0x061a77c2, 0x062478ca, 0x063061ba, 0x063ab012, 0x06471a3a,
                       0x065094ee, 0x065918ea, 0x06621d3a, 0x066b40c2, 0x06742eda, 0x067d0d36, 0x06862086, 0x0692c48e,
                       0x069d2222, 0x06a61206, 0x047a3fd6]),
    DropData("Big heart", [0x043c3644, 0x04491814, 0x0455cc94, 0x045e99ec, 0x0467758c,
                           0x048fb188, 0x049d3a58, 0x04aa1a74, 0x04b68b1c, 0x04c32920, 0x04cfbd60, 0x04da5768,
                           0x04e32804, 0x04ee3330, 0x04f860a4, 0x05050978, 0x050f8ea4, 0x051adeb8, 0x0526c754,
                           0x053f6498, 0x054b2940, 0x05573de4, 0x0560fc14, 0x056be958, 0x057519ac, 0x057e07ac,
                           0x05883f7c, 0x0590364c, 0x059bca38, 0x05a6eecc, 0x05af32d8, 0x0606f10c, 0x060fdd40,
                           0x061a77c4, 0x062478cc, 0x063061bc, 0x063ab014, 0x06471a3c, 0x065094f0, 0x065918ec,
                           0x06621d3c, 0x066b40c4, 0x06742edc, 0x067d0d38, 0x06862088, 0x0692c490, 0x069d2224,
                           0x06a61208, 0x047a3fd8]),
    DropData("Big heart", [0x043c3646, 0x04491816, 0x0455cc96, 0x045e99ee, 0x0467758e,
                           0x048fb18a, 0x049d3a5a, 0x04aa1a76, 0x04b68b1e, 0x04c32922, 0x04cfbd62, 0x04da576a,
                           0x04e32806, 0x04ee3332, 0x04f860a6, 0x0505097a, 0x050f8ea6, 0x051adeba, 0x0526c756,
                           0x053f649a, 0x054b2942, 0x05573de6, 0x0560fc16, 0x056be95a, 0x057519ae, 0x057e07ae,
                           0x05883f7e, 0x0590364e, 0x059bca3a, 0x05a6eece, 0x05af32da, 0x0606f10e, 0x060fdd42,
                           0x061a77c6, 0x062478ce, 0x063061be, 0x063ab016, 0x06471a3e, 0x065094f2, 0x065918ee,
                           0x06621d3e, 0x066b40c6, 0x06742ede, 0x067d0d3a, 0x0686208a, 0x0692c492, 0x069d2226,
                           0x06a6120a, 0x047a3fda]),
    DropData("$1", [0x043c3614, 0x044917e4, 0x0455cc64, 0x045e99bc, 0x0467755c, 0x048fb158,
                    0x049d3a28, 0x04aa1a44, 0x04b68aec, 0x04c328f0, 0x04cfbd30, 0x04da5738, 0x04e327d4, 0x04ee3300,
                    0x04f86074, 0x05050948, 0x050f8e74, 0x051ade88, 0x0526c724, 0x053f6468, 0x054b2910, 0x05573db4,
                    0x0560fbe4, 0x056be928, 0x0575197c, 0x057e077c, 0x05883f4c, 0x0590361c, 0x059bca08, 0x05a6ee9c,
                    0x05af32a8, 0x0606f0dc, 0x060fdd10, 0x061a7794, 0x0624789c, 0x0630618c, 0x063aafe4, 0x06471a0c,
                    0x065094c0, 0x065918bc, 0x06621d0c, 0x066b4094, 0x06742eac, 0x067d0d08, 0x06862058, 0x0692c460,
                    0x069d21f4, 0x06a611d8, 0x047a3fa8]),
    DropData("$1", [0x043c3648, 0x04491818, 0x0455cc98, 0x045e99f0, 0x04677590, 0x048fb18c,
                    0x049d3a5c, 0x04aa1a78, 0x04b68b20, 0x04c32924, 0x04cfbd64, 0x04da576c, 0x04e32808, 0x04ee3334,
                    0x04f860a8, 0x0505097c, 0x050f8ea8, 0x051adebc, 0x0526c758, 0x053f649c, 0x054b2944, 0x05573de8,
                    0x0560fc18, 0x056be95c, 0x057519b0, 0x057e07b0, 0x05883f80, 0x05903650, 0x059bca3c, 0x05a6eed0,
                    0x05af32dc, 0x0606f110, 0x060fdd44, 0x061a77c8, 0x062478d0, 0x063061c0, 0x063ab018, 0x06471a40,
                    0x065094f4, 0x065918f0, 0x06621d40, 0x066b40c8, 0x06742ee0, 0x067d0d3c, 0x0686208c, 0x0692c494,
                    0x069d2228, 0x06a6120c, 0x047a3fdc]),
    DropData("$25", [0x043c3610, 0x044917e0, 0x0455cc60, 0x045e99b8, 0x04677558, 0x048fb154,
                     0x049d3a24, 0x04aa1a40, 0x04b68ae8, 0x04c328ec, 0x04cfbd2c, 0x04da5734, 0x04e327d0, 0x04ee32fc,
                     0x04f86070, 0x05050944, 0x050f8e70, 0x051ade84, 0x0526c720, 0x053f6464, 0x054b290c, 0x05573db0,
                     0x0560fbe0, 0x056be924, 0x05751978, 0x057e0778, 0x05883f48, 0x05903618, 0x059bca04, 0x05a6ee98,
                     0x05af32a4, 0x0606f0d8, 0x060fdd0c, 0x061a7790, 0x06247898, 0x06306188, 0x063aafe0, 0x06471a08,
                     0x065094bc, 0x065918b8, 0x06621d08, 0x066b4090, 0x06742ea8, 0x067d0d04, 0x06862054, 0x0692c45c,
                     0x069d21f0, 0x06a611d4, 0x047a3e74]),
    DropData("$25", [0x043c3616, 0x044917e6, 0x0455cc66, 0x045e99be, 0x0467755e, 0x048fb15a,
                     0x049d3a2a, 0x04aa1a46, 0x04b68aee, 0x04c328f2, 0x04cfbd32, 0x04da573a, 0x04e327d6, 0x04ee3302,
                     0x04f86076, 0x0505094a, 0x050f8e76, 0x051ade8a, 0x0526c726, 0x053f646a, 0x054b2912, 0x05573db6,
                     0x0560fbe6, 0x056be92a, 0x0575197e, 0x057e077e, 0x05883f4e, 0x0590361e, 0x059bca0a, 0x05a6ee9e,
                     0x05af32aa, 0x0606f0de, 0x060fdd12, 0x061a7796, 0x0624789e, 0x0630618e, 0x063aafe6, 0x06471a0e,
                     0x065094c2, 0x065918be, 0x06621d0e, 0x066b4096, 0x06742eae, 0x067d0d0a, 0x0686205a, 0x0692c462,
                     0x069d21f6, 0x06a611da, 0x047a3faa]),
    DropData("$25", [0x043c3618, 0x044917e8, 0x0455cc68, 0x045e99c0, 0x04677560, 0x048fb15c,
                     0x049d3a2c, 0x04aa1a48, 0x04b68af0, 0x04c328f4, 0x04cfbd34, 0x04da573c, 0x04e327d8, 0x04ee3304,
                     0x04f86078, 0x0505094c, 0x050f8e78, 0x051ade8c, 0x0526c728, 0x053f646c, 0x054b2914, 0x05573db8,
                     0x0560fbe8, 0x056be92c, 0x05751980, 0x057e0780, 0x05883f50, 0x05903620, 0x059bca0c, 0x05a6eea0,
                     0x05af32ac, 0x0606f0e0, 0x060fdd14, 0x061a7798, 0x062478a0, 0x06306190, 0x063aafe8, 0x06471a10,
                     0x065094c4, 0x065918c0, 0x06621d10, 0x066b4098, 0x06742eb0, 0x067d0d0c, 0x0686205c, 0x0692c464,
                     0x069d21f8, 0x06a611dc, 0x047a3fac]),
    DropData("$25", [0x043c361a, 0x044917ea, 0x0455cc6a, 0x045e99c2, 0x04677562, 0x048fb15e,
                     0x049d3a2e, 0x04aa1a4a, 0x04b68af2, 0x04c328f6, 0x04cfbd36, 0x04da573e, 0x04e327da, 0x04ee3306,
                     0x04f8607a, 0x0505094e, 0x050f8e7a, 0x051ade8e, 0x0526c72a, 0x053f646e, 0x054b2916, 0x05573dba,
                     0x0560fbea, 0x056be92e, 0x05751982, 0x057e0782, 0x05883f52, 0x05903622, 0x059bca0e, 0x05a6eea2,
                     0x05af32ae, 0x0606f0e2, 0x060fdd16, 0x061a779a, 0x062478a2, 0x06306192, 0x063aafea, 0x06471a12,
                     0x065094c6, 0x065918c2, 0x06621d12, 0x066b409a, 0x06742eb2, 0x067d0d0e, 0x0686205e, 0x0692c466,
                     0x069d21fa, 0x06a611de, 0x047a3fae]),
    DropData("$25", [0x043c361c, 0x044917ec, 0x0455cc6c, 0x045e99c4, 0x04677564, 0x048fb160,
                     0x049d3a30, 0x04aa1a4c, 0x04b68af4, 0x04c328f8, 0x04cfbd38, 0x04da5740, 0x04e327dc, 0x04ee3308,
                     0x04f8607c, 0x05050950, 0x050f8e7c, 0x051ade90, 0x0526c72c, 0x053f6470, 0x054b2918, 0x05573dbc,
                     0x0560fbec, 0x056be930, 0x05751984, 0x057e0784, 0x05883f54, 0x05903624, 0x059bca10, 0x05a6eea4,
                     0x05af32b0, 0x0606f0e4, 0x060fdd18, 0x061a779c, 0x062478a4, 0x06306194, 0x063aafec, 0x06471a14,
                     0x065094c8, 0x065918c4, 0x06621d14, 0x066b409c, 0x06742eb4, 0x067d0d10, 0x06862060, 0x0692c468,
                     0x069d21fc, 0x06a611e0, 0x047a3fb0]),
    DropData("$25", [0x043c361e, 0x044917ee, 0x0455cc6e, 0x045e99c6, 0x04677566, 0x048fb162,
                     0x049d3a32, 0x04aa1a4e, 0x04b68af6, 0x04c328fa, 0x04cfbd3a, 0x04da5742, 0x04e327de, 0x04ee330a,
                     0x04f8607e, 0x05050952, 0x050f8e7e, 0x051ade92, 0x0526c72e, 0x053f6472, 0x054b291a, 0x05573dbe,
                     0x0560fbee, 0x056be932, 0x05751986, 0x057e0786, 0x05883f56, 0x05903626, 0x059bca12, 0x05a6eea6,
                     0x05af32b2, 0x0606f0e6, 0x060fdd1a, 0x061a779e, 0x062478a6, 0x06306196, 0x063aafee, 0x06471a16,
                     0x065094ca, 0x065918c6, 0x06621d16, 0x066b409e, 0x06742eb6, 0x067d0d12, 0x06862062, 0x0692c46a,
                     0x069d21fe, 0x06a611e2, 0x047a3fb2]),
    DropData("$25", [0x043c3620, 0x044917f0, 0x0455cc70, 0x045e99c8, 0x04677568, 0x048fb164,
                     0x049d3a34, 0x04aa1a50, 0x04b68af8, 0x04c328fc, 0x04cfbd3c, 0x04da5744, 0x04e327e0, 0x04ee330c,
                     0x04f86080, 0x05050954, 0x050f8e80, 0x051ade94, 0x0526c730, 0x053f6474, 0x054b291c, 0x05573dc0,
                     0x0560fbf0, 0x056be934, 0x05751988, 0x057e0788, 0x05883f58, 0x05903628, 0x059bca14, 0x05a6eea8,
                     0x05af32b4, 0x0606f0e8, 0x060fdd1c, 0x061a77a0, 0x062478a8, 0x06306198, 0x063aaff0, 0x06471a18,
                     0x065094cc, 0x065918c8, 0x06621d18, 0x066b40a0, 0x06742eb8, 0x067d0d14, 0x06862064, 0x0692c46c,
                     0x069d2200, 0x06a611e4, 0x047a3fb4]),
    DropData("$50", [0x043c3622, 0x044917f2, 0x0455cc72, 0x045e99ca, 0x0467756a, 0x048fb166,
                     0x049d3a36, 0x04aa1a52, 0x04b68afa, 0x04c328fe, 0x04cfbd3e, 0x04da5746, 0x04e327e2, 0x04ee330e,
                     0x04f86082, 0x05050956, 0x050f8e82, 0x051ade96, 0x0526c732, 0x053f6476, 0x054b291e, 0x05573dc2,
                     0x0560fbf2, 0x056be936, 0x0575198a, 0x057e078a, 0x05883f5a, 0x0590362a, 0x059bca16, 0x05a6eeaa,
                     0x05af32b6, 0x0606f0ea, 0x060fdd1e, 0x061a77a2, 0x062478aa, 0x0630619a, 0x063aaff2, 0x06471a1a,
                     0x065094ce, 0x065918ca, 0x06621d1a, 0x066b40a2, 0x06742eba, 0x067d0d16, 0x06862066, 0x0692c46e,
                     0x069d2202, 0x06a611e6, 0x047a3fb6]),
    DropData("$50", [0x043c3624, 0x044917f4, 0x0455cc74, 0x045e99cc, 0x0467756c, 0x048fb168,
                     0x049d3a38, 0x04aa1a54, 0x04b68afc, 0x04c32900, 0x04cfbd40, 0x04da5748, 0x04e327e4, 0x04ee3310,
                     0x04f86084, 0x05050958, 0x050f8e84, 0x051ade98, 0x0526c734, 0x053f6478, 0x054b2920, 0x05573dc4,
                     0x0560fbf4, 0x056be938, 0x0575198c, 0x057e078c, 0x05883f5c, 0x0590362c, 0x059bca18, 0x05a6eeac,
                     0x05af32b8, 0x0606f0ec, 0x060fdd20, 0x061a77a4, 0x062478ac, 0x0630619c, 0x063aaff4, 0x06471a1c,
                     0x065094d0, 0x065918cc, 0x06621d1c, 0x066b40a4, 0x06742ebc, 0x067d0d18, 0x06862068, 0x0692c470,
                     0x069d2204, 0x06a611e8, 0x047a3fb8]),
    DropData("$50", [0x043c3626, 0x044917f6, 0x0455cc76, 0x045e99ce, 0x0467756e, 0x048fb16a,
                     0x049d3a3a, 0x04aa1a56, 0x04b68afe, 0x04c32902, 0x04cfbd42, 0x04da574a, 0x04e327e6, 0x04ee3312,
                     0x04f86086, 0x0505095a, 0x050f8e86, 0x051ade9a, 0x0526c736, 0x053f647a, 0x054b2922, 0x05573dc6,
                     0x0560fbf6, 0x056be93a, 0x0575198e, 0x057e078e, 0x05883f5e, 0x0590362e, 0x059bca1a, 0x05a6eeae,
                     0x05af32ba, 0x0606f0ee, 0x060fdd22, 0x061a77a6, 0x062478ae, 0x0630619e, 0x063aaff6, 0x06471a1e,
                     0x065094d2, 0x065918ce, 0x06621d1e, 0x066b40a6, 0x06742ebe, 0x067d0d1a, 0x0686206a, 0x0692c472,
                     0x069d2206, 0x06a611ea, 0x047a3fba]),
    DropData("$50", [0x043c3628, 0x044917f8, 0x0455cc78, 0x045e99d0, 0x04677570, 0x048fb16c,
                     0x049d3a3c, 0x04aa1a58, 0x04b68b00, 0x04c32904, 0x04cfbd44, 0x04da574c, 0x04e327e8, 0x04ee3314,
                     0x04f86088, 0x0505095c, 0x050f8e88, 0x051ade9c, 0x0526c738, 0x053f647c, 0x054b2924, 0x05573dc8,
                     0x0560fbf8, 0x056be93c, 0x05751990, 0x057e0790, 0x05883f60, 0x05903630, 0x059bca1c, 0x05a6eeb0,
                     0x05af32bc, 0x0606f0f0, 0x060fdd24, 0x061a77a8, 0x062478b0, 0x063061a0, 0x063aaff8, 0x06471a20,
                     0x065094d4, 0x065918d0, 0x06621d20, 0x066b40a8, 0x06742ec0, 0x067d0d1c, 0x0686206c, 0x0692c474,
                     0x069d2208, 0x06a611ec, 0x047a3fbc]),
    DropData("$100", [0x043c362a, 0x044917fa, 0x0455cc7a, 0x045e99d2, 0x04677572, 0x048fb16e,
                      0x049d3a3e, 0x04aa1a5a, 0x04b68b02, 0x04c32906, 0x04cfbd46, 0x04da574e, 0x04e327ea, 0x04ee3316,
                      0x04f8608a, 0x0505095e, 0x050f8e8a, 0x051ade9e, 0x0526c73a, 0x053f647e, 0x054b2926, 0x05573dca,
                      0x0560fbfa, 0x056be93e, 0x05751992, 0x057e0792, 0x05883f62, 0x05903632, 0x059bca1e, 0x05a6eeb2,
                      0x05af32be, 0x0606f0f2, 0x060fdd26, 0x061a77aa, 0x062478b2, 0x063061a2, 0x063aaffa, 0x06471a22,
                      0x065094d6, 0x065918d2, 0x06621d22, 0x066b40aa, 0x06742ec2, 0x067d0d1e, 0x0686206e, 0x0692c476,
                      0x069d220a, 0x06a611ee, 0x047a3fbe]),
    DropData("$100", [0x043c362c, 0x044917fc, 0x0455cc7c, 0x045e99d4, 0x04677574, 0x048fb170,
                      0x049d3a40, 0x04aa1a5c, 0x04b68b04, 0x04c32908, 0x04cfbd48, 0x04da5750, 0x04e327ec, 0x04ee3318,
                      0x04f8608c, 0x05050960, 0x050f8e8c, 0x051adea0, 0x0526c73c, 0x053f6480, 0x054b2928, 0x05573dcc,
                      0x0560fbfc, 0x056be940, 0x05751994, 0x057e0794, 0x05883f64, 0x05903634, 0x059bca20, 0x05a6eeb4,
                      0x05af32c0, 0x0606f0f4, 0x060fdd28, 0x061a77ac, 0x062478b4, 0x063061a4, 0x063aaffc, 0x06471a24,
                      0x065094d8, 0x065918d4, 0x06621d24, 0x066b40ac, 0x06742ec4, 0x067d0d20, 0x06862070, 0x0692c478,
                      0x069d220c, 0x06a611f0, 0x047a3fc0]),
    DropData("$250", [0x043c364a, 0x0449181a, 0x0455cc9a, 0x045e99f2, 0x04677592, 0x048fb18e,
                      0x049d3a5e, 0x04aa1a7a, 0x04b68b22, 0x04c32926, 0x04cfbd66, 0x04da576e, 0x04e3280a, 0x04ee3336,
                      0x04f860aa, 0x0505097e, 0x050f8eaa, 0x051adebe, 0x0526c75a, 0x053f649e, 0x054b2946, 0x05573dea,
                      0x0560fc1a, 0x056be95e, 0x057519b2, 0x057e07b2, 0x05883f82, 0x05903652, 0x059bca3e, 0x05a6eed2,
                      0x05af32de, 0x0606f112, 0x060fdd46, 0x061a77ca, 0x062478d2, 0x063061c2, 0x063ab01a, 0x06471a42,
                      0x065094f6, 0x065918f2, 0x06621d42, 0x066b40ca, 0x06742ee2, 0x067d0d3e, 0x0686208e, 0x0692c496,
                      0x069d222a, 0x06a6120e, 0x047a3fde]),
    DropData("$400", [0x043c364c, 0x0449181c, 0x0455cc9c, 0x045e99f4, 0x04677594, 0x048fb190,
                      0x049d3a60, 0x04aa1a7c, 0x04b68b24, 0x04c32928, 0x04cfbd68, 0x04da5770, 0x04e3280c, 0x04ee3338,
                      0x04f860ac, 0x05050980, 0x050f8eac, 0x051adec0, 0x0526c75c, 0x053f64a0, 0x054b2948, 0x05573dec,
                      0x0560fc1c, 0x056be960, 0x057519b4, 0x057e07b4, 0x05883f84, 0x05903654, 0x059bca40, 0x05a6eed4,
                      0x05af32e0, 0x0606f114, 0x060fdd48, 0x061a77cc, 0x062478d4, 0x063061c4, 0x063ab01c, 0x06471a44,
                      0x065094f8, 0x065918f4, 0x06621d44, 0x066b40cc, 0x06742ee4, 0x067d0d40, 0x06862090, 0x0692c498,
                      0x069d222c, 0x06a61210, 0x047a3fe0]),
    DropData("Meal ticket", [0x043c364e, 0x0449181e, 0x0455cc9e, 0x045e99f6, 0x04677596,
                             0x048fb192, 0x049d3a62, 0x04aa1a7e, 0x04b68b26, 0x04c3292a, 0x04cfbd6a, 0x04da5772,
                             0x04e3280e, 0x04ee333a, 0x04f860ae, 0x05050982, 0x050f8eae, 0x051adec2, 0x0526c75e,
                             0x053f64a2, 0x054b294a, 0x05573dee, 0x0560fc1e, 0x056be962, 0x057519b6, 0x057e07b6,
                             0x05883f86, 0x05903656, 0x059bca42, 0x05a6eed6, 0x05af32e2, 0x0606f116, 0x060fdd4a,
                             0x061a77ce, 0x062478d6, 0x063061c6, 0x063ab01e, 0x06471a46, 0x065094fa, 0x065918f6,
                             0x06621d46, 0x066b40ce, 0x06742ee6, 0x067d0d42, 0x06862092, 0x0692c49a, 0x069d222e,
                             0x06a61212, 0x047a3fe2])
]
