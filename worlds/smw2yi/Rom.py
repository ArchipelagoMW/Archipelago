import Utils
import pdb
from Patch import read_rom, APDeltaPatch
USHASH = 'cb472164c5a71ccd3739963390ec6a50'
ROM_PLAYER_LIMIT = 65535

import hashlib
import os
import pdb
import math







rom_item_sprites = {
    16001: [[0x707E7F, 0x1]], # Spring Ball
    16002: [[0x707E8B, 0x1]], # Large Spring Ball
    16003: [[0x707E82, 0x1]], # ! Switch
    16004: [[0x707E84, 0x1]], # Dashed Platform
    16005: [[0x707E83, 0x1]], # Dashed Stairs
    16007: [[0x707E8A, 0x1]], # Beanstalk
    16008: [[0x707E85, 0x1]], # Helicopter
    16009: [[0x707E87, 0x1]], # Mole Tank
    16010: [[0x707E86, 0x1]], # Car
    16011: [[0x707E88, 0x1]], # Submarine
    16012: [[0x707E89, 0x1]], # Train
}



class LocalRom(object):

    def __init__(self, file, patch=True, vanillaRom=None, name=None, hash=None):
        self.name = name
        self.hash = hash
        self.orig_buffer = None

        with open(file, 'rb') as stream:
            self.buffer = read_rom(stream)
        
    def read_bit(self, address: int, bit_number: int) -> bool:
        bitflag = (1 << bit_number)
        return ((self.buffer[address] & bitflag) != 0)

    def read_byte(self, address: int) -> int:
        return self.buffer[address]

    def read_bytes(self, startaddress: int, length: int) -> bytes:
        return self.buffer[startaddress:startaddress + length]

    def write_byte(self, address: int, value: int):
        self.buffer[address] = value

    def write_bytes(self, startaddress: int, values):
        self.buffer[startaddress:startaddress + len(values)] = values

    def write_to_file(self, file):
        with open(file, 'wb') as outfile:
            outfile.write(self.buffer)

    def read_from_file(self, file):
        with open(file, 'rb') as stream:
            self.buffer = bytearray(stream.read())





def handle_sprite_code(rom):

    #Spring Ball
    rom.write_bytes(0x0282F7, bytearray([0x5C, 0xB0, 0xF7, 0x00])) # JML $00F7B0

        
    rom.write_bytes(0x0077B0, bytearray([0xAF, 0x7F, 0x7E, 0x70]))  #LDA $707E7F
    rom.write_bytes(0x0077B4, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x0077B6, bytearray([0xC9, 0x01])) #CMP #$01
    rom.write_bytes(0x0077B8, bytearray([0xC2, 0x20])) #REP #$20
    rom.write_bytes(0x0077BA, bytearray([0xF0, 0x04])) #BEQ
    rom.write_bytes(0x0077BC, bytearray([0x5C, 0x2E, 0xA3, 0x03])) #JML $03A32E
    rom.write_bytes(0x0077C0, bytearray([0x22, 0x07, 0xA0, 0x00])) #JSL $02A007
    rom.write_bytes(0x0077C4, bytearray([0x5C, 0xFB, 0x82, 0x05])) #JML $0582FB
    #End

    #Chomp Rock
    rom.write_bytes(0x073E94, bytearray([0x5C, 0xD8, 0xF7, 0x00])) #JML $00F7D8

    rom.write_bytes(0x0077D8, bytearray([0xAF, 0x80, 0x7E, 0x70]))  #LDA $707E80
    rom.write_bytes(0x0077DC, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x0077DE, bytearray([0xC9, 0x01])) #CMP #$01
    rom.write_bytes(0x0077E0, bytearray([0xC2, 0x20])) #REP #$20
    rom.write_bytes(0x0077E2, bytearray([0xF0, 0x04])) #BEQ
    rom.write_bytes(0x0077E4, bytearray([0x5C, 0x2E, 0xA3, 0x03])) #JML $03A32E
    rom.write_bytes(0x0077E8, bytearray([0x22, 0x60, 0xAE, 0x03])) #JSL $02A007
    rom.write_bytes(0x0077EC, bytearray([0x5C, 0x98, 0xBE, 0x0E])) #JML $0EBE98
    #End

    #Middle Ring
    rom.write_bytes(0x011383, bytearray([0x5C, 0xF0, 0xF7, 0x00])) #JML $00F7F0

    rom.write_bytes(0x0077F0, bytearray([0xAF, 0x81, 0x7E, 0x70]))  #LDA $707E81
    rom.write_bytes(0x0077F4, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x0077F6, bytearray([0xC9, 0x01])) #CMP #$01
    rom.write_bytes(0x0077F8, bytearray([0xC2, 0x20])) #REP #$20
    rom.write_bytes(0x0077FA, bytearray([0xF0, 0x04])) #BEQ
    rom.write_bytes(0x0077FC, bytearray([0x5C, 0x2E, 0xA3, 0x03])) #JML $03A32E
    rom.write_bytes(0x007800, bytearray([0x22, 0x06, 0xD4, 0x03])) #JSL $03D406
    rom.write_bytes(0x007804, bytearray([0x5C, 0x87, 0x93, 0x02])) #JML $029387
    #End

    #! Switch
    rom.write_bytes(0x0735DC, bytearray([0x5C, 0x08, 0xF8, 0x00])) #JML $00F808

    rom.write_bytes(0x007808, bytearray([0xAF, 0x82, 0x7E, 0x70]))  #LDA $707E82
    rom.write_bytes(0x00780C, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x00780E, bytearray([0xC9, 0x01])) #CMP #$01
    rom.write_bytes(0x007810, bytearray([0xC2, 0x20])) #REP #$20
    rom.write_bytes(0x007812, bytearray([0xF0, 0x04])) #BEQ
    rom.write_bytes(0x007814, bytearray([0x5C, 0x2E, 0xA3, 0x03])) #JML $03A32E
    rom.write_bytes(0x007818, bytearray([0x22, 0x60, 0xAE, 0x03])) #JSL $03AE60
    rom.write_bytes(0x00781C, bytearray([0x5C, 0xE0, 0xB5, 0x0E])) #JML $0EB5E0
    ###########################################################

    
    #Cloud Items (Transformations, Stairs, and beanstalk)
    rom.write_bytes(0x01C1C4, bytearray([0x5C, 0x20, 0xF8, 0x00])) #JML $00F820

    rom.write_bytes(0x007820, bytearray([0xBD, 0x60, 0x73]))
    rom.write_bytes(0x007823, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x007825, bytearray([0xC9, 0xBA]))
    rom.write_bytes(0x007827, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007829, bytearray([0xF0, 0x23]))

    rom.write_bytes(0x00782B, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x00782D, bytearray([0xC9, 0xBB]))
    rom.write_bytes(0x00782F, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007831, bytearray([0xF0, 0x33]))

    rom.write_bytes(0x007833, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x007835, bytearray([0xC9, 0xB1]))
    rom.write_bytes(0x007837, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007839, bytearray([0xF0, 0x43]))

    rom.write_bytes(0x00783B, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x00783D, bytearray([0xC9, 0xB0]))
    rom.write_bytes(0x00783F, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007841, bytearray([0xF0, 0x53]))

    rom.write_bytes(0x007843, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x007845, bytearray([0xC9, 0xAF]))
    rom.write_bytes(0x007847, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007849, bytearray([0xF0, 0x63]))
    rom.write_bytes(0x00784B, bytearray([0x82, 0x78, 0x00]))

    rom.write_bytes(0x00784E, bytearray([0xAF, 0x83, 0x7E, 0x70])) #Stairs
    rom.write_bytes(0x007852, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x007854, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007856, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007858, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x00785A, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x00785E, bytearray([0xBD, 0x60, 0x73, 0x38]))
    rom.write_bytes(0x007862, bytearray([0x5C, 0xC8, 0xC1, 0x03]))

    rom.write_bytes(0x007866, bytearray([0xAF, 0x84, 0x7E, 0x70])) #Platform
    rom.write_bytes(0x00786A, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x00786C, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x00786E, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007870, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007872, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007876, bytearray([0xBD, 0x60, 0x73, 0x38]))
    rom.write_bytes(0x00787A, bytearray([0x5C, 0xC8, 0xC1, 0x03]))

    rom.write_bytes(0x00787E, bytearray([0xAF, 0x85, 0x7E, 0x70])) #Helicopter
    rom.write_bytes(0x007882, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x007884, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007886, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007888, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x00788A, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x00788E, bytearray([0xBD, 0x60, 0x73, 0x38]))
    rom.write_bytes(0x007892, bytearray([0x5C, 0xC8, 0xC1, 0x03]))

    rom.write_bytes(0x007896, bytearray([0xAF, 0x86, 0x7E, 0x70])) #Car
    rom.write_bytes(0x00789A, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x00789C, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x00789E, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0078A0, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x0078A2, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x0078A6, bytearray([0xBD, 0x60, 0x73, 0x38]))
    rom.write_bytes(0x0078AA, bytearray([0x5C, 0xC8, 0xC1, 0x03]))

    rom.write_bytes(0x0078AE, bytearray([0xAF, 0x87, 0x7E, 0x70])) #Mole Tank
    rom.write_bytes(0x0078B2, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x0078B4, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x0078B6, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0078B8, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x0078BA, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x0078BE, bytearray([0xBD, 0x60, 0x73, 0x38]))
    rom.write_bytes(0x0078C2, bytearray([0x5C, 0xC8, 0xC1, 0x03]))



    rom.write_bytes(0x0078C6, bytearray([0xE2, 0x20])) #branch connector
    rom.write_bytes(0x0078C8, bytearray([0xC9, 0xB4]))
    rom.write_bytes(0x0078CA, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0078CC, bytearray([0xF0, 0x20]))
    rom.write_bytes(0x0078CE, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x0078D0, bytearray([0xC9, 0xB2]))
    rom.write_bytes(0x0078D2, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0078D4, bytearray([0xF0, 0x30]))
    rom.write_bytes(0x0078D6, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x0078D8, bytearray([0xC9, 0xC7]))
    rom.write_bytes(0x0078DA, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0078DC, bytearray([0xF0, 0x40]))
    rom.write_bytes(0x0078DE, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x0078E0, bytearray([0xC9, 0xC8]))
    rom.write_bytes(0x0078E2, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0078E4, bytearray([0xF0, 0x38]))
    rom.write_bytes(0x0078E6, bytearray([0xBD, 0x60, 0x73, 0x38]))
    rom.write_bytes(0x0078EA, bytearray([0x5C, 0xC8, 0xC1, 0x03]))
    

    rom.write_bytes(0x0078EE, bytearray([0xAF, 0x88, 0x7E, 0x70])) #Submarine
    rom.write_bytes(0x0078F2, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x0078F4, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x0078F6, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0078F8, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x0078FA, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x0078FE, bytearray([0xBD, 0x60, 0x73, 0x38]))
    rom.write_bytes(0x007902, bytearray([0x5C, 0xC8, 0xC1, 0x03]))    

    rom.write_bytes(0x007906, bytearray([0xAF, 0x89, 0x7E, 0x70])) #Train
    rom.write_bytes(0x00790A, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x00790C, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x00790E, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007910, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007912, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007916, bytearray([0xBD, 0x60, 0x73, 0x38]))
    rom.write_bytes(0x00791A, bytearray([0x5C, 0xC8, 0xC1, 0x03]))

    rom.write_bytes(0x00791E, bytearray([0xAF, 0x8A, 0x7E, 0x70])) #Beanstalk
    rom.write_bytes(0x007922, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x007924, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007926, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007928, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x00792A, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x00792E, bytearray([0xBD, 0x60, 0x73, 0x38]))
    rom.write_bytes(0x007932, bytearray([0x5C, 0xC8, 0xC1, 0x03]))
    ################################################################
    #Large Spring Ball
    rom.write_bytes(0x0282B5, bytearray([0x5C, 0x36, 0xF9, 0x00]))

        
    rom.write_bytes(0x007936, bytearray([0xAF, 0x8B, 0x7E, 0x70]))  #LDA $707E7F
    rom.write_bytes(0x00793A, bytearray([0xE2, 0x20])) #SEP #$20   
    rom.write_bytes(0x00793C, bytearray([0xC9, 0x01])) #CMP #$01
    rom.write_bytes(0x00793E, bytearray([0xC2, 0x20])) #REP #$20
    rom.write_bytes(0x007940, bytearray([0xF0, 0x04])) #BEQ
    rom.write_bytes(0x007942, bytearray([0x5C, 0x2E, 0xA3, 0x03])) #JML $03A32E
    rom.write_bytes(0x007946, bytearray([0xBD, 0x22, 0x77])) #JSL $02A007
    rom.write_bytes(0x007949, bytearray([0x10, 0xE1]))
    rom.write_bytes(0x00794B, bytearray([0x5C, 0xBA, 0x82, 0x05]))
    ####################################################################
    #Melon Trio
    rom.write_bytes(0x020031, bytearray([0x5C, 0x4F, 0xF9, 0x00]))

    rom.write_bytes(0x00794F, bytearray([0xBD, 0x60, 0x73]))
    rom.write_bytes(0x007952, bytearray([0xE2, 0x20]))   
    rom.write_bytes(0x007954, bytearray([0xC9, 0x05]))
    rom.write_bytes(0x007956, bytearray([0xF0, 0x12])) 
    rom.write_bytes(0x007958, bytearray([0xC9, 0x07])) 
    rom.write_bytes(0x00795A, bytearray([0xF0, 0x26]))
    rom.write_bytes(0x00795C, bytearray([0xC9, 0x09])) 
    rom.write_bytes(0x00795E, bytearray([0xF0, 0x3A]))
    rom.write_bytes(0x007960, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007962, bytearray([0x22, 0x23, 0xAF, 0x03]))
    rom.write_bytes(0x007966, bytearray([0x5C, 0x35, 0x80, 0x04]))

    rom.write_bytes(0x00796A, bytearray([0xAF, 0x8C, 0x7E, 0x70])) #Ice Melon
    rom.write_bytes(0x00796E, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007970, bytearray([0xF0, 0x06]))
    rom.write_bytes(0x007972, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007974, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007978, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x00797A, bytearray([0x22, 0x23, 0xAF, 0x03]))
    rom.write_bytes(0x00797E, bytearray([0x5C, 0x35, 0x80, 0x04]))

    rom.write_bytes(0x007982, bytearray([0xAF, 0x8D, 0x7E, 0x70])) #Water Melon
    rom.write_bytes(0x007986, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007988, bytearray([0xF0, 0x06]))
    rom.write_bytes(0x00798A, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x00798C, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007990, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007992, bytearray([0x22, 0x23, 0xAF, 0x03]))
    rom.write_bytes(0x007996, bytearray([0x5C, 0x35, 0x80, 0x04]))

    rom.write_bytes(0x00799A, bytearray([0xAF, 0x8E, 0x7E, 0x70])) #Fire Melon
    rom.write_bytes(0x00799E, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x0079A0, bytearray([0xF0, 0x06]))
    rom.write_bytes(0x0079A2, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0079A4, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x0079A8, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0079AA, bytearray([0x22, 0x23, 0xAF, 0x03]))
    rom.write_bytes(0x0079AE, bytearray([0x5C, 0x35, 0x80, 0x04]))
    ##########################################################################
    #Poochy
    rom.write_bytes(0x039631, bytearray([0x5C, 0xB2, 0xF9, 0x00]))

    rom.write_bytes(0x0079B2, bytearray([0xAF, 0x8F, 0x7E, 0x70]))
    rom.write_bytes(0x0079B6, bytearray([0xE2, 0x20])) #SEP #$20
    rom.write_bytes(0x0079B8, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x0079BA, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0079BC, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x0079BE, bytearray([0x5C, 0x2E, 0xA3, 0x03])) #JML $03A32E
    rom.write_bytes(0x0079C2, bytearray([0xEE, 0x46, 0x0C]))
    rom.write_bytes(0x0079C5, bytearray([0x6B]))
    ##########################################################################
    rom.write_bytes(0x02F07F, bytearray([0x5C, 0xC6, 0xF9, 0x00])) #Arrow Wheels

    rom.write_bytes(0x0079C6, bytearray([0xBD, 0x60, 0x73]))
    rom.write_bytes(0x0079C9, bytearray([0xC9, 0x1E, 0x01]))
    rom.write_bytes(0x0079CC, bytearray([0xF0, 0x0D]))
    rom.write_bytes(0x0079CE, bytearray([0xC9, 0x1F, 0x01]))
    rom.write_bytes(0x0079D1, bytearray([0xF0, 0x22]))
    rom.write_bytes(0x0079D3, bytearray([0x22, 0x60, 0xAE, 0x03]))
    rom.write_bytes(0x0079D7, bytearray([0x5C, 0x83, 0xF0, 0x05]))

    rom.write_bytes(0x0079DB, bytearray([0xE2, 0x20])) #Brown Wheel
    rom.write_bytes(0x0079DD, bytearray([0xAF, 0x90, 0x7E, 0x70]))
    rom.write_bytes(0x0079E1, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x0079E3, bytearray([0xF0, 0x06]))
    rom.write_bytes(0x0079E5, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0079E7, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x0079EB, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x0079ED, bytearray([0x22, 0x60, 0xAE, 0x03]))
    rom.write_bytes(0x0079F1, bytearray([0x5C, 0x83, 0xF0, 0x05]))

    rom.write_bytes(0x0079F5, bytearray([0xE2, 0x20])) #Blue Wheel
    rom.write_bytes(0x0079F7, bytearray([0xAF, 0x91, 0x7E, 0x70]))
    rom.write_bytes(0x0079FB, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x0079FD, bytearray([0xF0, 0x06]))
    rom.write_bytes(0x0079FF, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007A01, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007A05, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007A07, bytearray([0x22, 0x60, 0xAE, 0x03]))
    rom.write_bytes(0x007A0B, bytearray([0x5C, 0x83, 0xF0, 0x05]))
    ###########################################################################
    #Flashing Eggs
    rom.write_bytes(0x01B75E, bytearray([0x5C, 0x0F, 0xFA, 0x00]))

    rom.write_bytes(0x007A0F, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007A11, bytearray([0xAF, 0x92, 0x7E, 0x70]))
    rom.write_bytes(0x007A15, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007A17, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007A19, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007A1B, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007A1F, bytearray([0x9B]))
    rom.write_bytes(0x007A20, bytearray([0xAF, 0x30, 0x00, 0x7E]))
    rom.write_bytes(0x007A24, bytearray([0x29, 0x03, 0x00]))
    rom.write_bytes(0x007A27, bytearray([0x5C, 0x65, 0xB7, 0x03]))
    #########################################################################
    #Super Star
    rom.write_bytes(0x011898, bytearray([0x5C, 0x2B, 0xFA, 0x00]))

    rom.write_bytes(0x007A2B, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007A2D, bytearray([0xAF, 0x93, 0x7E, 0x70]))
    rom.write_bytes(0x007A31, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007A33, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007A35, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007A37, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007A3B, bytearray([0xB9, 0x7C, 0x98]))
    rom.write_bytes(0x007A3E, bytearray([0x9D, 0x20, 0x72]))
    rom.write_bytes(0x007A41, bytearray([0x5C, 0x9E, 0x98, 0x02]))
    #########################################################################
    #Egg Plant
    rom.write_bytes(0x0380C3, bytearray([0x5C, 0x45, 0xFA, 0x00]))

    rom.write_bytes(0x007A45, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007A47, bytearray([0xAF, 0x94, 0x7E, 0x70]))
    rom.write_bytes(0x007A4B, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007A4D, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007A4F, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007A51, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007A55, bytearray([0x22, 0x07, 0xA0, 0x02]))
    rom.write_bytes(0x007A59, bytearray([0x5C, 0xC7, 0x80, 0x07]))
    ##########################################################################
    #Egg Launcher
    rom.write_bytes(0x03B9D4, bytearray([0x5C, 0x5D, 0xFA, 0x00]))

    rom.write_bytes(0x007A5D, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007A5F, bytearray([0xAF, 0x95, 0x7E, 0x70]))
    rom.write_bytes(0x007A63, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007A65, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007A67, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007A69, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007A6D, bytearray([0xA9, 0x08, 0x00]))
    rom.write_bytes(0x007A70, bytearray([0x9D, 0x96, 0x7A]))
    rom.write_bytes(0x007A73, bytearray([0x5C, 0xDA, 0xB9, 0x07]))
    ###########################################################################
    #Bucket
    rom.write_bytes(0x02C46B, bytearray([0x5C, 0x77, 0xFA, 0x00]))

    rom.write_bytes(0x007A77, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007A79, bytearray([0xAF, 0x96, 0x7E, 0x70]))
    rom.write_bytes(0x007A7D, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007A7F, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007A81, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007A83, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007A87, bytearray([0x22, 0x60, 0xAE, 0x03]))
    rom.write_bytes(0x007A8B, bytearray([0x5C, 0x6F, 0xC4, 0x05]))
    ###########################################################################
    #Tulip
    rom.write_bytes(0x0648E3, bytearray([0x5C, 0x8F, 0xFA, 0x00]))

    rom.write_bytes(0x007A8F, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007A91, bytearray([0xAF, 0x97, 0x7E, 0x70]))
    rom.write_bytes(0x007A95, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007A97, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007A99, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007A9B, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007A9F, bytearray([0x22, 0xF8, 0xD3, 0x03]))
    rom.write_bytes(0x007AA3, bytearray([0x5C, 0xE7, 0xC8, 0x0C]))
    ############################################################################
    #Skis
    rom.write_bytes(0x01212A, bytearray([0x5C, 0xA7, 0xFA, 0x00]))

    rom.write_bytes(0x007AA7, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007AA9, bytearray([0xAF, 0x1A, 0x02, 0x7E]))
    rom.write_bytes(0x007AAD, bytearray([0xC9, 0x32]))
    rom.write_bytes(0x007AAF, bytearray([0xD0, 0x0C]))
    rom.write_bytes(0x007AB1, bytearray([0xAF, 0xFC, 0x7F, 0x7F]))
    rom.write_bytes(0x007AB5, bytearray([0xC9, 0xC3]))
    rom.write_bytes(0x007AB7, bytearray([0xD0, 0x04]))
    rom.write_bytes(0x0121B9, bytearray([0x5C, 0xC7, 0xFA, 0x00]))
    rom.write_bytes(0x007ABD, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007ABF, bytearray([0xBD, 0x82, 0x71]))
    rom.write_bytes(0x007AC2, bytearray([0x38]))
    rom.write_bytes(0x007AC3, bytearray([0x5C, 0x2E, 0xA1, 0x02]))
    
    rom.write_bytes(0x007AC7, bytearray([0xAF, 0x98, 0x7E, 0x70]))
    rom.write_bytes(0x007ACB, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007ACD, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007ACF, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007AD1, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007AD5, bytearray([0xBD, 0x82, 0x71]))
    rom.write_bytes(0x007AD8, bytearray([0x38]))
    rom.write_bytes(0x007AD9, bytearray([0x5C, 0x2E, 0xA1, 0x02]))
    ###########################################################################
    #Generic Key
    rom.write_bytes(0x011FE4, bytearray([0x5C, 0xDD, 0xFA, 0x00]))

    rom.write_bytes(0x007ADD, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007ADF, bytearray([0xAF, 0x99, 0x7E, 0x70]))
    rom.write_bytes(0x007AE3, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007AE5, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007AE7, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007AE9, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007AED, bytearray([0xBD, 0x00, 0x79]))
    rom.write_bytes(0x007AF0, bytearray([0x1D, 0x02, 0x79]))
    rom.write_bytes(0x007AF3, bytearray([0x5C, 0xEA, 0x9F, 0x02]))
    ############################################################################
    #Platform Ghost
    rom.write_bytes(0x03708F, bytearray([0x5C, 0xF7, 0xFA, 0x00]))

    rom.write_bytes(0x007AF7, bytearray([0x20, 0x09, 0xFB]))
    rom.write_bytes(0x007AFA, bytearray([0xD0, 0x09]))
    rom.write_bytes(0x007AFC, bytearray([0xAF, 0x9E, 0x44, 0x70]))
    rom.write_bytes(0x007B00, bytearray([0x18]))
    rom.write_bytes(0x007B01, bytearray([0x5C, 0x94, 0xF0, 0x06]))
    rom.write_bytes(0x007B05, bytearray([0x5C, 0x2E, 0xA3, 0x03]))

    rom.write_bytes(0x007B09, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007B0B, bytearray([0xAF, 0x9A, 0x7E, 0x70]))
    rom.write_bytes(0x007B0F, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007B11, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007B13, bytearray([0x60]))

    rom.write_bytes(0x036517, bytearray([0x5C, 0x14, 0xFB, 0x00]))

    rom.write_bytes(0x007B14, bytearray([0x20, 0x09, 0xFB]))
    rom.write_bytes(0x007B17, bytearray([0xD0, 0xEC]))
    rom.write_bytes(0x007B19, bytearray([0xA9, 0x00, 0x01]))
    rom.write_bytes(0x007B1C, bytearray([0x95, 0x18]))
    rom.write_bytes(0x007B1E, bytearray([0x5C, 0x1C, 0xE5, 0x06]))
    ##########################################################################
    #Giant Eggs
    rom.write_bytes(0x03F1CB, bytearray([0x5C, 0x22, 0xFB, 0x00]))

    rom.write_bytes(0x007B22, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007B24, bytearray([0xAF, 0x9B, 0x7E, 0x70]))
    rom.write_bytes(0x007B28, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007B2A, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007B2C, bytearray([0xF0, 0x04]))
    rom.write_bytes(0x007B2E, bytearray([0x5C, 0x2E, 0xA3, 0x03]))
    rom.write_bytes(0x007B32, bytearray([0xA9, 0x18, 0x00]))
    rom.write_bytes(0x007B35, bytearray([0x9D, 0x36, 0x7A]))
    rom.write_bytes(0x007B38, bytearray([0x5C, 0xD1, 0xF1, 0x07]))
    ##########################################################################
    return


def set_starting_world(rom):
    rom.write_bytes(0x085CBB, bytearray([0x5C, 0x13, 0xFC, 0x00]))

    rom.write_bytes(0x007C13, bytearray([0xE2, 0x20])) #Check which world has been set
    rom.write_bytes(0x007C15, bytearray([0x9C, 0x22, 0x02]))
    rom.write_bytes(0x007C18, bytearray([0xAF, 0x4D, 0xFF, 0x07]))
    rom.write_bytes(0x007C1C, bytearray([0xC9, 0x01]))
    rom.write_bytes(0x007C1E, bytearray([0xF0, 0x12]))
    rom.write_bytes(0x007C20, bytearray([0xC9, 0x02]))
    rom.write_bytes(0x007C22, bytearray([0xF0, 0x24]))
    rom.write_bytes(0x007C24, bytearray([0xC9, 0x03]))
    rom.write_bytes(0x007C26, bytearray([0xF0, 0x36]))
    rom.write_bytes(0x007C28, bytearray([0xC9, 0x04]))
    rom.write_bytes(0x007C2A, bytearray([0xF0, 0x48]))
    rom.write_bytes(0x007C2C, bytearray([0xC9, 0x05]))
    rom.write_bytes(0x007C2E, bytearray([0xF0, 0x5A]))
    rom.write_bytes(0x007C30, bytearray([0x80, 0x6E]))

    rom.write_bytes(0x007C32, bytearray([0xA2, 0x00])) #Load World 1 Start
    rom.write_bytes(0x007C34, bytearray([0x20, 0xB6, 0xFC]))
    rom.write_bytes(0x007C37, bytearray([0xA9, 0x00]))
    rom.write_bytes(0x007C39, bytearray([0x8D, 0x18, 0x02]))
    rom.write_bytes(0x007C3C, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007C3E, bytearray([0xA9, 0x81, 0x00]))
    rom.write_bytes(0x007C41, bytearray([0x8D, 0x20, 0x7E]))
    rom.write_bytes(0x007C44, bytearray([0x5C, 0xC1, 0xDC, 0x10]))


    rom.write_bytes(0x007C48, bytearray([0xA2, 0x00])) #Load World 2 Start
    rom.write_bytes(0x007C4A, bytearray([0x20, 0xCA, 0xFC]))
    rom.write_bytes(0x007C4D, bytearray([0xA9, 0x02]))
    rom.write_bytes(0x007C4F, bytearray([0x8D, 0x18, 0x02]))
    rom.write_bytes(0x007C52, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007C54, bytearray([0xA9, 0x81, 0x00]))
    rom.write_bytes(0x007C57, bytearray([0x8D, 0x20, 0x7E]))
    rom.write_bytes(0x007C5A, bytearray([0x5C, 0xC1, 0xDC, 0x10]))


    rom.write_bytes(0x007C5E, bytearray([0xA2, 0x00])) #Load World 3 Start
    rom.write_bytes(0x007C60, bytearray([0x20, 0xDE, 0xFC]))
    rom.write_bytes(0x007C63, bytearray([0xA9, 0x04]))
    rom.write_bytes(0x007C65, bytearray([0x8D, 0x18, 0x02]))
    rom.write_bytes(0x007C68, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007C6A, bytearray([0xA9, 0x81, 0x00]))
    rom.write_bytes(0x007C6D, bytearray([0x8D, 0x20, 0x7E]))
    rom.write_bytes(0x007C70, bytearray([0x5C, 0xC1, 0xDC, 0x10]))


    rom.write_bytes(0x007C74, bytearray([0xA2, 0x00])) #Load World 4 Start
    rom.write_bytes(0x007C76, bytearray([0x20, 0xF2, 0xFC]))
    rom.write_bytes(0x007C79, bytearray([0xA9, 0x06]))
    rom.write_bytes(0x007C7B, bytearray([0x8D, 0x18, 0x02]))
    rom.write_bytes(0x007C7E, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007C80, bytearray([0xA9, 0x81, 0x00]))
    rom.write_bytes(0x007C83, bytearray([0x8D, 0x20, 0x7E]))
    rom.write_bytes(0x007C86, bytearray([0x5C, 0xC1, 0xDC, 0x10]))

    
    rom.write_bytes(0x007C8A, bytearray([0xA2, 0x00])) #Load World 5 Start
    rom.write_bytes(0x007C8C, bytearray([0x20, 0x06, 0xFD]))
    rom.write_bytes(0x007C8F, bytearray([0xA9, 0x08]))
    rom.write_bytes(0x007C91, bytearray([0x8D, 0x18, 0x02]))
    rom.write_bytes(0x007C94, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007C96, bytearray([0xA9, 0x81, 0x00]))
    rom.write_bytes(0x007C99, bytearray([0x8D, 0x20, 0x7E]))
    rom.write_bytes(0x007C9C, bytearray([0x5C, 0xC1, 0xDC, 0x10]))

    rom.write_bytes(0x007CA0, bytearray([0xA2, 0x00])) #Load World 6 Start
    rom.write_bytes(0x007CA2, bytearray([0x20, 0x1A, 0xFD]))
    rom.write_bytes(0x007CA5, bytearray([0xA9, 0x0A]))
    rom.write_bytes(0x007CA7, bytearray([0x8D, 0x18, 0x02]))
    rom.write_bytes(0x007CAA, bytearray([0xC2, 0x20]))
    rom.write_bytes(0x007CAC, bytearray([0xA9, 0x81, 0x00]))
    rom.write_bytes(0x007CAF, bytearray([0x8D, 0x20, 0x7E]))
    rom.write_bytes(0x007CB2, bytearray([0x5C, 0xC1, 0xDC, 0x10]))

    
    return


def set_active_levels(rom):
    rom.write_bytes(0x007CB6, bytearray([0xC2, 0x20])) #World 1
    rom.write_bytes(0x007CB8, bytearray([0xA9, 0x01, 0x01]))
    rom.write_bytes(0x007CBB, bytearray([0x9D, 0x22, 0x02]))
    rom.write_bytes(0x007CBE, bytearray([0x9D, 0x24, 0x02]))
    rom.write_bytes(0x007CC1, bytearray([0x9D, 0x26, 0x02]))
    rom.write_bytes(0x007CC4, bytearray([0x9D, 0x28, 0x02]))
    rom.write_bytes(0x007CC7, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007CC9, bytearray([0x60]))

    rom.write_bytes(0x007CCA, bytearray([0xC2, 0x20])) #World 2
    rom.write_bytes(0x007CCC, bytearray([0xA9, 0x01, 0x01]))
    rom.write_bytes(0x007CCF, bytearray([0x9D, 0x2E, 0x02]))
    rom.write_bytes(0x007CD2, bytearray([0x9D, 0x30, 0x02]))
    rom.write_bytes(0x007CD5, bytearray([0x9D, 0x32, 0x02]))
    rom.write_bytes(0x007CD8, bytearray([0x9D, 0x34, 0x02]))
    rom.write_bytes(0x007CDB, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007CDD, bytearray([0x60]))

    rom.write_bytes(0x007CDE, bytearray([0xC2, 0x20])) #World 3
    rom.write_bytes(0x007CE0, bytearray([0xA9, 0x01, 0x01]))
    rom.write_bytes(0x007CE3, bytearray([0x9D, 0x3A, 0x02]))
    rom.write_bytes(0x007CE6, bytearray([0x9D, 0x3C, 0x02]))
    rom.write_bytes(0x007CE9, bytearray([0x9D, 0x3E, 0x02]))
    rom.write_bytes(0x007CEC, bytearray([0x9D, 0x40, 0x02]))
    rom.write_bytes(0x007CEF, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007CF1, bytearray([0x60]))

    rom.write_bytes(0x007CF2, bytearray([0xC2, 0x20])) #World 4
    rom.write_bytes(0x007CF4, bytearray([0xA9, 0x01, 0x01]))
    rom.write_bytes(0x007CF7, bytearray([0x9D, 0x46, 0x02]))
    rom.write_bytes(0x007CFA, bytearray([0x9D, 0x48, 0x02]))
    rom.write_bytes(0x007CFD, bytearray([0x9D, 0x4A, 0x02]))
    rom.write_bytes(0x007D00, bytearray([0x9D, 0x4C, 0x02]))
    rom.write_bytes(0x007D03, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007D05, bytearray([0x60]))

    rom.write_bytes(0x007D06, bytearray([0xC2, 0x20])) #World 5
    rom.write_bytes(0x007D08, bytearray([0xA9, 0x01, 0x01]))
    rom.write_bytes(0x007D0B, bytearray([0x9D, 0x52, 0x02]))
    rom.write_bytes(0x007D0E, bytearray([0x9D, 0x54, 0x02]))
    rom.write_bytes(0x007D11, bytearray([0x9D, 0x56, 0x02]))
    rom.write_bytes(0x007D14, bytearray([0x9D, 0x58, 0x02]))
    rom.write_bytes(0x007D17, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007D19, bytearray([0x60]))

    rom.write_bytes(0x007D1A, bytearray([0xC2, 0x20])) #World 6
    rom.write_bytes(0x007D1C, bytearray([0xA9, 0x01, 0x01]))
    rom.write_bytes(0x007D1F, bytearray([0x9D, 0x5E, 0x02]))
    rom.write_bytes(0x007D22, bytearray([0x9D, 0x60, 0x02]))
    rom.write_bytes(0x007D25, bytearray([0x9D, 0x62, 0x02]))
    rom.write_bytes(0x007D28, bytearray([0x9D, 0x63, 0x02]))
    rom.write_bytes(0x007D2B, bytearray([0x9E, 0x65, 0x02]))
    rom.write_bytes(0x007D2E, bytearray([0xE2, 0x20]))
    rom.write_bytes(0x007D30, bytearray([0x60]))
    return


def patch_rom(world, rom, player):
    local_random = world.slot_seeds[player]

    
    #Write starting life count to lives on load
    rom.write_bytes(0x0B9933, bytearray([world.starting_lives[player].value - 1]))

    #Write chosen starting world to rom
    rom.write_bytes(0x03FF4D, bytearray([world.starting_world[player].value + 1]))

    handle_sprite_code(rom)
    set_starting_world(rom)
    set_active_levels(rom)

    from Main import __version__
    rom.name = bytearray(f'YI{__version__.replace(".", "")[0:3]}_{player}_{world.seed:11}\0', 'utf8')[:21]
    rom.name.extend([0] * (21 - len(rom.name)))
    rom.write_bytes(0x7FC0, rom.name)



    

class YIDeltaPatch(APDeltaPatch):
    hash = USHASH
    game: str = "Yoshi's Island"
    patch_file_ending = ".apyi"

    @classmethod
    def get_source_data(cls) -> bytes:
        return get_base_rom_bytes()


def get_base_rom_bytes(file_name: str = "") -> bytes:
    base_rom_bytes = getattr(get_base_rom_bytes, "base_rom_bytes", None)
    if not base_rom_bytes:
        file_name = get_base_rom_path(file_name)
        base_rom_bytes = bytes(read_rom(open(file_name, "rb")))

        basemd5 = hashlib.md5()
        basemd5.update(base_rom_bytes)
        if USHASH != basemd5.hexdigest():
            raise Exception('Supplied Base Rom does not match known MD5 for US(1.0) release. '
                            'Get the correct game and version, then dump it')
        get_base_rom_bytes.base_rom_bytes = base_rom_bytes
    return base_rom_bytes

def get_base_rom_path(file_name: str = "") -> str:
    options = Utils.get_options()
    if not file_name:
        file_name = options["yoshis_island_options"]["rom_file"]
    if not os.path.exists(file_name):
        file_name = Utils.local_path(file_name)
    return file_name