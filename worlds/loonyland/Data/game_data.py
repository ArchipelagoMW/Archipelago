# autogenerated from Hamsandwich/tools/archipelago_data_scripts
from BaseClasses import ItemClassification
from worlds.generic.Rules import CollectionRule, add_rule
from worlds.loonyland.entrances import LLEntrance
from worlds.loonyland.items import LLItem, LLItemCat
from worlds.loonyland.locations import LLLocation, LLLocCat
from worlds.loonyland.regions import LLRegion
from worlds.loonyland.rules import (
    can_cleanse_crypts,
    have_39_badges,
    have_all_weapons,
    have_bombs,
    have_light_source,
    have_special_weapon_bullet,
    have_special_weapon_damage,
    hundred_percent,
)

ll_base_id: int = 2876900
VAR_HEART = 0
VAR_LIGHTNING = 20
VAR_ARROW = 30
VAR_PANTS = 40
VAR_QUESTASSIGN = 50
VAR_QUESTDONE = 70
VAR_MUSHROOM = 90
VAR_MYSORB = 100
VAR_WEAPON = 104
VAR_WBOMBS = 104
VAR_WLIGHTNING = 105
VAR_WICE = 106
VAR_WCACTUS = 107
VAR_WBOOMERANG = 108
VAR_WWHOOPEE = 109
VAR_WHOTPANTS = 110
VAR_KEY = 111
VAR_SKULLKEY = 111
VAR_BATKEY = 112
VAR_PUMPKINKEY = 113
VAR_BOOTS = 114
VAR_STICK = 115
VAR_TORCH = 116
VAR_FERTILIZER = 117
VAR_SILVER = 118
VAR_DAISY = 119
VAR_POTION = 120
VAR_VAMPBUST = 121
VAR_CAT = 129
VAR_GEM = 130
VAR_ORBSTAND = 150
VAR_BOOTSALES = 154
VAR_WITCHTALK = 155
VAR_BRIDGEOPEN = 156
VAR_ZOMBIE = 157
VAR_ZOMBIEREWARD = 160
VAR_TRIPLEFIRE = 161
VAR_TALISMAN = 162
VAR_VAMPYWALL = 163
VAR_BATSTATUE = 164
VAR_BATSTAND = 168
VAR_VAMPSTAND = 172
VAR_KNOWWOLVES = 180
VAR_DOLL = 181
VAR_REFLECT = 189
VAR_DOLLGIVEN = 190
VAR_TOWNOPEN = 198
VAR_LEFTBOMB = 199
VAR_HELPERBAT = 200
VAR_TALKBAT = 201
VAR_TALKBRIDGE = 202
VAR_PAIDBRIDGE = 203
VAR_PORTALOPEN = 204
VAR_GAVEDAISY = 205
VAR_DEADELDER = 206
VAR_GATEOUT = 210
VAR_DEADBONK = 211
VAR_SEERTALK = 212
VAR_MINERTALK = 213
VAR_HPSALES = 214
VAR_DEALERTALK = 215
VAR_HIPUZZLE = 216
VAR_WITCHREWARD = 217
VAR_LANTERN = 218
VAR_TREEREWARD = 219
VAR_SILVERSLING = 220
VAR_LARRYREWARD = 221
VAR_CROPSREWARD = 222
VAR_ZOMBIEGEM = 223
ITM_NONE = 0
ITM_TINYHEART = 1
ITM_BIGHEART = 2
ITM_SUPERHEART = 3
ITM_LITTLEGEM = 4
ITM_BIGGEM = 5
ITM_SUPERGEM = 6
ITM_FIREPOWERUP = 7
ITM_RANGEUP = 8
ITM_FIRERATEUP = 9
ITM_KEY = 10
ITM_KEY2 = 11
ITM_KEY3 = 12
ITM_KEY4 = 13
ITM_WBOMB = 14
ITM_WLIGHTNING = 15
ITM_WICE = 16
ITM_WCACTUS = 17
ITM_WBOOMERANG = 18
ITM_WWHOOPEE = 19
ITM_WHOTPANTS = 20
ITM_POTION = 21
ITM_DOOR = 22
ITM_SKULLDOOR = 23
ITM_BATDOOR = 24
ITM_PUMPKINDOOR = 25
ITM_DOOR2 = 26
ITM_SKULLDOOR2 = 27
ITM_BATDOOR2 = 28
ITM_PUMPKINDOOR2 = 29
ITM_TREE1 = 30
ITM_TREE2 = 31
ITM_LAKECAVE = 32
ITM_TABLE = 33
ITM_STOOL = 34
ITM_CHAIR = 35
ITM_CHAIR2 = 36
ITM_CHAIR3 = 37
ITM_CHAIR4 = 38
ITM_CHAIR5 = 39
ITM_BIGCHAIR = 40
ITM_BIGCHAIR2 = 41
ITM_BIGCHAIR3 = 42
ITM_BIGCHAIR4 = 43
ITM_MYSORB = 44
ITM_ORBSTAND = 45
ITM_ORBSTAND2 = 46
ITM_SAVEGEM = 47
ITM_BOTTLE = 48
ITM_BOTTLE2 = 49
ITM_BOTTLE3 = 50
ITM_BOTTLE4 = 51
ITM_BOTTLE5 = 52
ITM_BOTTLE6 = 53
ITM_BOTTLE7 = 54
ITM_BOTTLE8 = 55
ITM_BOTTLE9 = 56
ITM_BOTTLE10 = 57
ITM_BOTTLE11 = 58
ITM_SIGN = 59
ITM_SIGN2 = 60
ITM_SIGN3 = 61
ITM_KNIGHT = 62
ITM_KNIGHT2 = 63
ITM_CLOCK = 64
ITM_CANDLE = 65
ITM_BOOKCASE = 66
ITM_BED = 67
ITM_LOG = 68
ITM_LOG2 = 69
ITM_LOG3 = 70
ITM_TWIG = 71
ITM_ROCK = 72
ITM_ROCKPILE = 73
ITM_BARREL = 74
ITM_BARREL2 = 75
ITM_TREE3 = 76
ITM_TREE4 = 77
ITM_TREE5 = 78
ITM_TREE6 = 79
ITM_TREE7 = 80
ITM_SHROOM = 81
ITM_DAISY = 82
ITM_SILVER = 83
ITM_MAGICPLANT = 84
ITM_WALKPLANT = 85
ITM_SWITCH1ON = 86
ITM_SWITCH1OFF = 87
ITM_SWITCH2 = 88
ITM_GRASS = 89
ITM_GRASS2 = 90
ITM_GRASS3 = 91
ITM_CATTAIL = 92
ITM_LILROCK = 93
ITM_BIGROCK = 94
ITM_BOOMROCK = 95
ITM_TORCH = 96
ITM_GASHOLE = 97
ITM_GASPIPELR = 98
ITM_GASPIPEUD = 99
ITM_GASPIPEDR = 100
ITM_GASPIPEDL = 101
ITM_GASPIPEUR = 102
ITM_GASPIPEUL = 103
ITM_GASSPARK = 104
ITM_GRAVE = 105
ITM_GRAVE2 = 106
ITM_TABLE2 = 107
ITM_AUTODOOR = 108
ITM_AUTODOOR2 = 109
ITM_TALISMAN = 110
ITM_TRIPLEFIRE = 111
ITM_BUSTSTAND = 112
ITM_BUST = 113
ITM_BUSTONSTAND = 114
ITM_BATSTAND = 115
ITM_BAT = 116
ITM_BATONSTAND = 117
ITM_BATDOLL = 118
ITM_SKELDOLL = 119
ITM_FROGDOLL = 120
ITM_GHOSTDOLL = 121
ITM_MUMMYDOLL = 122
ITM_SWAMPDOLL = 123
ITM_VAMPDOLL = 124
ITM_WOLFDOLL = 125
ITM_PORTAL = 126
ITM_BADGE = 127
ITM_CAT = 128
ITM_ZOMBGEM = 129
ITM_BOOTS = 130
ITM_FERTILIZER = 131
ITM_GHOSTPOTION = 132
ITM_LANTERN = 133
ITM_REFLECTGEM = 134
ITM_SILVERSLING = 135
ITM_STICK = 136
ITM_ARCHIPELAGO = 137
BADGE_EVILIZER = 0
BADGE_BOWLING = 1
BADGE_GRAVES = 2
BADGE_GEMS = 3
BADGE_MONSTERPTS = 4
BADGE_MONSTERPTS2 = 5
BADGE_POLTERGUY = 6
BADGE_DARKNESS = 7
BADGE_BESTRANK = 8
BADGE_LOONYBALL = 9
BADGE_BOSSBASH = 10
BADGE_BONKULA = 11
BADGE_SNEAK = 12
BADGE_WITCH = 13
BADGE_WOLFDEN = 14
BADGE_ANNOY = 15
BADGE_RESCUE = 16
BADGE_WINGAME = 17
BADGE_COMBO = 18
BADGE_ROCKS = 19
BADGE_HIDDEN = 20
BADGE_TERRORSRV = 21
BADGE_KILLALL = 22
BADGE_HUNDREDPCT = 23
BADGE_SURVIVAL = 24
BADGE_LARRY = 25
BADGE_TERROR = 26
BADGE_FRANKENJ = 27
BADGE_SURVCOMBO = 28
BADGE_CATTAILS = 29
BADGE_REMIX = 30
BADGE_WITCHCRAFT = 31
BADGE_THIEF = 32
BADGE_SURV100 = 33
BADGE_RIOT = 34
BADGE_SWAMPDOG = 35
BADGE_SCORE = 36
BADGE_BRAWL = 37
BADGE_HIDDEN2 = 38
BADGE_MASTER = 39
CH_LIGHT = 0
CH_DISCO = 1
CH_TERROR = 2
CH_SURPRISE = 3
CH_QUICK = 4
CH_GEMS = 5
CH_SIDEKICK = 6
CH_HOMING = 7
CH_MAXPOWER = 8
CH_VINTAGE = 9
CH_BONKULA = 10
CH_TOAD = 11
CH_CRYSTAL = 12
CH_RADAR = 13
CH_HEAVYHIT = 14
CH_RAPIDFIRE = 15
CH_DEATH = 16
CH_ALLACCESS = 17
CH_SWAMPDOG = 18
CH_HARDCORE = 19
CH_SAVEANY = 20
CH_GUIDED = 21
CH_SLOMO = 22
CH_CORPSE = 23
CH_FROGWPN = 24
CH_WITCH = 25
CH_WEREWOLF = 26
CH_RESPAWN = 27
CH_KICKCAT = 28
CH_RNDSURVIVAL = 29
CH_SUMMON = 30
CH_THIEF = 31
CH_WALLWALK = 32
CH_SUPERSURV = 33
CH_BEND = 34
CH_STINKY = 35
CH_ULTRAWEAPON = 36
CH_THORNS = 37
CH_REGEN = 38
CH_NOFARLEY = 39
AP_BADGEMOD = 1000
loony_item_table: dict[str, LLItem] = {
    "Heart": LLItem(ll_base_id + VAR_HEART, LLItemCat.ITEM, ItemClassification.useful, 20),
    "Lightning": LLItem(ll_base_id + VAR_LIGHTNING, LLItemCat.ITEM, ItemClassification.useful, 10),
    "Arrow": LLItem(ll_base_id + VAR_ARROW, LLItemCat.ITEM, ItemClassification.useful, 10),
    "Pants": LLItem(ll_base_id + VAR_PANTS, LLItemCat.ITEM, ItemClassification.useful, 10),
    "Mushroom": LLItem(ll_base_id + VAR_MUSHROOM, LLItemCat.ITEM, ItemClassification.progression, 10),
    "Orb": LLItem(ll_base_id + VAR_MYSORB, LLItemCat.ITEM, ItemClassification.progression, 4),
    "Bombs": LLItem(ll_base_id + VAR_WBOMBS, LLItemCat.ITEM, ItemClassification.progression),
    "Shock Wand": LLItem(ll_base_id + VAR_WLIGHTNING, LLItemCat.ITEM, ItemClassification.progression),
    "Ice Spear": LLItem(ll_base_id + VAR_WICE, LLItemCat.ITEM, ItemClassification.progression),
    "Cactus": LLItem(ll_base_id + VAR_WCACTUS, LLItemCat.ITEM, ItemClassification.progression),
    "Boomerang": LLItem(ll_base_id + VAR_WBOOMERANG, LLItemCat.ITEM, ItemClassification.progression),
    "Whoopee": LLItem(ll_base_id + VAR_WWHOOPEE, LLItemCat.ITEM, ItemClassification.progression),
    "Hot Pants": LLItem(ll_base_id + VAR_WHOTPANTS, LLItemCat.ITEM, ItemClassification.progression),
    "Skull Key": LLItem(ll_base_id + VAR_SKULLKEY, LLItemCat.ITEM, ItemClassification.progression),
    "Bat Key": LLItem(ll_base_id + VAR_BATKEY, LLItemCat.ITEM, ItemClassification.progression),
    "Pumpkin Key": LLItem(ll_base_id + VAR_PUMPKINKEY, LLItemCat.ITEM, ItemClassification.progression),
    "Boots": LLItem(ll_base_id + VAR_BOOTS, LLItemCat.ITEM, ItemClassification.progression),
    "Stick": LLItem(ll_base_id + VAR_STICK, LLItemCat.ITEM, ItemClassification.progression),
    "Fertilizer": LLItem(ll_base_id + VAR_FERTILIZER, LLItemCat.ITEM, ItemClassification.progression),
    "Silver": LLItem(ll_base_id + VAR_SILVER, LLItemCat.ITEM, ItemClassification.progression),
    "Doom Daisy": LLItem(ll_base_id + VAR_DAISY, LLItemCat.ITEM, ItemClassification.progression),
    "Ghost Potion": LLItem(ll_base_id + VAR_POTION, LLItemCat.ITEM, ItemClassification.progression),
    "Vampire Bust": LLItem(ll_base_id + VAR_VAMPBUST, LLItemCat.ITEM, ItemClassification.progression, 8),
    "Cat": LLItem(ll_base_id + VAR_CAT, LLItemCat.ITEM, ItemClassification.progression),
    "Big Gem": LLItem(ll_base_id + VAR_GEM, LLItemCat.ITEM, ItemClassification.progression, 6),
    "100 Gems": LLItem(ll_base_id + VAR_ZOMBIEGEM, LLItemCat.ITEM, ItemClassification.filler),
    "Triple Fire Gem": LLItem(ll_base_id + VAR_TRIPLEFIRE, LLItemCat.ITEM, ItemClassification.useful),
    "Happy Stick": LLItem(ll_base_id + VAR_TALISMAN, LLItemCat.ITEM, ItemClassification.progression),
    "Bat Statue": LLItem(ll_base_id + VAR_BATSTATUE, LLItemCat.ITEM, ItemClassification.progression, 4),
    "Lantern": LLItem(ll_base_id + VAR_LANTERN, LLItemCat.ITEM, ItemClassification.progression),
    "Reflect Gem": LLItem(ll_base_id + VAR_REFLECT, LLItemCat.ITEM, ItemClassification.useful),
    "Silver Sling": LLItem(ll_base_id + VAR_SILVERSLING, LLItemCat.ITEM, ItemClassification.progression),
    "20/20 Vision": LLItem(ll_base_id + CH_LIGHT, LLItemCat.CHEAT, ItemClassification.progression),
    "Disco Mode": LLItem(ll_base_id + CH_DISCO, LLItemCat.CHEAT, ItemClassification.filler),
    "Terror Mode": LLItem(ll_base_id + CH_TERROR, LLItemCat.CHEAT, ItemClassification.progression),
    "Surprise Mode": LLItem(ll_base_id + CH_SURPRISE, LLItemCat.CHEAT, ItemClassification.progression),
    "Quick Mode": LLItem(ll_base_id + CH_QUICK, LLItemCat.CHEAT, ItemClassification.useful),
    "Infinite Gems": LLItem(ll_base_id + CH_GEMS, LLItemCat.CHEAT, ItemClassification.useful),
    "Sidekick": LLItem(ll_base_id + CH_SIDEKICK, LLItemCat.CHEAT, ItemClassification.filler),
    "Homing Shots": LLItem(ll_base_id + CH_HOMING, LLItemCat.CHEAT, ItemClassification.useful),
    "Ultimate Firepower": LLItem(ll_base_id + CH_MAXPOWER, LLItemCat.CHEAT, ItemClassification.filler),
    "Vintage Mode": LLItem(ll_base_id + CH_VINTAGE, LLItemCat.CHEAT, ItemClassification.useful),
    "Play As Bonkula": LLItem(ll_base_id + CH_BONKULA, LLItemCat.CHEAT, ItemClassification.useful),
    "Play As Toad": LLItem(ll_base_id + CH_TOAD, LLItemCat.CHEAT, ItemClassification.useful),
    "Crystal Ball": LLItem(ll_base_id + CH_CRYSTAL, LLItemCat.CHEAT, ItemClassification.useful),
    "Radar": LLItem(ll_base_id + CH_RADAR, LLItemCat.CHEAT, ItemClassification.useful),
    "Heavy Hitter": LLItem(ll_base_id + CH_HEAVYHIT, LLItemCat.CHEAT, ItemClassification.useful),
    "Rapid Fire": LLItem(ll_base_id + CH_RAPIDFIRE, LLItemCat.CHEAT, ItemClassification.filler),
    "Touch Of Death": LLItem(ll_base_id + CH_DEATH, LLItemCat.CHEAT, ItemClassification.progression),
    "All Access Pass": LLItem(ll_base_id + CH_ALLACCESS, LLItemCat.CHEAT, ItemClassification.filler),
    "Play As Swampdog": LLItem(ll_base_id + CH_SWAMPDOG, LLItemCat.CHEAT, ItemClassification.progression),
    "Hardcore Mode": LLItem(ll_base_id + CH_HARDCORE, LLItemCat.CHEAT, ItemClassification.filler),
    "Save Anywhere": LLItem(ll_base_id + CH_SAVEANY, LLItemCat.CHEAT, ItemClassification.useful),
    "Guided Shots": LLItem(ll_base_id + CH_GUIDED, LLItemCat.CHEAT, ItemClassification.useful),
    "Slo-Mo": LLItem(ll_base_id + CH_SLOMO, LLItemCat.CHEAT, ItemClassification.useful),
    "Combo-Bombo": LLItem(ll_base_id + CH_CORPSE, LLItemCat.CHEAT, ItemClassification.useful),
    "Frog-o-rama": LLItem(ll_base_id + CH_FROGWPN, LLItemCat.CHEAT, ItemClassification.filler),
    "Play As Witch": LLItem(ll_base_id + CH_WITCH, LLItemCat.CHEAT, ItemClassification.progression),
    "Play As Werewolf": LLItem(ll_base_id + CH_WEREWOLF, LLItemCat.CHEAT, ItemClassification.useful),
    "Enemy Overload": LLItem(ll_base_id + CH_RESPAWN, LLItemCat.CHEAT, ItemClassification.filler),
    "Kick The Cat!": LLItem(ll_base_id + CH_KICKCAT, LLItemCat.CHEAT, ItemClassification.filler),
    "Infinite Survival": LLItem(ll_base_id + CH_RNDSURVIVAL, LLItemCat.CHEAT, ItemClassification.progression),
    "Play As Summony": LLItem(ll_base_id + CH_SUMMON, LLItemCat.CHEAT, ItemClassification.useful),
    "Play As Ninja Girl": LLItem(ll_base_id + CH_THIEF, LLItemCat.CHEAT, ItemClassification.progression),
    "Molecular Dispersion": LLItem(ll_base_id + CH_WALLWALK, LLItemCat.CHEAT, ItemClassification.progression),
    "Guaranteed Survival": LLItem(ll_base_id + CH_SUPERSURV, LLItemCat.CHEAT, ItemClassification.useful),
    "Bend It Like Bouapha": LLItem(ll_base_id + CH_BEND, LLItemCat.CHEAT, ItemClassification.useful),
    "Stinky Farley": LLItem(ll_base_id + CH_STINKY, LLItemCat.CHEAT, ItemClassification.useful),
    "Ultra Weapons Are Go!": LLItem(ll_base_id + CH_ULTRAWEAPON, LLItemCat.CHEAT, ItemClassification.useful),
    "Thorns Aura": LLItem(ll_base_id + CH_THORNS, LLItemCat.CHEAT, ItemClassification.useful),
    "Monster Regeneration": LLItem(ll_base_id + CH_REGEN, LLItemCat.CHEAT, ItemClassification.filler),
    "Farley Free Zone": LLItem(ll_base_id + CH_NOFARLEY, LLItemCat.CHEAT, ItemClassification.filler),
}
loonyland_region_table: dict[str, LLRegion] = {
    "Menu": LLRegion(False),
    "Halloween Hill": LLRegion(True),
    "Slurpy Swamp Mud": LLRegion(False, "Halloween Hill"),
    "Slurpy Swamp Mud North Warp": LLRegion(False, "Halloween Hill"),
    "Slurpy Swamp Mud East Warp": LLRegion(False, "Halloween Hill"),
    "Zombiton": LLRegion(False, "Halloween Hill"),
    "Rocky Cliffs": LLRegion(False, "Halloween Hill"),
    "Vampy Land": LLRegion(False, "Halloween Hill"),
    "A Cabin Trees": LLRegion(True, "A Cabin"),
    "The Witch's Cabin": LLRegion(True),
    "The Witch's Cabin Back": LLRegion(False, "The Witch's Cabin"),
    "Bonita's Cabin": LLRegion(True),
    "The Bog Pit": LLRegion(True),
    "Underground Tunnel": LLRegion(True),
    "Underground Tunnel Mud": LLRegion(False, "Underground Tunnel"),
    "Underground Tunnel Zombie": LLRegion(False, "Underground Tunnel"),
    "Swamp Gas Cavern": LLRegion(True),
    "Swamp Gas Cavern Back": LLRegion(False, "Swamp Gas Cavern"),
    "A Tiny Cabin": LLRegion(True),
    "A Cabin Seer": LLRegion(True),
    "Benny's Cocktails": LLRegion(True),
    "Dusty Crypt": LLRegion(True),
    "Dusty Crypt Entrance": LLRegion(False, "Dusty Crypt"),
    "Musty Crypt": LLRegion(True),
    "Musty Crypt Entrance": LLRegion(False, "Musty Crypt"),
    "Rusty Crypt": LLRegion(True),
    "Rusty Crypt Entrance": LLRegion(False, "Rusty Crypt"),
    "A Messy Cabin": LLRegion(True),
    "Under The Lake": LLRegion(True),
    "Under The Lake Entrance": LLRegion(False, "Under The Lake"),
    "Under The Lake Exit": LLRegion(False, "Under The Lake"),
    "Deeper Under The Lake": LLRegion(True),
    "Frankenjulie's Laboratory": LLRegion(True),
    "Haunted Tower": LLRegion(True),
    "Haunted Tower Entrance": LLRegion(False),
    "Haunted Tower Stairs Up": LLRegion(False),
    "Haunted Tower Stairs Down": LLRegion(False),
    "Haunted Tower Floor 2": LLRegion(True),
    "Haunted Tower Floor 2 Entrance": LLRegion(False),
    "Haunted Tower Floor 2 Exit": LLRegion(False),
    "Haunted Tower Floor 3 Entrance": LLRegion(False),
    "Haunted Tower Floor 3 Exit": LLRegion(False),
    "Haunted Tower Floor 3": LLRegion(True),
    "Haunted Tower Roof": LLRegion(True),
    "Haunted Basement": LLRegion(True),
    "Haunted Basement Entrance": LLRegion(False, "Haunted Basement"),
    "Abandoned Mines": LLRegion(True),
    "Abandoned Mines Entrance": LLRegion(False, "Abandoned Mines"),
    "The Shrine Of Bombulus": LLRegion(True),
    "A Gloomy Cavern": LLRegion(True),
    "A Gloomy Cavern Entrance": LLRegion(False, "A Gloomy Cavern"),
    "Happy Stick Woods": LLRegion(True),
    "The Wolf Den": LLRegion(True),
    "The Wolf Den Entrance": LLRegion(False, "The Wolf Den"),
    "The Wolf Den Exit": LLRegion(False, "The Wolf Den"),
    "A Cabin Larry": LLRegion(True),
    "Upper Creepy Caverns": LLRegion(True),
    "Upper Creepy Caverns Left Warp": LLRegion(False, "Upper Creepy Caverns"),
    "Upper Creepy Caverns Middle Warp": LLRegion(False, "Upper Creepy Caverns"),
    "Upper Creepy Caverns Right Warp": LLRegion(False, "Upper Creepy Caverns"),
    "Under The Ravine": LLRegion(True),
    "Creepy Caverns Left": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Left Bottom Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Left Top Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Middle": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Middle Top Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Middle Right Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Right": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Right Left Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Right Bottom Warp": LLRegion(False, "Creepy Caverns"),
    "Castle Vampy": LLRegion(True),
    "Castle Vampy Skull Jail": LLRegion(False, "Castle Vampy"),
    "Castle Vampy II": LLRegion(True),
    "Castle Vampy II NW": LLRegion(False, "Castle Vampy II"),
    "Castle Vampy II NE": LLRegion(False, "Castle Vampy II"),
    "Castle Vampy II SW": LLRegion(False, "Castle Vampy II"),
    "Castle Vampy II SE": LLRegion(False, "Castle Vampy II"),
    "Castle Vampy II Bat Jail": LLRegion(False, "Castle Vampy II"),
    "Cabin In The Woods": LLRegion(True),
    "Castle Vampy III": LLRegion(True),
    "Castle Vampy III NW": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy III NE": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy III SW": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy III SE": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy III Pumpkin Jail": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy IV": LLRegion(True),
    "Castle Vampy IV NW": LLRegion(False, "Castle Vampy IV"),
    "Castle Vampy IV NE": LLRegion(False, "Castle Vampy IV"),
    "Castle Vampy IV SW": LLRegion(False, "Castle Vampy IV"),
    "Castle Vampy IV SE": LLRegion(False, "Castle Vampy IV"),
    "A Cabin Collector": LLRegion(True),
    "Castle Vampy Roof NE": LLRegion(True, "Castle Vampy Roof"),
    "Castle Vampy Roof SE": LLRegion(True, "Castle Vampy Roof"),
    "Castle Vampy Roof SW": LLRegion(True, "Castle Vampy Roof"),
    "Castle Vampy Roof NW": LLRegion(True, "Castle Vampy Roof"),
    "The Evilizer": LLRegion(True),
    "The Heart Of Terror": LLRegion(True),
    "The Heart Of Terror Entrance": LLRegion(False, "The Heart Of Terror"),
    "A Hidey-Hole": LLRegion(True),
    "Empty Rooftop": LLRegion(True),
    "Swampdog Lair": LLRegion(True),
    "Swampdog Lair Entrance": LLRegion(False, "Swampdog Lair"),
    "Larry's Lair": LLRegion(True),
    "Bowling": LLRegion(False),
    "Survival": LLRegion(False),
    "Boss Bash": LLRegion(False),
    "Loony Ball": LLRegion(False),
    "Remix": LLRegion(False),
}
loonyland_location_table: dict[str, LLLocation] = {
    "Swamp: Mud Path": LLLocation(0, LLLocCat.PICKUP, "Slurpy Swamp Mud"),
    "Swamp: Bog Beast": LLLocation(1, LLLocCat.PICKUP, "Halloween Hill"),
    "Rocky Cliffs: Upper Ledge": LLLocation(2, LLLocCat.PICKUP, "Rocky Cliffs"),
    "Swamp: Sapling Shrine": LLLocation(3, LLLocCat.PICKUP, "Slurpy Swamp Mud"),
    "Terror Glade: South Trees": LLLocation(4, LLLocCat.PICKUP, "Halloween Hill"),
    "Rocky Cliffs: Vine": LLLocation(5, LLLocCat.PICKUP, "Rocky Cliffs"),
    "Rocky Cliffs: Grand Pharoh": LLLocation(6, LLLocCat.PICKUP, "Rocky Cliffs"),
    "Rocky Cliffs: Rock Corner": LLLocation(7, LLLocCat.PICKUP, "Rocky Cliffs"),
    "Swamp: Outside Luniton": LLLocation(8, LLLocCat.PICKUP, "Halloween Hill"),
    "Swamp: East 1": LLLocation(9, LLLocCat.PICKUP, "Halloween Hill"),
    "Swamp: Top Left dry": LLLocation(10, LLLocCat.PICKUP, "Halloween Hill"),
    "Swamp: East 2": LLLocation(11, LLLocCat.PICKUP, "Halloween Hill"),
    "Woods: Above Castle": LLLocation(12, LLLocCat.PICKUP, "Halloween Hill"),
    "Rocky Cliffs: Entrance Ledge": LLLocation(13, LLLocCat.PICKUP, "Rocky Cliffs"),
    "Rocky Cliffs: Peak": LLLocation(14, LLLocCat.PICKUP, "Rocky Cliffs"),
    "Woods: SW of Cabin": LLLocation(15, LLLocCat.PICKUP, "Halloween Hill"),
    "Witch's Cabin: Bedroom": LLLocation(16, LLLocCat.PICKUP, "The Witch's Cabin"),
    "Witch's Cabin: Backroom": LLLocation(17, LLLocCat.PICKUP, "The Witch's Cabin Back"),
    "Bonita's Cabin: Barrel Maze": LLLocation(18, LLLocCat.PICKUP, "Bonita's Cabin"),
    "Bog Pit: Top Door": LLLocation(19, LLLocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Posts Room": LLLocation(20, LLLocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Drippy Window": LLLocation(21, LLLocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Green room": LLLocation(22, LLLocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Arena": LLLocation(23, LLLocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Sw Switch": LLLocation(24, LLLocCat.PICKUP, "The Bog Pit"),
    "Tunnel: Swampdog Pumpkin Door": LLLocation(25, LLLocCat.PICKUP, "Underground Tunnel"),
    "Tunnel: Scratch Wall": LLLocation(26, LLLocCat.PICKUP, "Underground Tunnel"),
    "Tunnel: Narrow Passage": LLLocation(27, LLLocCat.PICKUP, "Underground Tunnel"),
    "Tunnel: Top Frogs": LLLocation(28, LLLocCat.PICKUP, "Underground Tunnel"),
    "Tunnel: Torch Island": LLLocation(29, LLLocCat.PICKUP, "Underground Tunnel Mud"),
    "Tunnel: Small Room": LLLocation(30, LLLocCat.PICKUP, "Underground Tunnel"),
    "Swamp Gas: Scratch Wall": LLLocation(31, LLLocCat.PICKUP, "Swamp Gas Cavern"),
    "Swamp Gas: Bat Door": LLLocation(32, LLLocCat.PICKUP, "Swamp Gas Cavern"),
    "Swamp Gas: Stair room": LLLocation(33, LLLocCat.PICKUP, "Swamp Gas Cavern Back"),
    "Swamp Gas: Rock Prison": LLLocation(34, LLLocCat.PICKUP, "Swamp Gas Cavern"),
    "A Tiny Cabin": LLLocation(35, LLLocCat.PICKUP, "A Tiny Cabin"),
    "Seer: Bedside": LLLocation(36, LLLocCat.PICKUP, "A Cabin Seer"),
    "Dusty Crypt: Pumpkin Door": LLLocation(37, LLLocCat.PICKUP, "Dusty Crypt"),
    "Dusty Crypt: Maze": LLLocation(38, LLLocCat.PICKUP, "Dusty Crypt"),
    "Musty Crypt: Maze Room": LLLocation(39, LLLocCat.PICKUP, "Musty Crypt"),
    "Rusty Crypt: Vine": LLLocation(40, LLLocCat.PICKUP, "Rusty Crypt"),
    "Rusty Crypt: Boulders": LLLocation(41, LLLocCat.PICKUP, "Rusty Crypt"),
    "A Messy Cabin": LLLocation(42, LLLocCat.PICKUP, "A Messy Cabin"),
    "Under The Lake: Behind Lightning Rod": LLLocation(43, LLLocCat.PICKUP, "Under The Lake"),
    "Under The Lake: Bat Door": LLLocation(44, LLLocCat.PICKUP, "Under The Lake"),
    "Deeper Lake: Corner": LLLocation(45, LLLocCat.PICKUP, "Deeper Under The Lake"),
    "Deeper Lake: Rhombus": LLLocation(46, LLLocCat.PICKUP, "Deeper Under The Lake"),
    "Frankenjulie's Reward": LLLocation(47, LLLocCat.PICKUP, "Frankenjulie's Laboratory"),
    "Tower: Barracks": LLLocation(48, LLLocCat.PICKUP, "Haunted Tower"),
    "Tower F2: Skull Puzzle": LLLocation(49, LLLocCat.PICKUP, "Haunted Tower Floor 2"),
    "PolterGuy's Reward": LLLocation(50, LLLocCat.PICKUP, "Haunted Tower Roof"),
    "Tower Basement: DoorDoorDoorDoorDoorDoor": LLLocation(51, LLLocCat.PICKUP, "Haunted Basement"),
    "Abandoned Mine: Shaft": LLLocation(52, LLLocCat.PICKUP, "Abandoned Mines"),
    "Shrine of Bombulus: Prize": LLLocation(53, LLLocCat.PICKUP, "The Shrine Of Bombulus"),
    "Gloomy Cavern: Lockpick": LLLocation(54, LLLocCat.PICKUP, "A Gloomy Cavern"),
    "Happy Stick: Hidden": LLLocation(55, LLLocCat.PICKUP, "Happy Stick Woods"),
    "Happy Stick: Reward": LLLocation(56, LLLocCat.PICKUP, "Happy Stick Woods"),
    "Wolf Den: Top Left": LLLocation(57, LLLocCat.PICKUP, "The Wolf Den"),
    "Wolf Den: Pumpkin Door": LLLocation(58, LLLocCat.PICKUP, "The Wolf Den"),
    "Wolf Den: Vine": LLLocation(59, LLLocCat.PICKUP, "The Wolf Den"),
    "Upper Cavern: Three Gold Skeletons": LLLocation(60, LLLocCat.PICKUP, "Upper Creepy Caverns"),
    "Under The Ravine: Left Vine": LLLocation(61, LLLocCat.PICKUP, "Under The Ravine"),
    "Under The Ravine: Right Vine": LLLocation(62, LLLocCat.PICKUP, "Under The Ravine"),
    "Creepy Caverns M: Pharaoh Bat Door": LLLocation(63, LLLocCat.PICKUP, "Creepy Caverns Middle"),
    "Creepy Caverns R: Top Pharaohs": LLLocation(64, LLLocCat.PICKUP, "Creepy Caverns Right"),
    "Creepy Caverns M: Gargoyles": LLLocation(65, LLLocCat.PICKUP, "Creepy Caverns Middle"),
    "Castle Vampy: Top Room": LLLocation(66, LLLocCat.PICKUP, "Castle Vampy"),
    "Castle Vampy: Maze": LLLocation(67, LLLocCat.PICKUP, "Castle Vampy"),
    "Castle Vampy: Gauntlet": LLLocation(68, LLLocCat.PICKUP, "Castle Vampy"),
    "Castle Vampy: Bat Closet": LLLocation(69, LLLocCat.PICKUP, "Castle Vampy"),
    "Castle Vampy II: Candle Room": LLLocation(70, LLLocCat.PICKUP, "Castle Vampy II"),
    "Castle Vampy II: Bloodsucker Room": LLLocation(71, LLLocCat.PICKUP, "Castle Vampy II"),
    "Castle Vampy II: Vampire Lord": LLLocation(72, LLLocCat.PICKUP, "Castle Vampy II"),
    "Castle Vampy II: Bat Room": LLLocation(73, LLLocCat.PICKUP, "Castle Vampy II"),
    "Cabin in the Woods: Gold Skull": LLLocation(74, LLLocCat.PICKUP, "Cabin In The Woods"),
    "Castle Vampy III: Center": LLLocation(75, LLLocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy III: Behind the Pews": LLLocation(76, LLLocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy III: AMBUSH!": LLLocation(77, LLLocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy III: Halloween": LLLocation(78, LLLocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy III: Bat room": LLLocation(79, LLLocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy IV: Right Path": LLLocation(80, LLLocCat.PICKUP, "Castle Vampy IV"),
    "Castle Vampy IV: Left Path": LLLocation(81, LLLocCat.PICKUP, "Castle Vampy IV"),
    "Castle Vampy IV: Ballroom Right": LLLocation(82, LLLocCat.PICKUP, "Castle Vampy IV"),
    "Castle Vampy IV: Right Secret Wall": LLLocation(83, LLLocCat.PICKUP, "Castle Vampy IV"),
    "Castle Vampy IV: Ballroom Left": LLLocation(84, LLLocCat.PICKUP, "Castle Vampy IV"),
    "Roof NW: Gutsy the Elder": LLLocation(85, LLLocCat.PICKUP, "Castle Vampy Roof NW"),
    "Roof NE: Stoney the Elder": LLLocation(86, LLLocCat.PICKUP, "Castle Vampy Roof NE"),
    "Roof SW: Drippy the Elder": LLLocation(87, LLLocCat.PICKUP, "Castle Vampy Roof SW"),
    "Roof SE: Toasty the Elder": LLLocation(88, LLLocCat.PICKUP, "Castle Vampy Roof SE"),
    "Bonkula Item": LLLocation(89, LLLocCat.PICKUP, "The Heart Of Terror"),
    "Hidey-Hole: Bat Door": LLLocation(90, LLLocCat.PICKUP, "A Hidey-Hole"),
    "Hidey-Hole: Pebbles": LLLocation(91, LLLocCat.PICKUP, "A Hidey-Hole"),
    "Swampdog Lair: Entrance": LLLocation(92, LLLocCat.PICKUP, "Swampdog Lair"),
    "Swampdog Lair: End": LLLocation(93, LLLocCat.PICKUP, "Swampdog Lair"),
    "Q: Save Halloween Hill": LLLocation(94, LLLocCat.QUEST, "The Evilizer"),
    "Q: Tree Trimming": LLLocation(95, LLLocCat.QUEST, "A Cabin Trees"),
    "Q: Scaredy Cat": LLLocation(96, LLLocCat.QUEST, "Halloween Hill"),
    "Q: Sticky Shoes": LLLocation(97, LLLocCat.QUEST, "Halloween Hill"),
    "Q: Mushroom Hunt": LLLocation(98, LLLocCat.QUEST, "The Witch's Cabin"),
    "Q: Zombie Stomp": LLLocation(101, LLLocCat.QUEST, "Zombiton"),
    "Q: Smashing Pumpkins": LLLocation(102, LLLocCat.QUEST, "Halloween Hill"),
    "Q: Silver Bullet": LLLocation(107, LLLocCat.QUEST, "Zombiton"),
    "Q: Hairy Larry": LLLocation(108, LLLocCat.QUEST, "The Wolf Den"),
    "Q: Ghostbusting": LLLocation(109, LLLocCat.QUEST, "The Witch's Cabin"),
    "Q: The Rescue": LLLocation(112, LLLocCat.QUEST, "A Gloomy Cavern"),
    "Q: The Collection": LLLocation(113, LLLocCat.QUEST, "A Cabin Collector"),
    "Evil Smashin'": LLLocation(114, LLLocCat.BADGE, "The Evilizer"),
    "Bowlin'": LLLocation(115, LLLocCat.BADGE, "Bowling"),
    "Vandalizin'": LLLocation(116, LLLocCat.BADGE, "Zombiton"),
    "Greed": LLLocation(117, LLLocCat.BADGE, "Menu"),
    "Monster Slayin'": LLLocation(118, LLLocCat.BADGE, "Menu"),
    "Monster Poundin'": LLLocation(119, LLLocCat.BADGE, "Menu"),
    "Ghostbustin'": LLLocation(120, LLLocCat.BADGE, "Haunted Tower Roof"),
    "Lookin'": LLLocation(121, LLLocCat.BADGE, "The Witch's Cabin"),
    "Ultimate Victory": LLLocation(122, LLLocCat.BADGE, "The Evilizer"),
    "Kickin'": LLLocation(123, LLLocCat.BADGE, "Loony Ball"),
    "Boss Bashin'": LLLocation(124, LLLocCat.BADGE, "Boss Bash"),
    "Vampire Slayin'": LLLocation(125, LLLocCat.BADGE, "The Heart Of Terror"),
    "Sneakin'": LLLocation(126, LLLocCat.BADGE, "Haunted Tower"),
    "Witch Hunt": LLLocation(127, LLLocCat.BADGE, "Happy Stick Woods"),
    "Animal Control": LLLocation(128, LLLocCat.BADGE, "The Wolf Den"),
    "Annoyance": LLLocation(129, LLLocCat.BADGE, "The Witch's Cabin"),
    "Civic Duty": LLLocation(130, LLLocCat.BADGE, "A Gloomy Cavern"),
    "Winnin'": LLLocation(131, LLLocCat.BADGE, "The Evilizer"),
    "Combo Plate": LLLocation(132, LLLocCat.BADGE, "Menu"),
    "Cleanin' Up": LLLocation(133, LLLocCat.BADGE, "Rocky Cliffs"),
    "Findin'": LLLocation(134, LLLocCat.BADGE, "The Wolf Den"),
    "Extreme Survivin'": LLLocation(135, LLLocCat.BADGE, "Survival"),
    "Huntin'": LLLocation(136, LLLocCat.BADGE, "Halloween Hill"),
    "Advanced Winnin'": LLLocation(137, LLLocCat.BADGE, "Menu"),
    "Survivin'": LLLocation(138, LLLocCat.BADGE, "Survival"),
    "Puppy Poundin'": LLLocation(139, LLLocCat.BADGE, "Larry's Lair"),
    "Mad Skeelz": LLLocation(140, LLLocCat.BADGE, "The Evilizer"),
    "Frankenfryin'": LLLocation(141, LLLocCat.BADGE, "Frankenjulie's Laboratory"),
    "Combo Magic": LLLocation(142, LLLocCat.BADGE, "Survival"),
    "Hedge Clippin'": LLLocation(143, LLLocCat.BADGE, "Slurpy Swamp Mud"),
    "R-R-R-Remix!": LLLocation(144, LLLocCat.BADGE, "Remix"),
    "Witchcraft": LLLocation(145, LLLocCat.BADGE, "Menu"),
    "Ninjitsu": LLLocation(146, LLLocCat.BADGE, "Menu"),
    "Stayin' Alive": LLLocation(147, LLLocCat.BADGE, "Survival"),
    "Hooliganin'": LLLocation(148, LLLocCat.BADGE, "Loony Ball"),
    "Swampdoggin'": LLLocation(149, LLLocCat.BADGE, "Menu"),
    "Scorin'": LLLocation(150, LLLocCat.BADGE, "Menu"),
    "Brawlin'": LLLocation(151, LLLocCat.BADGE, "Benny's Cocktails"),
    "Minin' For Treasure": LLLocation(152, LLLocCat.BADGE, "Remix"),
    "Digitally Masterin'": LLLocation(153, LLLocCat.BADGE, "Menu"),
}


def set_rules(multiworld, world, player):
    access_rules: dict[str, CollectionRule] = {
        "Rocky Cliffs: Vine": lambda state: state.has("Fertilizer", player),
        "Rocky Cliffs: Rock Corner": lambda state: have_bombs(state, player),
        "Witch's Cabin: Bedroom": lambda state: have_light_source(state, player),
        "Bog Pit: Top Door": lambda state: state.has("Skull Key", player),
        "Tunnel: Swampdog Pumpkin Door": lambda state: state.has("Pumpkin Key", player),
        "Tunnel: Scratch Wall": lambda state: have_special_weapon_bullet(state, player),
        "Swamp Gas: Scratch Wall": lambda state: have_special_weapon_bullet(state, player),
        "Swamp Gas: Bat Door": lambda state: state.has("Bat Key", player),
        "Swamp Gas: Rock Prison": lambda state: have_bombs(state, player),
        "Dusty Crypt: Pumpkin Door": lambda state: state.has("Pumpkin Key", player),
        "Musty Crypt: Maze Room": lambda state: have_special_weapon_bullet(state, player),
        "Rusty Crypt: Vine": lambda state: state.has("Fertilizer", player),
        "Under The Lake: Bat Door": lambda state: state.has("Bat Key", player),
        "Tower Basement: DoorDoorDoorDoorDoorDoor": lambda state: state.has("Bat Key", player)
        and state.has("Skull Key", player)
        and state.has("Pumpkin Key", player),
        "Wolf Den: Pumpkin Door": lambda state: state.has("Pumpkin Key", player),
        "Wolf Den: Vine": lambda state: state.has("Fertilizer", player),
        "Under The Ravine: Left Vine": lambda state: state.has("Fertilizer", player),
        "Under The Ravine: Right Vine": lambda state: state.has("Fertilizer", player),
        "Creepy Caverns M: Pharaoh Bat Door": lambda state: state.has("Bat Key", player),
        "Castle Vampy IV: Ballroom Right": lambda state: state.has("Ghost Potion", player)
        and state.has("Silver Sling", player),
        "Castle Vampy IV: Ballroom Left": lambda state: state.has("Ghost Potion", player)
        and state.has("Silver Sling", player),
        "Roof NW: Gutsy the Elder": lambda state: have_special_weapon_damage(state, player),
        "Hidey-Hole: Bat Door": lambda state: state.has("Bat Key", player),
        "Swampdog Lair: End": lambda state: have_light_source(state, player) and state.has("Fertilizer", player),
        "Q: Scaredy Cat": lambda state: state.has("Cat", player),
        "Q: Mushroom Hunt": lambda state: state.has("Mushroom", player, 10),
        "Q: Zombie Stomp": lambda state: can_cleanse_crypts(state, player),
        "Q: Smashing Pumpkins": lambda state: can_cleanse_crypts(state, player),
        "Q: Silver Bullet": lambda state: can_cleanse_crypts(state, player) and state.has("Silver", player),
        "Q: Hairy Larry": lambda state: state.can_reach_region("Larry's Lair", player),
        "Q: Ghostbusting": lambda state: state.has("Doom Daisy", player) and state.has("Mushroom", player, 10),
        "Q: The Collection": lambda state: state.has("Silver Sling", player)
        and state.has("Ghost Potion", player)
        and state.can_reach_region("Castle Vampy", player),
        "Cleanin' Up": lambda state: have_bombs(state, player),
        "Extreme Survivin'": lambda state: state.has("Terror Mode", player),
        "Huntin'": lambda state: state.can_reach_region("Rocky Cliffs", player)
        and state.can_reach_region("Zombiton", player)
        and state.can_reach_region("Slurpy Swamp Mud", player)
        and state.has("Silver Sling", player),
        "Advanced Winnin'": lambda state: hundred_percent(state, player),
        "Mad Skeelz": lambda state: state.has("Terror Mode", player),
        "Hedge Clippin'": lambda state: state.can_reach_region("Vampy Land", player),
        "Witchcraft": lambda state: state.has("Play As Witch", player) and have_all_weapons(state, player),
        "Ninjitsu": lambda state: state.has("Play As Ninja Girl", player) and have_all_weapons(state, player),
        "Stayin' Alive": lambda state: state.has("Infinite Survival", player),
        "Swampdoggin'": lambda state: state.has("Play As Swampdog", player),
        "Brawlin'": lambda state: state.has("Touch Of Death", player),
        "Digitally Masterin'": lambda state: have_39_badges(state, player),
    }
    for loc in multiworld.get_locations(player):
        if loc.name in access_rules:
            add_rule(loc, access_rules[loc.name])


def set_entrance_rules(multiworld, world, player):
    loonyland_entrance_table: list[LLEntrance] = [
        LLEntrance("Menu", "Halloween Hill", False),
        LLEntrance("Menu", "Bowling", False),
        LLEntrance("Menu", "Survival", False),
        LLEntrance("Menu", "Boss Bash", False),
        LLEntrance("Menu", "Loony Ball", False),
        LLEntrance("Menu", "Remix", False),
        LLEntrance("Halloween Hill", "A Cabin Trees", True),
        LLEntrance("Halloween Hill", "The Witch's Cabin", True),
        LLEntrance("Halloween Hill", "Bonita's Cabin", True),
        LLEntrance("Halloween Hill", "Underground Tunnel", True),
        LLEntrance("Halloween Hill", "The Bog Pit", True),
        LLEntrance("Slurpy Swamp Mud", "Slurpy Swamp Mud East Warp", False),
        LLEntrance("Slurpy Swamp Mud East Warp", "Swamp Gas Cavern", True),
        LLEntrance("Slurpy Swamp Mud", "Slurpy Swamp Mud North Warp", False),
        LLEntrance("Slurpy Swamp Mud North Warp", "Swamp Gas Cavern Back", True),
        LLEntrance("Halloween Hill", "A Tiny Cabin", True, lambda state: state.has("Skull Key", player)),
        LLEntrance("Halloween Hill", "The Witch's Cabin Back", True),
        LLEntrance("Zombiton", "A Cabin Seer", True),
        LLEntrance("Zombiton", "Benny's Cocktails", True),
        LLEntrance("Halloween Hill", "Dusty Crypt Entrance", True),
        LLEntrance("Zombiton", "Musty Crypt Entrance", True),
        LLEntrance("Zombiton", "A Messy Cabin", True),
        LLEntrance("Halloween Hill", "Rusty Crypt Entrance", True),
        LLEntrance("Halloween Hill", "Under The Lake Entrance", True, lambda state: state.has("Orb", player, 4)),
        LLEntrance("Halloween Hill", "Haunted Tower Entrance", True, lambda state: state.has("Ghost Potion", player)),
        LLEntrance("Rocky Cliffs", "Abandoned Mines Entrance", True),
        LLEntrance("Rocky Cliffs", "The Shrine Of Bombulus", True),
        LLEntrance("Rocky Cliffs", "A Gloomy Cavern Entrance", True, lambda state: have_light_source(state, player)),
        LLEntrance("Halloween Hill", "Happy Stick Woods", True, lambda state: state.has("Happy Stick", player)),
        LLEntrance("Zombiton", "A Cabin Larry", True),
        LLEntrance("Halloween Hill", "The Wolf Den Entrance", True),
        LLEntrance("Rocky Cliffs", "Upper Creepy Caverns Left Warp", True, lambda state: state.has("Bombs", player)),
        LLEntrance(
            "Rocky Cliffs", "Creepy Caverns Left Bottom Warp", True, lambda state: have_light_source(state, player)
        ),
        LLEntrance("Vampy Land", "Creepy Caverns Right Bottom Warp", True),
        LLEntrance("Vampy Land", "Castle Vampy", True),
        LLEntrance("Halloween Hill", "Cabin In The Woods", True),
        LLEntrance("Halloween Hill", "A Cabin Collector", True),
        LLEntrance("Halloween Hill", "A Hidey-Hole", True),
        LLEntrance("Halloween Hill", "Swampdog Lair Entrance", True),
        LLEntrance("A Cabin Trees", "Halloween Hill", True),
        LLEntrance("The Witch's Cabin", "Halloween Hill", True),
        LLEntrance("The Witch's Cabin Back", "Halloween Hill", True),
        LLEntrance("Bonita's Cabin", "Halloween Hill", True),
        LLEntrance("The Bog Pit", "Halloween Hill", True),
        LLEntrance("Underground Tunnel", "Halloween Hill", True),
        LLEntrance("Underground Tunnel Zombie", "Benny's Cocktails", True),
        LLEntrance("Swamp Gas Cavern", "Slurpy Swamp Mud North Warp", True),
        LLEntrance("Swamp Gas Cavern Back", "Slurpy Swamp Mud East Warp", True),
        LLEntrance("A Tiny Cabin", "Halloween Hill", True),
        LLEntrance("A Cabin Seer", "Zombiton", True),
        LLEntrance("Benny's Cocktails", "Zombiton", True),
        LLEntrance("Benny's Cocktails", "Underground Tunnel Zombie", True),
        LLEntrance("Dusty Crypt Entrance", "Dusty Crypt", False, lambda state: have_light_source(state, player)),
        LLEntrance("Dusty Crypt Entrance", "Halloween Hill", True),
        LLEntrance("Dusty Crypt", "Dusty Crypt Entrance", False),
        LLEntrance("Musty Crypt Entrance", "Musty Crypt", True, lambda state: have_light_source(state, player)),
        LLEntrance("Musty Crypt Entrance", "Zombiton", True),
        LLEntrance("Musty Crypt", "Musty Crypt Entrance", False),
        LLEntrance("Rusty Crypt Entrance", "Rusty Crypt", False, lambda state: have_light_source(state, player)),
        LLEntrance("Rusty Crypt Entrance", "Halloween Hill", True),
        LLEntrance("Rusty Crypt", "Rusty Crypt Entrance", False),
        LLEntrance("A Messy Cabin", "Zombiton", True),
        LLEntrance("Under The Lake Entrance", "Under The Lake", False, lambda state: have_light_source(state, player)),
        LLEntrance("Under The Lake Entrance", "Halloween Hill", True),
        LLEntrance("Under The Lake", "Under The Lake Entrance", False),
        LLEntrance("Under The Lake", "Under The Lake Exit", False),
        LLEntrance("Under The Lake Exit", "Deeper Under The Lake", True),
        LLEntrance("Under The Lake Exit", "Under The Lake", False),
        LLEntrance("Deeper Under The Lake", "Under The Lake Exit", True),
        LLEntrance("Deeper Under The Lake", "Frankenjulie's Laboratory", True),
        LLEntrance("Frankenjulie's Laboratory", "Deeper Under The Lake", True),
        LLEntrance("Frankenjulie's Laboratory", "Halloween Hill", True),
        LLEntrance("Haunted Tower Entrance", "Haunted Tower", False, lambda state: state.has("Ghost Potion", player)),
        LLEntrance("Haunted Tower", "Haunted Basement Entrance", False),
        LLEntrance("Haunted Tower", "Haunted Tower Stairs Up", False),
        LLEntrance(
            "Haunted Tower",
            "Haunted Tower Stairs Down",
            False,
            lambda state: state.has("Bat Key", player)
            and state.has("Pumpkin Key", player)
            and state.has("Skull Key", player),
        ),
        LLEntrance("Haunted Tower Stairs Up", "Haunted Tower Floor 2 Entrance", True),
        LLEntrance("Haunted Tower Stairs Up", "Haunted Tower", False, lambda state: state.has("Ghost Potion", player)),
        LLEntrance(
            "Haunted Tower Stairs Down",
            "Haunted Tower",
            False,
            lambda state: state.has("Bat Key", player)
            and state.has("Pumpkin Key", player)
            and state.has("Skull Key", player)
            and state.has("Ghost Potion", player),
        ),
        LLEntrance(
            "Haunted Tower Stairs Down",
            "Haunted Basement Entrance",
            True,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance("Haunted Tower Floor 2 Entrance", "Haunted Tower Stairs Up", True),
        LLEntrance(
            "Haunted Tower Floor 2 Entrance",
            "Haunted Tower Floor 2",
            False,
            lambda state: state.has("Ghost Potion", player),
        ),
        LLEntrance("Haunted Tower Floor 2", "Haunted Tower Floor 2 Entrance", False),
        LLEntrance("Haunted Tower Floor 2", "Haunted Tower Floor 2 Exit", False),
        LLEntrance(
            "Haunted Tower Floor 2 Exit",
            "Haunted Tower Floor 2",
            False,
            lambda state: state.has("Ghost Potion", player),
        ),
        LLEntrance("Haunted Tower Floor 2 Exit", "Haunted Tower Floor 3 Entrance", True),
        LLEntrance("Haunted Tower Floor 3 Entrance", "Haunted Tower Floor 2 Exit", True),
        LLEntrance(
            "Haunted Tower Floor 3 Entrance",
            "Haunted Tower Floor 3",
            False,
            lambda state: state.has("Ghost Potion", player),
        ),
        LLEntrance("Haunted Tower Floor 3", "Haunted Tower Floor 3 Entrance", False),
        LLEntrance("Haunted Tower Floor 3", "Haunted Tower Floor 3 Exit", False),
        LLEntrance(
            "Haunted Tower Floor 3 Exit",
            "Haunted Tower Floor 3",
            False,
            lambda state: state.has("Ghost Potion", player),
        ),
        LLEntrance("Haunted Tower Floor 3 Exit", "Haunted Tower Roof", True),
        LLEntrance("Haunted Tower Roof", "Halloween Hill", True),
        LLEntrance("Haunted Tower Roof", "Haunted Tower Floor 3", True),
        LLEntrance("Haunted Basement Entrance", "Haunted Tower Stairs Down", True),
        LLEntrance(
            "Haunted Basement Entrance", "Haunted Basement", False, lambda state: have_light_source(state, player)
        ),
        LLEntrance("Haunted Basement", "Haunted Basement Entrance", False),
        LLEntrance(
            "Abandoned Mines Entrance", "Abandoned Mines", False, lambda state: have_light_source(state, player)
        ),
        LLEntrance("Abandoned Mines Entrance", "Rocky Cliffs", True),
        LLEntrance("Abandoned Mines", "Abandoned Mines Entrance", False),
        LLEntrance("The Shrine Of Bombulus", "Rocky Cliffs", True),
        LLEntrance(
            "A Gloomy Cavern Entrance", "A Gloomy Cavern", False, lambda state: have_light_source(state, player)
        ),
        LLEntrance("A Gloomy Cavern Entrance", "Rocky Cliffs", True),
        LLEntrance("A Gloomy Cavern", "A Gloomy Cavern Entrance", False),
        LLEntrance("Happy Stick Woods", "Halloween Hill", True),
        LLEntrance(
            "The Wolf Den Entrance",
            "The Wolf Den",
            False,
            lambda state: state.has("Silver Sling", player) and have_light_source(state, player),
        ),
        LLEntrance("The Wolf Den Entrance", "Halloween Hill", True),
        LLEntrance("The Wolf Den", "The Wolf Den Entrance", False),
        LLEntrance("The Wolf Den", "The Wolf Den Exit", False),
        LLEntrance("The Wolf Den Exit", "Larry's Lair", True),
        LLEntrance(
            "The Wolf Den Exit",
            "The Wolf Den",
            False,
            lambda state: state.has("Silver Sling", player) and have_light_source(state, player),
        ),
        LLEntrance("A Cabin Larry", "Zombiton", True),
        LLEntrance("Upper Creepy Caverns Left Warp", "Rocky Cliffs", True, lambda state: state.has("Bombs", player)),
        LLEntrance(
            "Upper Creepy Caverns Left Warp",
            "Upper Creepy Caverns",
            False,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance("Upper Creepy Caverns", "Upper Creepy Caverns Left Warp", False),
        LLEntrance(
            "Upper Creepy Caverns Middle Warp",
            "Creepy Caverns Left Top Warp",
            True,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance(
            "Upper Creepy Caverns Middle Warp",
            "Upper Creepy Caverns",
            False,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance("Upper Creepy Caverns", "Upper Creepy Caverns Middle Warp", False),
        LLEntrance(
            "Upper Creepy Caverns Right Warp",
            "Creepy Caverns Middle Top Warp",
            True,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance(
            "Upper Creepy Caverns Right Warp",
            "Upper Creepy Caverns",
            False,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance("Upper Creepy Caverns", "Upper Creepy Caverns Right Warp", False),
        LLEntrance(
            "Under The Ravine", "Creepy Caverns Middle Right Warp", True, lambda state: have_light_source(state, player)
        ),
        LLEntrance(
            "Under The Ravine", "Creepy Caverns Right Left Warp", True, lambda state: have_light_source(state, player)
        ),
        LLEntrance("Creepy Caverns Left Bottom Warp", "Rocky Cliffs", True),
        LLEntrance(
            "Creepy Caverns Left Bottom Warp",
            "Creepy Caverns Left",
            False,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance("Creepy Caverns Left", "Creepy Caverns Left Bottom Warp", False),
        LLEntrance("Creepy Caverns Left", "Creepy Caverns Left Top Warp", False),
        LLEntrance(
            "Creepy Caverns Left Top Warp", "Creepy Caverns Left", False, lambda state: have_light_source(state, player)
        ),
        LLEntrance("Creepy Caverns Left Top Warp", "Upper Creepy Caverns Middle Warp", False),
        LLEntrance("Creepy Caverns Middle Top Warp", "Upper Creepy Caverns", True),
        LLEntrance(
            "Creepy Caverns Middle Top Warp",
            "Creepy Caverns Middle",
            False,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance("Creepy Caverns Middle", "Creepy Caverns Middle Top Warp", False),
        LLEntrance("Creepy Caverns Middle", "Creepy Caverns Middle Right Warp", False),
        LLEntrance("Creepy Caverns Middle Right Warp", "Under The Ravine", True),
        LLEntrance(
            "Creepy Caverns Middle Right Warp",
            "Creepy Caverns Middle",
            False,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance("Creepy Caverns Right Left Warp", "Under The Ravine", True),
        LLEntrance(
            "Creepy Caverns Right Left Warp",
            "Creepy Caverns Right",
            False,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance("Creepy Caverns Right", "Creepy Caverns Right Left Warp", False),
        LLEntrance("Creepy Caverns Right", "Creepy Caverns Right Bottom Warp", False),
        LLEntrance(
            "Creepy Caverns Right Bottom Warp",
            "Creepy Caverns Right",
            False,
            lambda state: have_light_source(state, player),
        ),
        LLEntrance("Creepy Caverns Right Bottom Warp", "Vampy Land", True),
        LLEntrance("Castle Vampy", "Halloween Hill", True),
        LLEntrance("Castle Vampy", "Castle Vampy Skull Jail", False, lambda state: state.has("Skull Key", player)),
        LLEntrance("Castle Vampy Skull Jail", "Castle Vampy", False, lambda state: state.has("Skull Key", player)),
        LLEntrance("Castle Vampy Skull Jail", "Castle Vampy II", True),
        LLEntrance("Castle Vampy", "Castle Vampy II NE", True, lambda state: state.has("Bat Statue", player, 4)),
        LLEntrance("Castle Vampy", "Castle Vampy II SE", True, lambda state: state.has("Bat Statue", player, 4)),
        LLEntrance("Castle Vampy", "Castle Vampy II SW", True, lambda state: state.has("Bat Statue", player, 4)),
        LLEntrance("Castle Vampy", "Castle Vampy II NW", True, lambda state: state.has("Bat Statue", player, 4)),
        LLEntrance("Castle Vampy II", "Castle Vampy Skull Jail", True),
        LLEntrance("Castle Vampy II", "Castle Vampy II Bat Jail", False, lambda state: state.has("Bat Key", player)),
        LLEntrance("Castle Vampy II Bat Jail", "Castle Vampy II", False, lambda state: state.has("Bat Key", player)),
        LLEntrance("Castle Vampy II Bat Jail", "Castle Vampy III", True),
        LLEntrance("Castle Vampy II NE", "Castle Vampy", True),
        LLEntrance("Castle Vampy II NE", "Castle Vampy III NE", True),
        LLEntrance("Castle Vampy II SE", "Castle Vampy", True),
        LLEntrance("Castle Vampy II SE", "Castle Vampy III SE", True),
        LLEntrance("Castle Vampy II SW", "Castle Vampy", True),
        LLEntrance("Castle Vampy II SW", "Castle Vampy III SW", True),
        LLEntrance("Castle Vampy II NW", "Castle Vampy", True),
        LLEntrance("Castle Vampy II NW", "Castle Vampy III NW", True),
        LLEntrance("Cabin In The Woods", "Halloween Hill", True),
        LLEntrance("Castle Vampy III", "Castle Vampy II Bat Jail", True),
        LLEntrance(
            "Castle Vampy III", "Castle Vampy III Pumpkin Jail", False, lambda state: state.has("Pumpkin Key", player)
        ),
        LLEntrance(
            "Castle Vampy III Pumpkin Jail", "Castle Vampy III", False, lambda state: state.has("Pumpkin Key", player)
        ),
        LLEntrance("Castle Vampy III Pumpkin Jail", "Castle Vampy IV", True),
        LLEntrance("Castle Vampy III NE", "Castle Vampy II NE", True),
        LLEntrance("Castle Vampy III NE", "Castle Vampy IV NE", True),
        LLEntrance("Castle Vampy III SE", "Castle Vampy II SE", True),
        LLEntrance("Castle Vampy III SE", "Castle Vampy IV SE", True),
        LLEntrance("Castle Vampy III SW", "Castle Vampy II SW", True),
        LLEntrance("Castle Vampy III SW", "Castle Vampy IV SW", True),
        LLEntrance("Castle Vampy III NW", "Castle Vampy II NW", True),
        LLEntrance("Castle Vampy III NW", "Castle Vampy IV NW", True),
        LLEntrance("Castle Vampy IV", "Castle Vampy III Pumpkin Jail", True),
        LLEntrance(
            "Castle Vampy IV", "The Heart Of Terror Entrance", True, lambda state: state.has("Vampire Bust", player, 8)
        ),
        LLEntrance("Castle Vampy IV NE", "Castle Vampy III NE", True),
        LLEntrance("Castle Vampy IV NE", "Castle Vampy Roof NE", True),
        LLEntrance("Castle Vampy IV SE", "Castle Vampy III SE", True),
        LLEntrance("Castle Vampy IV SE", "Castle Vampy Roof SE", True),
        LLEntrance("Castle Vampy IV SW", "Castle Vampy III SW", True),
        LLEntrance("Castle Vampy IV SW", "Castle Vampy Roof SW", True),
        LLEntrance("Castle Vampy IV NW", "Castle Vampy III NW", True),
        LLEntrance("Castle Vampy IV NW", "Castle Vampy Roof NW", True),
        LLEntrance("A Cabin Collector", "Halloween Hill", True),
        LLEntrance("Castle Vampy Roof NE", "Castle Vampy IV NE", True),
        LLEntrance("Castle Vampy Roof SE", "Castle Vampy IV SE", True),
        LLEntrance("Castle Vampy Roof SW", "Castle Vampy IV SW", True),
        LLEntrance("Castle Vampy Roof NW", "Castle Vampy IV NW", True),
        LLEntrance("The Evilizer", "Halloween Hill", True),
        LLEntrance(
            "The Heart Of Terror Entrance", "The Heart Of Terror", False, lambda state: have_light_source(state, player)
        ),
        LLEntrance("The Heart Of Terror", "The Evilizer", True),
        LLEntrance("The Heart Of Terror", "Empty Rooftop", True),
        LLEntrance("A Hidey-Hole", "Halloween Hill", True),
        LLEntrance("Empty Rooftop", "Halloween Hill", True),
        LLEntrance("Swampdog Lair Entrance", "Swampdog Lair", False, lambda state: state.has("Boots", player)),
        LLEntrance("Swampdog Lair", "Swampdog Lair Entrance", True),
        LLEntrance("Larry's Lair", "Halloween Hill", True),
        LLEntrance("Halloween Hill", "Slurpy Swamp Mud", False, lambda state: state.has("Boots", player)),
        LLEntrance("Slurpy Swamp Mud", "Halloween Hill", False, lambda state: state.has("Boots", player)),
        LLEntrance("Slurpy Swamp Mud North Warp", "Slurpy Swamp Mud", False, lambda state: state.has("Boots", player)),
        LLEntrance("Slurpy Swamp Mud East Warp", "Slurpy Swamp Mud", False, lambda state: state.has("Boots", player)),
        LLEntrance("Zombiton", "Halloween Hill", False),
        LLEntrance("Halloween Hill", "Rocky Cliffs", False, lambda state: state.has("Big Gem", player)),
        LLEntrance("Rocky Cliffs", "Halloween Hill", False, lambda state: state.has("Big Gem", player)),
        LLEntrance("Underground Tunnel", "Underground Tunnel Mud", False, lambda state: state.has("Boots", player)),
        LLEntrance("Underground Tunnel Mud", "Underground Tunnel", False, lambda state: state.has("Boots", player)),
        LLEntrance(
            "Underground Tunnel Mud", "Underground Tunnel Zombie", False, lambda state: state.has("Boots", player)
        ),
        LLEntrance("Swamp Gas Cavern", "Swamp Gas Cavern Back", False, lambda state: state.has("Boots", player)),
    ]
    for region in multiworld.get_regions(player):
        for entry in loonyland_entrance_table:
            if entry.source_region == region.name:
                region.connect(connecting_region=world.get_region(entry.target_region), rule=entry.rule)
