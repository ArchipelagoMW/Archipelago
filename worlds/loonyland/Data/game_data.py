#autogenerated from Hamsandwich/tools/archipelago_data_scripts
from typing import Dict, List
from BaseClasses import ItemClassification as IC
from worlds.generic.Rules import CollectionRule, add_rule
from worlds.loonyland import loonyland_base_id as ll_base_id, LL_Location
from worlds.loonyland.Entrances import LL_Entrance
from worlds.loonyland.Items import LL_Item, LL_ItemCat
from worlds.loonyland.Locations import LL_LocCat
from worlds.loonyland.Regions import LLRegion
from worlds.loonyland.Rules import *

VAR_HEART = 0
VAR_LIGHTNING = 20
VAR_ARROW = 30
VAR_PANTS = 40
VAR_QUESTASSIGN  = 50
VAR_QUESTDONE = 70
VAR_MUSHROOM = 90
VAR_MYSORB = 100
VAR_WEAPON = 104
VAR_WBOMBS = 104
VAR_WLIGHTNING = 105
VAR_WICE = 106
VAR_WCACTUS = 107
VAR_WBOOMERANG = 108
VAR_WWHOOPEE = 109
VAR_WHOTPANTS = 110
VAR_KEY = 111
VAR_SKULLKEY = 111
VAR_BATKEY = 112
VAR_PUMPKINKEY = 113
VAR_BOOTS = 114
VAR_STICK = 115
VAR_TORCH = 116
VAR_FERTILIZER = 117
VAR_SILVER = 118
VAR_DAISY = 119
VAR_POTION = 120
VAR_VAMPBUST = 121
VAR_CAT = 129
VAR_GEM = 130
VAR_ORBSTAND = 150
VAR_BOOTSALES = 154
VAR_WITCHTALK = 155
VAR_BRIDGEOPEN = 156
VAR_ZOMBIE = 157
VAR_ZOMBIEREWARD = 160
VAR_TRIPLEFIRE = 161
VAR_TALISMAN = 162
VAR_VAMPYWALL = 163
VAR_BATSTATUE = 164
VAR_BATSTAND = 168
VAR_VAMPSTAND = 172
VAR_KNOWWOLVES = 180
VAR_DOLL = 181
VAR_REFLECT = 189
VAR_DOLLGIVEN = 190
VAR_TOWNOPEN = 198
VAR_LEFTBOMB = 199
VAR_HELPERBAT = 200
VAR_TALKBAT = 201
VAR_TALKBRIDGE = 202
VAR_PAIDBRIDGE = 203
VAR_PORTALOPEN = 204
VAR_GAVEDAISY = 205
VAR_DEADELDER = 206
VAR_GATEOUT = 210
VAR_DEADBONK = 211
VAR_SEERTALK = 212
VAR_MINERTALK = 213
VAR_HPSALES = 214
VAR_DEALERTALK = 215
VAR_HIPUZZLE = 216
VAR_WITCHREWARD = 217
VAR_LANTERN = 218
VAR_TREEREWARD = 219
VAR_SILVERSLING = 220
VAR_LARRYREWARD = 221
VAR_CROPSREWARD = 222
VAR_ZOMBIEGEM = 223
ITM_NONE = 0
ITM_TINYHEART = 1
ITM_BIGHEART = 2
ITM_SUPERHEART = 3
ITM_LITTLEGEM = 4
ITM_BIGGEM = 5
ITM_SUPERGEM = 6
ITM_FIREPOWERUP = 7
ITM_RANGEUP = 8
ITM_FIRERATEUP = 9
ITM_KEY = 10
ITM_KEY2 = 11
ITM_KEY3 = 12
ITM_KEY4 = 13
ITM_WBOMB = 14
ITM_WLIGHTNING = 15
ITM_WICE = 16
ITM_WCACTUS = 17
ITM_WBOOMERANG = 18
ITM_WWHOOPEE = 19
ITM_WHOTPANTS = 20
ITM_POTION = 21
ITM_DOOR = 22
ITM_SKULLDOOR = 23
ITM_BATDOOR = 24
ITM_PUMPKINDOOR = 25
ITM_DOOR2 = 26
ITM_SKULLDOOR2 = 27
ITM_BATDOOR2 = 28
ITM_PUMPKINDOOR2 = 29
ITM_TREE1 = 30
ITM_TREE2 = 31
ITM_LAKECAVE = 32
ITM_TABLE = 33
ITM_STOOL = 34
ITM_CHAIR = 35
ITM_CHAIR2 = 36
ITM_CHAIR3 = 37
ITM_CHAIR4 = 38
ITM_CHAIR5 = 39
ITM_BIGCHAIR = 40
ITM_BIGCHAIR2 = 41
ITM_BIGCHAIR3 = 42
ITM_BIGCHAIR4 = 43
ITM_MYSORB = 44
ITM_ORBSTAND = 45
ITM_ORBSTAND2 = 46
ITM_SAVEGEM = 47
ITM_BOTTLE = 48
ITM_BOTTLE2 = 49
ITM_BOTTLE3 = 50
ITM_BOTTLE4 = 51
ITM_BOTTLE5 = 52
ITM_BOTTLE6 = 53
ITM_BOTTLE7 = 54
ITM_BOTTLE8 = 55
ITM_BOTTLE9 = 56
ITM_BOTTLE10 = 57
ITM_BOTTLE11 = 58
ITM_SIGN = 59
ITM_SIGN2 = 60
ITM_SIGN3 = 61
ITM_KNIGHT = 62
ITM_KNIGHT2 = 63
ITM_CLOCK = 64
ITM_CANDLE = 65
ITM_BOOKCASE = 66
ITM_BED = 67
ITM_LOG = 68
ITM_LOG2 = 69
ITM_LOG3 = 70
ITM_TWIG = 71
ITM_ROCK = 72
ITM_ROCKPILE = 73
ITM_BARREL = 74
ITM_BARREL2 = 75
ITM_TREE3 = 76
ITM_TREE4 = 77
ITM_TREE5 = 78
ITM_TREE6 = 79
ITM_TREE7 = 80
ITM_SHROOM = 81
ITM_DAISY = 82
ITM_SILVER = 83
ITM_MAGICPLANT = 84
ITM_WALKPLANT = 85
ITM_SWITCH1ON = 86
ITM_SWITCH1OFF = 87
ITM_SWITCH2 = 88
ITM_GRASS = 89
ITM_GRASS2 = 90
ITM_GRASS3 = 91
ITM_CATTAIL = 92
ITM_LILROCK = 93
ITM_BIGROCK = 94
ITM_BOOMROCK = 95
ITM_TORCH = 96
ITM_GASHOLE = 97
ITM_GASPIPELR = 98
ITM_GASPIPEUD = 99
ITM_GASPIPEDR = 100
ITM_GASPIPEDL = 101
ITM_GASPIPEUR = 102
ITM_GASPIPEUL = 103
ITM_GASSPARK = 104
ITM_GRAVE = 105
ITM_GRAVE2 = 106
ITM_TABLE2 = 107
ITM_AUTODOOR = 108
ITM_AUTODOOR2 = 109
ITM_TALISMAN = 110
ITM_TRIPLEFIRE = 111
ITM_BUSTSTAND = 112
ITM_BUST = 113
ITM_BUSTONSTAND = 114
ITM_BATSTAND = 115
ITM_BAT = 116
ITM_BATONSTAND = 117
ITM_BATDOLL = 118
ITM_SKELDOLL = 119
ITM_FROGDOLL = 120
ITM_GHOSTDOLL = 121
ITM_MUMMYDOLL = 122
ITM_SWAMPDOLL = 123
ITM_VAMPDOLL = 124
ITM_WOLFDOLL = 125
ITM_PORTAL = 126
ITM_BADGE = 127
ITM_CAT = 128
ITM_ZOMBGEM = 129
ITM_BOOTS = 130
ITM_FERTILIZER = 131
ITM_GHOSTPOTION = 132
ITM_LANTERN = 133
ITM_REFLECTGEM = 134
ITM_SILVERSLING = 135
ITM_STICK = 136
ITM_ARCHIPELAGO = 137
loony_item_table: Dict[str, LL_Item] = {
    "Heart" : LL_Item(ll_base_id + VAR_HEART, LL_ItemCat.ITEM, IC.useful, 20),
    "Lightning" : LL_Item(ll_base_id + VAR_LIGHTNING, LL_ItemCat.ITEM, IC.useful, 10),
    "Arrow" : LL_Item(ll_base_id + VAR_ARROW, LL_ItemCat.ITEM, IC.useful, 10),
    "Pants" : LL_Item(ll_base_id + VAR_PANTS, LL_ItemCat.ITEM, IC.useful, 10),
    "Mushroom" : LL_Item(ll_base_id + VAR_MUSHROOM, LL_ItemCat.ITEM, IC.progression, 10),
    "Orb" : LL_Item(ll_base_id + VAR_MYSORB, LL_ItemCat.ITEM, IC.progression, 4),
    "Bombs" : LL_Item(ll_base_id + VAR_WBOMBS, LL_ItemCat.ITEM, IC.progression),
    "Shock Wand" : LL_Item(ll_base_id + VAR_WLIGHTNING, LL_ItemCat.ITEM, IC.progression),
    "Ice Spear" : LL_Item(ll_base_id + VAR_WICE, LL_ItemCat.ITEM, IC.progression),
    "Cactus" : LL_Item(ll_base_id + VAR_WCACTUS, LL_ItemCat.ITEM, IC.progression),
    "Boomerang" : LL_Item(ll_base_id + VAR_WBOOMERANG, LL_ItemCat.ITEM, IC.progression),
    "Whoopee" : LL_Item(ll_base_id + VAR_WWHOOPEE, LL_ItemCat.ITEM, IC.progression),
    "Hot Pants" : LL_Item(ll_base_id + VAR_WHOTPANTS, LL_ItemCat.ITEM, IC.progression),
    "Skull Key" : LL_Item(ll_base_id + VAR_SKULLKEY, LL_ItemCat.ITEM, IC.progression),
    "Bat Key" : LL_Item(ll_base_id + VAR_BATKEY, LL_ItemCat.ITEM, IC.progression),
    "Pumpkin Key" : LL_Item(ll_base_id + VAR_PUMPKINKEY, LL_ItemCat.ITEM, IC.progression),
    "Boots" : LL_Item(ll_base_id + VAR_BOOTS, LL_ItemCat.ITEM, IC.progression),
    "Stick" : LL_Item(ll_base_id + VAR_STICK, LL_ItemCat.ITEM, IC.progression),
    "Fertilizer" : LL_Item(ll_base_id + VAR_FERTILIZER, LL_ItemCat.ITEM, IC.progression),
    "Silver" : LL_Item(ll_base_id + VAR_SILVER, LL_ItemCat.ITEM, IC.progression),
    "Doom Daisy" : LL_Item(ll_base_id + VAR_DAISY, LL_ItemCat.ITEM, IC.progression),
    "Ghost Potion" : LL_Item(ll_base_id + VAR_POTION, LL_ItemCat.ITEM, IC.progression),
    "Vampire Bust" : LL_Item(ll_base_id + VAR_VAMPBUST, LL_ItemCat.ITEM, IC.progression, 8),
    "Cat" : LL_Item(ll_base_id + VAR_CAT, LL_ItemCat.ITEM, IC.progression),
    "Big Gem" : LL_Item(ll_base_id + VAR_GEM, LL_ItemCat.ITEM, IC.progression, 6),
    "100 Gems" : LL_Item(ll_base_id + VAR_ZOMBIEGEM, LL_ItemCat.ITEM, IC.filler),
    "Triple Fire Gem" : LL_Item(ll_base_id + VAR_TRIPLEFIRE, LL_ItemCat.ITEM, IC.useful),
    "Happy Stick" : LL_Item(ll_base_id + VAR_TALISMAN, LL_ItemCat.ITEM, IC.progression),
    "Bat Statue" : LL_Item(ll_base_id + VAR_BATSTATUE, LL_ItemCat.ITEM, IC.progression, 4),
    "Lantern" : LL_Item(ll_base_id + VAR_LANTERN, LL_ItemCat.ITEM, IC.progression),
    "Reflect Gem" : LL_Item(ll_base_id + VAR_REFLECT, LL_ItemCat.ITEM, IC.useful),
    "Silver Sling" : LL_Item(ll_base_id + VAR_SILVERSLING, LL_ItemCat.ITEM, IC.progression),
}
loonyland_region_table: Dict[str, LLRegion] = {
    "Menu": LLRegion(False),
    "Halloween Hill": LLRegion(True),
    "Slurpy Swamp Mud": LLRegion(False, "Halloween Hill"),
    "Slurpy Swamp Mud North Warp": LLRegion(False, "Halloween Hill"),
    "Slurpy Swamp Mud East Warp": LLRegion(False, "Halloween Hill"),
    "Zombiton": LLRegion(False, "Halloween Hill"),
    "Rocky Cliffs": LLRegion(False, "Halloween Hill"),
    "Vampy Land": LLRegion(False, "Halloween Hill"),
    "A Cabin Trees": LLRegion(True, "A Cabin"),
    "The Witch's Cabin": LLRegion(True),
    "The Witch's Cabin Back": LLRegion(False, "The Witch's Cabin"),
    "Bonita's Cabin": LLRegion(True),
    "The Bog Pit": LLRegion(True),
    "Underground Tunnel": LLRegion(True),
    "Underground Tunnel Mud": LLRegion(False, "Underground Tunnel"),
    "Underground Tunnel Zombie": LLRegion(False, "Underground Tunnel"),
    "Swamp Gas Cavern": LLRegion(True),
    "Swamp Gas Cavern Back": LLRegion(False, "Swamp Gas Cavern"),
    "A Tiny Cabin": LLRegion(True),
    "A Cabin Seer": LLRegion(True),
    "Benny's Cocktails": LLRegion(True),
    "Dusty Crypt": LLRegion(True),
    "Dusty Crypt Entrance": LLRegion(False, "Dusty Crypt"),
    "Musty Crypt": LLRegion(True),
    "Musty Crypt Entrance": LLRegion(False, "Musty Crypt"),
    "Rusty Crypt": LLRegion(True),
    "Rusty Crypt Entrance": LLRegion(False, "Rusty Crypt"),
    "A Messy Cabin": LLRegion(True),
    "Under The Lake": LLRegion(True),
    "Under The Lake Entrance": LLRegion(False, "Under The Lake"),
    "Under The Lake Exit": LLRegion(False, "Under The Lake"),
    "Deeper Under The Lake": LLRegion(True),
    "Frankenjulie's Laboratory": LLRegion(True),
    "Haunted Tower": LLRegion(True),
    "Haunted Tower Entrance": LLRegion(False),
    "Haunted Tower Stairs Up": LLRegion(False),
    "Haunted Tower Stairs Down": LLRegion(False),
    "Haunted Tower Floor 2": LLRegion(True),
    "Haunted Tower Floor 2 Entrance": LLRegion(False),
    "Haunted Tower Floor 2 Exit": LLRegion(False),
    "Haunted Tower Floor 3 Entrance": LLRegion(False),
    "Haunted Tower Floor 3 Exit": LLRegion(False),
    "Haunted Tower Floor 3": LLRegion(True),
    "Haunted Tower Roof": LLRegion(True),
    "Haunted Basement": LLRegion(True),
    "Haunted Basement Entrance": LLRegion(False, "Haunted Basement"),
    "Abandoned Mines": LLRegion(True),
    "Abandoned Mines Entrance": LLRegion(False, "Abandoned Mines"),
    "The Shrine Of Bombulus": LLRegion(True),
    "A Gloomy Cavern": LLRegion(True),
    "A Gloomy Cavern Entrance": LLRegion(False, "A Gloomy Cavern"),
    "Happy Stick Woods": LLRegion(True),
    "The Wolf Den": LLRegion(True),
    "The Wolf Den Entrance": LLRegion(False, "The Wolf Den"),
    "The Wolf Den Exit": LLRegion(False, "The Wolf Den"),
    "A Cabin Larry": LLRegion(True),
    "Upper Creepy Caverns": LLRegion(True),
    "Upper Creepy Caverns Left Warp": LLRegion(False, "Upper Creepy Caverns"),
    "Upper Creepy Caverns Middle Warp": LLRegion(False, "Upper Creepy Caverns"),
    "Upper Creepy Caverns Right Warp": LLRegion(False, "Upper Creepy Caverns"),
    "Under The Ravine": LLRegion(True),
    "Creepy Caverns Left": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Left Bottom Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Left Top Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Middle": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Middle Top Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Middle Right Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Right": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Right Left Warp": LLRegion(False, "Creepy Caverns"),
    "Creepy Caverns Right Bottom Warp": LLRegion(False, "Creepy Caverns"),
    "Castle Vampy": LLRegion(True),
    "Castle Vampy Skull Jail": LLRegion(False, "Castle Vampy"),
    "Castle Vampy II": LLRegion(True),
    "Castle Vampy II NW": LLRegion(False, "Castle Vampy II"),
    "Castle Vampy II NE": LLRegion(False, "Castle Vampy II"),
    "Castle Vampy II SW": LLRegion(False, "Castle Vampy II"),
    "Castle Vampy II SE": LLRegion(False, "Castle Vampy II"),
    "Castle Vampy II Bat Jail": LLRegion(False, "Castle Vampy II"),
    "Cabin In The Woods": LLRegion(True),
    "Castle Vampy III": LLRegion(True),
    "Castle Vampy III NW": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy III NE": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy III SW": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy III SE": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy III Pumpkin Jail": LLRegion(False, "Castle Vampy III"),
    "Castle Vampy IV": LLRegion(True),
    "Castle Vampy IV NW": LLRegion(False, "Castle Vampy IV"),
    "Castle Vampy IV NE": LLRegion(False, "Castle Vampy IV"),
    "Castle Vampy IV SW": LLRegion(False, "Castle Vampy IV"),
    "Castle Vampy IV SE": LLRegion(False, "Castle Vampy IV"),
    "A Cabin Collector": LLRegion(True),
    "Castle Vampy Roof NE": LLRegion(True, "Castle Vampy Roof"),
    "Castle Vampy Roof SE": LLRegion(True, "Castle Vampy Roof"),
    "Castle Vampy Roof SW": LLRegion(True, "Castle Vampy Roof"),
    "Castle Vampy Roof NW": LLRegion(True, "Castle Vampy Roof"),
    "The Evilizer": LLRegion(True),
    "The Heart Of Terror": LLRegion(True),
    "The Heart Of Terror Entrance": LLRegion(False, "The Heart Of Terror"),
    "A Hidey-Hole": LLRegion(True),
    "Empty Rooftop": LLRegion(True),
    "Swampdog Lair": LLRegion(True),
    "Swampdog Lair Entrance": LLRegion(False, "Swampdog Lair"),
    "Larry's Lair": LLRegion(True),
    "Bowling": LLRegion(False),
    "Survival": LLRegion(False),
    "Boss Bash": LLRegion(False),
    "Loony Ball": LLRegion(False),
    "Remix": LLRegion(False),
}
loonyland_location_table: Dict[str, LL_Location] = {
    "Swamp: Mud Path": LL_Location(0, LL_LocCat.PICKUP, "Slurpy Swamp Mud"),
    "Swamp: Bog Beast": LL_Location(1, LL_LocCat.PICKUP, "Halloween Hill"),
    "Rocky Cliffs: Upper Ledge": LL_Location(2, LL_LocCat.PICKUP, "Rocky Cliffs"),
    "Swamp: Sapling Shrine": LL_Location(3, LL_LocCat.PICKUP, "Slurpy Swamp Mud"),
    "Terror Glade: South Trees": LL_Location(4, LL_LocCat.PICKUP, "Halloween Hill"),
    "Rocky Cliffs: Vine": LL_Location(5, LL_LocCat.PICKUP, "Rocky Cliffs"),
    "Rocky Cliffs: Grand Pharoh": LL_Location(6, LL_LocCat.PICKUP, "Rocky Cliffs"),
    "Rocky Cliffs: Rock Corner": LL_Location(7, LL_LocCat.PICKUP, "Rocky Cliffs"),
    "Swamp: Outside Luniton": LL_Location(8, LL_LocCat.PICKUP, "Halloween Hill"),
    "Swamp: East 1": LL_Location(9, LL_LocCat.PICKUP, "Halloween Hill"),
    "Swamp: Top Left dry": LL_Location(10, LL_LocCat.PICKUP, "Halloween Hill"),
    "Swamp: East 2": LL_Location(11, LL_LocCat.PICKUP, "Halloween Hill"),
    "Woods: Above Castle": LL_Location(12, LL_LocCat.PICKUP, "Halloween Hill"),
    "Rocky Cliffs: Entrance Ledge": LL_Location(13, LL_LocCat.PICKUP, "Rocky Cliffs"),
    "Rocky Cliffs: Peak": LL_Location(14, LL_LocCat.PICKUP, "Rocky Cliffs"),
    "Woods: SW of Cabin": LL_Location(15, LL_LocCat.PICKUP, "Halloween Hill"),
    "Witch's Cabin: Bedroom": LL_Location(16, LL_LocCat.PICKUP, "The Witch's Cabin"),
    "Witch's Cabin: Backroom": LL_Location(17, LL_LocCat.PICKUP, "The Witch's Cabin Back"),
    "Bonita's Cabin: Barrel Maze": LL_Location(18, LL_LocCat.PICKUP, "Bonita's Cabin"),
    "Bog Pit: Top Door": LL_Location(19, LL_LocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Posts Room": LL_Location(20, LL_LocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Drippy Window": LL_Location(21, LL_LocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Green room": LL_Location(22, LL_LocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Arena": LL_Location(23, LL_LocCat.PICKUP, "The Bog Pit"),
    "Bog Pit: Sw Switch": LL_Location(24, LL_LocCat.PICKUP, "The Bog Pit"),
    "Tunnel: Swampdog Pumpkin Door": LL_Location(25, LL_LocCat.PICKUP, "Underground Tunnel"),
    "Tunnel: Scratch Wall": LL_Location(26, LL_LocCat.PICKUP, "Underground Tunnel"),
    "Tunnel: Narrow Passage": LL_Location(27, LL_LocCat.PICKUP, "Underground Tunnel"),
    "Tunnel: Top Frogs": LL_Location(28, LL_LocCat.PICKUP, "Underground Tunnel"),
    "Tunnel: Torch Island": LL_Location(29, LL_LocCat.PICKUP, "Underground Tunnel Mud"),
    "Tunnel: Small Room": LL_Location(30, LL_LocCat.PICKUP, "Underground Tunnel"),
    "Swamp Gas: Scratch Wall": LL_Location(31, LL_LocCat.PICKUP, "Swamp Gas Cavern"),
    "Swamp Gas: Bat Door": LL_Location(32, LL_LocCat.PICKUP, "Swamp Gas Cavern"),
    "Swamp Gas: Stair room": LL_Location(33, LL_LocCat.PICKUP, "Swamp Gas Cavern Back"),
    "Swamp Gas: Rock Prison": LL_Location(34, LL_LocCat.PICKUP, "Swamp Gas Cavern"),
    "A Tiny Cabin": LL_Location(35, LL_LocCat.PICKUP, "A Tiny Cabin"),
    "Seer: Bedside": LL_Location(36, LL_LocCat.PICKUP, "A Cabin Seer"),
    "Dusty Crypt: Pumpkin Door": LL_Location(37, LL_LocCat.PICKUP, "Dusty Crypt"),
    "Dusty Crypt: Maze": LL_Location(38, LL_LocCat.PICKUP, "Dusty Crypt"),
    "Musty Crypt: Maze Room": LL_Location(39, LL_LocCat.PICKUP, "Musty Crypt"),
    "Rusty Crypt: Vine": LL_Location(40, LL_LocCat.PICKUP, "Rusty Crypt"),
    "Rusty Crypt: Boulders": LL_Location(41, LL_LocCat.PICKUP, "Rusty Crypt"),
    "A Messy Cabin": LL_Location(42, LL_LocCat.PICKUP, "A Messy Cabin"),
    "Under The Lake: Behind Lightning Rod": LL_Location(43, LL_LocCat.PICKUP, "Under The Lake"),
    "Under The Lake: Bat Door": LL_Location(44, LL_LocCat.PICKUP, "Under The Lake"),
    "Deeper Lake: Corner": LL_Location(45, LL_LocCat.PICKUP, "Deeper Under The Lake"),
    "Deeper Lake: Rhombus": LL_Location(46, LL_LocCat.PICKUP, "Deeper Under The Lake"),
    "Frankenjulie's Reward": LL_Location(47, LL_LocCat.PICKUP, "Frankenjulie's Laboratory"),
    "Tower: Barracks": LL_Location(48, LL_LocCat.PICKUP, "Haunted Tower"),
    "Tower F2: Skull Puzzle": LL_Location(49, LL_LocCat.PICKUP, "Haunted Tower Floor 2"),
    "PolterGuy's Reward": LL_Location(50, LL_LocCat.PICKUP, "Haunted Tower Roof"),
    "Tower Basement: DoorDoorDoorDoorDoorDoor": LL_Location(51, LL_LocCat.PICKUP, "Haunted Basement"),
    "Abandoned Mine: Shaft": LL_Location(52, LL_LocCat.PICKUP, "Abandoned Mines"),
    "Shrine of Bombulus: Prize": LL_Location(53, LL_LocCat.PICKUP, "The Shrine Of Bombulus"),
    "Gloomy Cavern: Lockpick": LL_Location(54, LL_LocCat.PICKUP, "A Gloomy Cavern"),
    "Happy Stick: Hidden": LL_Location(55, LL_LocCat.PICKUP, "Happy Stick Woods"),
    "Happy Stick: Reward": LL_Location(56, LL_LocCat.PICKUP, "Happy Stick Woods"),
    "Wolf Den: Top Left": LL_Location(57, LL_LocCat.PICKUP, "The Wolf Den"),
    "Wolf Den: Pumpkin Door": LL_Location(58, LL_LocCat.PICKUP, "The Wolf Den"),
    "Wolf Den: Vine": LL_Location(59, LL_LocCat.PICKUP, "The Wolf Den"),
    "Upper Cavern: Three Gold Skeletons": LL_Location(60, LL_LocCat.PICKUP, "Upper Creepy Caverns"),
    "Under The Ravine: Left Vine": LL_Location(61, LL_LocCat.PICKUP, "Under The Ravine"),
    "Under The Ravine: Right Vine": LL_Location(62, LL_LocCat.PICKUP, "Under The Ravine"),
    "Creepy Caverns M: Pharaoh Bat Door": LL_Location(63, LL_LocCat.PICKUP, "Creepy Caverns Middle"),
    "Creepy Caverns R: Top Pharaohs": LL_Location(64, LL_LocCat.PICKUP, "Creepy Caverns Right"),
    "Creepy Caverns M: Gargoyles": LL_Location(65, LL_LocCat.PICKUP, "Creepy Caverns Middle"),
    "Castle Vampy: Top Room": LL_Location(66, LL_LocCat.PICKUP, "Castle Vampy"),
    "Castle Vampy: Maze": LL_Location(67, LL_LocCat.PICKUP, "Castle Vampy"),
    "Castle Vampy: Gauntlet": LL_Location(68, LL_LocCat.PICKUP, "Castle Vampy"),
    "Castle Vampy: Bat Closet": LL_Location(69, LL_LocCat.PICKUP, "Castle Vampy"),
    "Castle Vampy II: Candle Room": LL_Location(70, LL_LocCat.PICKUP, "Castle Vampy II"),
    "Castle Vampy II: Bloodsucker Room": LL_Location(71, LL_LocCat.PICKUP, "Castle Vampy II"),
    "Castle Vampy II: Vampire Lord": LL_Location(72, LL_LocCat.PICKUP, "Castle Vampy II"),
    "Castle Vampy II: Bat Room": LL_Location(73, LL_LocCat.PICKUP, "Castle Vampy II"),
    "Cabin in the Woods: Gold Skull": LL_Location(74, LL_LocCat.PICKUP, "Cabin In The Woods"),
    "Castle Vampy III: Center": LL_Location(75, LL_LocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy III: Behind the Pews": LL_Location(76, LL_LocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy III: AMBUSH!": LL_Location(77, LL_LocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy III: Halloween": LL_Location(78, LL_LocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy III: Bat room": LL_Location(79, LL_LocCat.PICKUP, "Castle Vampy III"),
    "Castle Vampy IV: Right Path": LL_Location(80, LL_LocCat.PICKUP, "Castle Vampy IV"),
    "Castle Vampy IV: Left Path": LL_Location(81, LL_LocCat.PICKUP, "Castle Vampy IV"),
    "Castle Vampy IV: Ballroom Right": LL_Location(82, LL_LocCat.PICKUP, "Castle Vampy IV"),
    "Castle Vampy IV: Right Secret Wall": LL_Location(83, LL_LocCat.PICKUP, "Castle Vampy IV"),
    "Castle Vampy IV: Ballroom Left": LL_Location(84, LL_LocCat.PICKUP, "Castle Vampy IV"),
    "Roof NW: Gutsy the Elder": LL_Location(85, LL_LocCat.PICKUP, "Castle Vampy Roof NW"),
    "Roof NE: Stoney the Elder": LL_Location(86, LL_LocCat.PICKUP, "Castle Vampy Roof NE"),
    "Roof SW: Drippy the Elder": LL_Location(87, LL_LocCat.PICKUP, "Castle Vampy Roof SW"),
    "Roof SE: Toasty the Elder": LL_Location(88, LL_LocCat.PICKUP, "Castle Vampy Roof SE"),
    "Bonkula Item": LL_Location(89, LL_LocCat.PICKUP, "The Heart Of Terror"),
    "Hidey-Hole: Bat Door": LL_Location(90, LL_LocCat.PICKUP, "A Hidey-Hole"),
    "Hidey-Hole: Pebbles": LL_Location(91, LL_LocCat.PICKUP, "A Hidey-Hole"),
    "Swampdog Lair: Entrance": LL_Location(92, LL_LocCat.PICKUP, "Swampdog Lair"),
    "Swampdog Lair: End": LL_Location(93, LL_LocCat.PICKUP, "Swampdog Lair"),
    "Q: Save Halloween Hill": LL_Location(94, LL_LocCat.QUEST, "The Evilizer"),
    "Q: Tree Trimming": LL_Location(95, LL_LocCat.QUEST, "A Cabin Trees"),
    "Q: Scaredy Cat": LL_Location(96, LL_LocCat.QUEST, "Halloween Hill"),
    "Q: Sticky Shoes": LL_Location(97, LL_LocCat.QUEST, "Halloween Hill"),
    "Q: Mushroom Hunt": LL_Location(98, LL_LocCat.QUEST, "The Witch's Cabin"),
    "Q: Zombie Stomp": LL_Location(99, LL_LocCat.QUEST, "Zombiton"),
    "Q: Smashing Pumpkins": LL_Location(100, LL_LocCat.QUEST, "Halloween Hill"),
    "Q: Silver Bullet": LL_Location(101, LL_LocCat.QUEST, "Zombiton"),
    "Q: Hairy Larry": LL_Location(102, LL_LocCat.QUEST, "The Wolf Den"),
    "Q: Ghostbusting": LL_Location(103, LL_LocCat.QUEST, "The Witch's Cabin"),
    "Q: The Rescue": LL_Location(104, LL_LocCat.QUEST, "A Gloomy Cavern"),
    "Q: The Collection": LL_Location(105, LL_LocCat.QUEST, "A Cabin Collector"),
}
def set_rules(multiworld, world, player):
    access_rules: Dict[str, CollectionRule] = {
        "Rocky Cliffs: Vine": lambda state: state.has("Fertilizer", player),
        "Rocky Cliffs: Rock Corner": lambda state: have_bombs(state, player),
        "Witch's Cabin: Bedroom": lambda state: have_light_source(state, player),
        "Bog Pit: Top Door": lambda state: state.has("Skull Key", player),
        "Tunnel: Swampdog Pumpkin Door": lambda state: state.has("Pumpkin Key", player),
        "Tunnel: Scratch Wall": lambda state: have_special_weapon_bullet(state, player),
        "Swamp Gas: Scratch Wall": lambda state: have_special_weapon_bullet(state, player),
        "Swamp Gas: Bat Door": lambda state: state.has("Bat Key", player),
        "Swamp Gas: Rock Prison": lambda state: have_bombs(state, player),
        "Dusty Crypt: Pumpkin Door": lambda state: state.has("Pumpkin Key", player),
        "Musty Crypt: Maze Room": lambda state: have_special_weapon_bullet(state, player),
        "Rusty Crypt: Vine": lambda state: state.has("Fertilizer", player),
        "Under The Lake: Bat Door": lambda state: state.has("Bat Key", player),
        "Tower Basement: DoorDoorDoorDoorDoorDoor": lambda state: state.has("Bat Key", player) and state.has("Skull Key", player) and state.has("Pumpkin Key", player),
        "Wolf Den: Pumpkin Door": lambda state: state.has("Pumpkin Key", player),
        "Wolf Den: Vine": lambda state: state.has("Fertilizer", player),
        "Under The Ravine: Left Vine": lambda state: state.has("Fertilizer", player),
        "Under The Ravine: Right Vine": lambda state: state.has("Fertilizer", player),
        "Creepy Caverns M: Pharaoh Bat Door": lambda state: state.has("Bat Key", player),
        "Castle Vampy IV: Ballroom Right": lambda state: state.has("Ghost Potion", player) and state.has("Silver Sling", player),
        "Castle Vampy IV: Ballroom Left": lambda state: state.has("Ghost Potion", player) and state.has("Silver Sling", player),
        "Roof NW: Gutsy the Elder": lambda state: have_special_weapon_damage(state, player),
        "Hidey-Hole: Bat Door": lambda state: state.has("Bat Key", player),
        "Swampdog Lair: End": lambda state: have_light_source(state, player) and state.has("Fertilizer", player),
        "Q: Scaredy Cat": lambda state: state.has("Cat", player),
        "Q: Mushroom Hunt": lambda state: state.has("Mushroom", player, 10),
        "Q: Zombie Stomp": lambda state: can_cleanse_crypts(state, player),
        "Q: Smashing Pumpkins": lambda state: can_cleanse_crypts(state, player),
        "Q: Silver Bullet": lambda state: can_cleanse_crypts(state, player) and state.has("Silver", player),
        "Q: Hairy Larry": lambda state: state.can_reach_region("Larry's Lair", player),
        "Q: Ghostbusting": lambda state: state.has("Doom Daisy", player) and state.has("Mushroom", player, 10),
        "Q: The Collection": lambda state: state.has("Silver Sling", player) and state.has("Ghost Potion", player) and state.can_reach_region("Castle Vampy", player),
    }
    for loc in multiworld.get_locations(player):
        if loc.name in access_rules:
            add_rule(loc, access_rules[loc.name])
def set_entrance_rules(multiworld, world, player):
    loonyland_entrance_table: List[LL_Entrance] = [
        LL_Entrance("Menu", "Halloween Hill", False),
        LL_Entrance("Menu", "Bowling", False),
        LL_Entrance("Menu", "Survival", False),
        LL_Entrance("Menu", "Boss Bash", False),
        LL_Entrance("Menu", "Loony Ball", False),
        LL_Entrance("Menu", "Remix", False),
        LL_Entrance("Halloween Hill", "A Cabin Trees", True),
        LL_Entrance("Halloween Hill", "The Witch's Cabin", True),
        LL_Entrance("Halloween Hill", "Bonita's Cabin", True),
        LL_Entrance("Halloween Hill", "Underground Tunnel", True),
        LL_Entrance("Halloween Hill", "The Bog Pit", True),
        LL_Entrance("Slurpy Swamp Mud", "Slurpy Swamp Mud East Warp", False),
        LL_Entrance("Slurpy Swamp Mud East Warp", "Swamp Gas Cavern", True),
        LL_Entrance("Slurpy Swamp Mud", "Slurpy Swamp Mud North Warp", False),
        LL_Entrance("Slurpy Swamp Mud North Warp", "Swamp Gas Cavern Back", True),
        LL_Entrance("Halloween Hill", "A Tiny Cabin", True, lambda state: state.has("Skull Key", player)),
        LL_Entrance("Halloween Hill", "The Witch's Cabin Back", True),
        LL_Entrance("Zombiton", "A Cabin Seer", True),
        LL_Entrance("Zombiton", "Benny's Cocktails", True),
        LL_Entrance("Halloween Hill", "Dusty Crypt Entrance", True),
        LL_Entrance("Zombiton", "Musty Crypt Entrance", True),
        LL_Entrance("Zombiton", "A Messy Cabin", True),
        LL_Entrance("Halloween Hill", "Rusty Crypt Entrance", True),
        LL_Entrance("Halloween Hill", "Under The Lake Entrance", True, lambda state: state.has("Orb", player, 4)),
        LL_Entrance("Halloween Hill", "Haunted Tower Entrance", True, lambda state: state.has("Ghost Potion", player)),
        LL_Entrance("Rocky Cliffs", "Abandoned Mines Entrance", True),
        LL_Entrance("Rocky Cliffs", "The Shrine Of Bombulus", True),
        LL_Entrance("Rocky Cliffs", "A Gloomy Cavern Entrance", True, lambda state: have_light_source(state, player)),
        LL_Entrance("Halloween Hill", "Happy Stick Woods", True, lambda state: state.has("Happy Stick", player)),
        LL_Entrance("Zombiton", "A Cabin Larry", True),
        LL_Entrance("Halloween Hill", "The Wolf Den Entrance", True),
        LL_Entrance("Rocky Cliffs", "Upper Creepy Caverns Left Warp", True, lambda state: state.has("Bombs", player)),
        LL_Entrance("Rocky Cliffs", "Creepy Caverns Left Bottom Warp", True, lambda state: have_light_source(state, player)),
        LL_Entrance("Vampy Land", "Creepy Caverns Right Bottom Warp", True),
        LL_Entrance("Vampy Land", "Castle Vampy", True),
        LL_Entrance("Halloween Hill", "Cabin In The Woods", True),
        LL_Entrance("Halloween Hill", "A Cabin Collector", True),
        LL_Entrance("Halloween Hill", "A Hidey-Hole", True),
        LL_Entrance("Halloween Hill", "Swampdog Lair Entrance", True),
        LL_Entrance("A Cabin Trees", "Halloween Hill", True),
        LL_Entrance("The Witch's Cabin", "Halloween Hill", True),
        LL_Entrance("The Witch's Cabin Back", "Halloween Hill", True),
        LL_Entrance("Bonita's Cabin", "Halloween Hill", True),
        LL_Entrance("The Bog Pit", "Halloween Hill", True),
        LL_Entrance("Underground Tunnel", "Halloween Hill", True),
        LL_Entrance("Underground Tunnel Zombie", "Benny's Cocktails", True),
        LL_Entrance("Swamp Gas Cavern", "Slurpy Swamp Mud North Warp", True),
        LL_Entrance("Swamp Gas Cavern Back", "Slurpy Swamp Mud East Warp", True),
        LL_Entrance("A Tiny Cabin", "Halloween Hill", True),
        LL_Entrance("A Cabin Seer", "Zombiton", True),
        LL_Entrance("Benny's Cocktails", "Zombiton", True),
        LL_Entrance("Benny's Cocktails", "Underground Tunnel Zombie", True),
        LL_Entrance("Dusty Crypt Entrance", "Dusty Crypt", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Dusty Crypt Entrance", "Halloween Hill", True),
        LL_Entrance("Dusty Crypt", "Dusty Crypt Entrance", False),
        LL_Entrance("Musty Crypt Entrance", "Musty Crypt", True, lambda state: have_light_source(state, player)),
        LL_Entrance("Musty Crypt Entrance", "Zombiton", True),
        LL_Entrance("Musty Crypt", "Musty Crypt Entrance", False),
        LL_Entrance("Rusty Crypt Entrance", "Rusty Crypt", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Rusty Crypt Entrance", "Halloween Hill", True),
        LL_Entrance("Rusty Crypt", "Rusty Crypt Entrance", False),
        LL_Entrance("A Messy Cabin", "Zombiton", True),
        LL_Entrance("Under The Lake Entrance", "Under The Lake", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Under The Lake Entrance", "Halloween Hill", True),
        LL_Entrance("Under The Lake", "Under The Lake Entrance", False),
        LL_Entrance("Under The Lake", "Under The Lake Exit", False),
        LL_Entrance("Under The Lake Exit", "Deeper Under The Lake", True),
        LL_Entrance("Under The Lake Exit", "Under The Lake", False),
        LL_Entrance("Deeper Under The Lake", "Under The Lake Exit", True),
        LL_Entrance("Deeper Under The Lake", "Frankenjulie's Laboratory", True),
        LL_Entrance("Frankenjulie's Laboratory", "Deeper Under The Lake", True),
        LL_Entrance("Frankenjulie's Laboratory", "Halloween Hill", True),
        LL_Entrance("Haunted Tower Entrance", "Haunted Tower", False, lambda state: state.has("Ghost Potion", player)),
        LL_Entrance("Haunted Tower", "Haunted Basement Entrance", False),
        LL_Entrance("Haunted Tower", "Haunted Tower Stairs Up", False),
        LL_Entrance("Haunted Tower", "Haunted Tower Stairs Down", False, lambda state: state.has("Bat Key", player) and state.has("Pumpkin Key", player) and state.has("Skull Key", player)),
        LL_Entrance("Haunted Tower Stairs Up", "Haunted Tower Floor 2 Entrance", True),
        LL_Entrance("Haunted Tower Stairs Up", "Haunted Tower", False, lambda state: state.has("Ghost Potion", player)),
        LL_Entrance("Haunted Tower Stairs Down", "Haunted Tower", False, lambda state: state.has("Bat Key", player) and state.has("Pumpkin Key", player) and state.has("Skull Key", player) and state.has("Ghost Potion", player)),
        LL_Entrance("Haunted Tower Stairs Down", "Haunted Basement Entrance", True, lambda state: have_light_source(state, player)),
        LL_Entrance("Haunted Tower Floor 2 Entrance", "Haunted Tower Stairs Up", True),
        LL_Entrance("Haunted Tower Floor 2 Entrance", "Haunted Tower Floor 2", False, lambda state: state.has("Ghost Potion", player)),
        LL_Entrance("Haunted Tower Floor 2", "Haunted Tower Floor 2 Entrance", False),
        LL_Entrance("Haunted Tower Floor 2", "Haunted Tower Floor 2 Exit", False),
        LL_Entrance("Haunted Tower Floor 2 Exit", "Haunted Tower Floor 2", False, lambda state: state.has("Ghost Potion", player)),
        LL_Entrance("Haunted Tower Floor 2 Exit", "Haunted Tower Floor 3 Entrance", True),
        LL_Entrance("Haunted Tower Floor 3 Entrance", "Haunted Tower Floor 2 Exit", True),
        LL_Entrance("Haunted Tower Floor 3 Entrance", "Haunted Tower Floor 3", False, lambda state: state.has("Ghost Potion", player)),
        LL_Entrance("Haunted Tower Floor 3", "Haunted Tower Floor 3 Entrance", False),
        LL_Entrance("Haunted Tower Floor 3", "Haunted Tower Floor 3 Exit", False),
        LL_Entrance("Haunted Tower Floor 3 Exit", "Haunted Tower Floor 3", False, lambda state: state.has("Ghost Potion", player)),
        LL_Entrance("Haunted Tower Floor 3 Exit", "Haunted Tower Roof", True),
        LL_Entrance("Haunted Tower Roof", "Halloween Hill", True),
        LL_Entrance("Haunted Tower Roof", "Haunted Tower Floor 3", True),
        LL_Entrance("Haunted Basement Entrance", "Haunted Tower Stairs Down", True),
        LL_Entrance("Haunted Basement Entrance", "Haunted Basement", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Haunted Basement", "Haunted Basement Entrance", False),
        LL_Entrance("Abandoned Mines Entrance", "Abandoned Mines", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Abandoned Mines Entrance", "Rocky Cliffs", True),
        LL_Entrance("Abandoned Mines", "Abandoned Mines Entrance", False),
        LL_Entrance("The Shrine Of Bombulus", "Rocky Cliffs", True),
        LL_Entrance("A Gloomy Cavern Entrance", "A Gloomy Cavern", False, lambda state: have_light_source(state, player)),
        LL_Entrance("A Gloomy Cavern Entrance", "Rocky Cliffs", True),
        LL_Entrance("A Gloomy Cavern", "A Gloomy Cavern Entrance", False),
        LL_Entrance("Happy Stick Woods", "Halloween Hill", True),
        LL_Entrance("The Wolf Den Entrance", "The Wolf Den", False, lambda state: state.has("Silver Sling", player) and have_light_source(state, player)),
        LL_Entrance("The Wolf Den Entrance", "Halloween Hill", True),
        LL_Entrance("The Wolf Den", "The Wolf Den Entrance", False),
        LL_Entrance("The Wolf Den", "The Wolf Den Exit", False),
        LL_Entrance("The Wolf Den Exit", "Larry's Lair", True),
        LL_Entrance("The Wolf Den Exit", "The Wolf Den", False, lambda state: state.has("Silver Sling", player) and have_light_source(state, player)),
        LL_Entrance("A Cabin Larry", "Zombiton", True),
        LL_Entrance("Upper Creepy Caverns Left Warp", "Rocky Cliffs", True, lambda state: state.has("Bombs", player)),
        LL_Entrance("Upper Creepy Caverns Left Warp", "Upper Creepy Caverns", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Upper Creepy Caverns", "Upper Creepy Caverns Left Warp", False),
        LL_Entrance("Upper Creepy Caverns Middle Warp", "Creepy Caverns Left Top Warp", True, lambda state: have_light_source(state, player)),
        LL_Entrance("Upper Creepy Caverns Middle Warp", "Upper Creepy Caverns", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Upper Creepy Caverns", "Upper Creepy Caverns Middle Warp", False),
        LL_Entrance("Upper Creepy Caverns Right Warp", "Creepy Caverns Middle Top Warp", True, lambda state: have_light_source(state, player)),
        LL_Entrance("Upper Creepy Caverns Right Warp", "Upper Creepy Caverns", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Upper Creepy Caverns", "Upper Creepy Caverns Right Warp", False),
        LL_Entrance("Under The Ravine", "Creepy Caverns Middle Right Warp", True, lambda state: have_light_source(state, player)),
        LL_Entrance("Under The Ravine", "Creepy Caverns Right Left Warp", True, lambda state: have_light_source(state, player)),
        LL_Entrance("Creepy Caverns Left Bottom Warp", "Rocky Cliffs", True),
        LL_Entrance("Creepy Caverns Left Bottom Warp", "Creepy Caverns Left", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Creepy Caverns Left", "Creepy Caverns Left Bottom Warp", False),
        LL_Entrance("Creepy Caverns Left", "Creepy Caverns Left Top Warp", False),
        LL_Entrance("Creepy Caverns Left Top Warp", "Creepy Caverns Left", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Creepy Caverns Left Top Warp", "Upper Creepy Caverns Middle Warp", False),
        LL_Entrance("Creepy Caverns Middle Top Warp", "Upper Creepy Caverns", True),
        LL_Entrance("Creepy Caverns Middle Top Warp", "Creepy Caverns Middle", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Creepy Caverns Middle", "Creepy Caverns Middle Top Warp", False),
        LL_Entrance("Creepy Caverns Middle", "Creepy Caverns Middle Right Warp", False),
        LL_Entrance("Creepy Caverns Middle Right Warp", "Under The Ravine", True),
        LL_Entrance("Creepy Caverns Middle Right Warp", "Creepy Caverns Middle", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Creepy Caverns Right Left Warp", "Under The Ravine", True),
        LL_Entrance("Creepy Caverns Right Left Warp", "Creepy Caverns Right", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Creepy Caverns Right", "Creepy Caverns Right Left Warp", False),
        LL_Entrance("Creepy Caverns Right", "Creepy Caverns Right Bottom Warp", False),
        LL_Entrance("Creepy Caverns Right Bottom Warp", "Creepy Caverns Right", False, lambda state: have_light_source(state, player)),
        LL_Entrance("Creepy Caverns Right Bottom Warp", "Vampy Land", True),
        LL_Entrance("Castle Vampy", "Halloween Hill", True),
        LL_Entrance("Castle Vampy", "Castle Vampy Skull Jail", False, lambda state: state.has("Skull Key", player)),
        LL_Entrance("Castle Vampy Skull Jail", "Castle Vampy", False, lambda state: state.has("Skull Key", player)),
        LL_Entrance("Castle Vampy Skull Jail", "Castle Vampy II", True),
        LL_Entrance("Castle Vampy", "Castle Vampy II NE", True, lambda state: state.has("Bat Statue", player, 4)),
        LL_Entrance("Castle Vampy", "Castle Vampy II SE", True, lambda state: state.has("Bat Statue", player, 4)),
        LL_Entrance("Castle Vampy", "Castle Vampy II SW", True, lambda state: state.has("Bat Statue", player, 4)),
        LL_Entrance("Castle Vampy", "Castle Vampy II NW", True, lambda state: state.has("Bat Statue", player, 4)),
        LL_Entrance("Castle Vampy II", "Castle Vampy Skull Jail", True),
        LL_Entrance("Castle Vampy II", "Castle Vampy II Bat Jail", False, lambda state: state.has("Bat Key", player)),
        LL_Entrance("Castle Vampy II Bat Jail", "Castle Vampy II", False, lambda state: state.has("Bat Key", player)),
        LL_Entrance("Castle Vampy II Bat Jail", "Castle Vampy III", True),
        LL_Entrance("Castle Vampy II NE", "Castle Vampy", True),
        LL_Entrance("Castle Vampy II NE", "Castle Vampy III NE", True),
        LL_Entrance("Castle Vampy II SE", "Castle Vampy", True),
        LL_Entrance("Castle Vampy II SE", "Castle Vampy III SE", True),
        LL_Entrance("Castle Vampy II SW", "Castle Vampy", True),
        LL_Entrance("Castle Vampy II SW", "Castle Vampy III SW", True),
        LL_Entrance("Castle Vampy II NW", "Castle Vampy", True),
        LL_Entrance("Castle Vampy II NW", "Castle Vampy III NW", True),
        LL_Entrance("Cabin In The Woods", "Halloween Hill", True),
        LL_Entrance("Castle Vampy III", "Castle Vampy II Bat Jail", True),
        LL_Entrance("Castle Vampy III", "Castle Vampy III Pumpkin Jail", False, lambda state: state.has("Pumpkin Key", player)),
        LL_Entrance("Castle Vampy III Pumpkin Jail", "Castle Vampy III", False, lambda state: state.has("Pumpkin Key", player)),
        LL_Entrance("Castle Vampy III Pumpkin Jail", "Castle Vampy IV", True),
        LL_Entrance("Castle Vampy III NE", "Castle Vampy II NE", True),
        LL_Entrance("Castle Vampy III NE", "Castle Vampy IV NE", True),
        LL_Entrance("Castle Vampy III SE", "Castle Vampy II SE", True),
        LL_Entrance("Castle Vampy III SE", "Castle Vampy IV SE", True),
        LL_Entrance("Castle Vampy III SW", "Castle Vampy II SW", True),
        LL_Entrance("Castle Vampy III SW", "Castle Vampy IV SW", True),
        LL_Entrance("Castle Vampy III NW", "Castle Vampy II NW", True),
        LL_Entrance("Castle Vampy III NW", "Castle Vampy IV NW", True),
        LL_Entrance("Castle Vampy IV", "Castle Vampy III Pumpkin Jail", True),
        LL_Entrance("Castle Vampy IV", "The Heart Of Terror Entrance", True, lambda state: state.has("Vampire Bust", player, 8)),
        LL_Entrance("Castle Vampy IV NE", "Castle Vampy III NE", True),
        LL_Entrance("Castle Vampy IV NE", "Castle Vampy Roof NE", True),
        LL_Entrance("Castle Vampy IV SE", "Castle Vampy III SE", True),
        LL_Entrance("Castle Vampy IV SE", "Castle Vampy Roof SE", True),
        LL_Entrance("Castle Vampy IV SW", "Castle Vampy III SW", True),
        LL_Entrance("Castle Vampy IV SW", "Castle Vampy Roof SW", True),
        LL_Entrance("Castle Vampy IV NW", "Castle Vampy III NW", True),
        LL_Entrance("Castle Vampy IV NW", "Castle Vampy Roof NW", True),
        LL_Entrance("A Cabin Collector", "Halloween Hill", True),
        LL_Entrance("Castle Vampy Roof NE", "Castle Vampy IV NE", True),
        LL_Entrance("Castle Vampy Roof SE", "Castle Vampy IV SE", True),
        LL_Entrance("Castle Vampy Roof SW", "Castle Vampy IV SW", True),
        LL_Entrance("Castle Vampy Roof NW", "Castle Vampy IV NW", True),
        LL_Entrance("The Evilizer", "Halloween Hill", True),
        LL_Entrance("The Heart Of Terror Entrance", "The Heart Of Terror", False, lambda state: have_light_source(state, player)),
        LL_Entrance("The Heart Of Terror", "The Evilizer", True),
        LL_Entrance("The Heart Of Terror", "Empty Rooftop", True),
        LL_Entrance("A Hidey-Hole", "Halloween Hill", True),
        LL_Entrance("Empty Rooftop", "Halloween Hill", True),
        LL_Entrance("Swampdog Lair Entrance", "Swampdog Lair", False, lambda state: state.has("Boots", player)),
        LL_Entrance("Swampdog Lair", "Swampdog Lair Entrance", True),
        LL_Entrance("Larry's Lair", "Halloween Hill", True),
        LL_Entrance("Halloween Hill", "Slurpy Swamp Mud", False, lambda state: state.has("Boots", player)),
        LL_Entrance("Slurpy Swamp Mud", "Halloween Hill", False, lambda state: state.has("Boots", player)),
        LL_Entrance("Slurpy Swamp Mud North Warp", "Slurpy Swamp Mud", False, lambda state: state.has("Boots", player)),
        LL_Entrance("Slurpy Swamp Mud East Warp", "Slurpy Swamp Mud", False, lambda state: state.has("Boots", player)),
        LL_Entrance("Zombiton", "Halloween Hill", False),
        LL_Entrance("Halloween Hill", "Rocky Cliffs", False, lambda state: state.has("Big Gem", player)),
        LL_Entrance("Rocky Cliffs", "Halloween Hill", False, lambda state: state.has("Big Gem", player)),
        LL_Entrance("Underground Tunnel", "Underground Tunnel Mud", False, lambda state: state.has("Boots", player)),
        LL_Entrance("Underground Tunnel Mud", "Underground Tunnel", False, lambda state: state.has("Boots", player)),
        LL_Entrance("Underground Tunnel Mud", "Underground Tunnel Zombie", False, lambda state: state.has("Boots", player)),
        LL_Entrance("Swamp Gas Cavern", "Swamp Gas Cavern Back", False, lambda state: state.has("Boots", player)),
]
    for region in multiworld.get_regions(player):
        for entry in loonyland_entrance_table:
            if entry.source_region == region.name:
                region.connect(connecting_region=world.get_region(entry.target_region), rule=entry.rule)
