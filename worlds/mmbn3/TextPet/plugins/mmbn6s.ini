[CommandDatabase]
name = mmbn6s
cont = 255



#[Command]
#name = nop
#mask = FF
#desc = Does nothing.
#base = E5



[Command]
name = end
mask = FF
desc = Closes any open message box and ends script execution.
base = E6
ends = always



[Command]
name = spacePx
mask = FF FF 00
desc = Moves the text position to the right a number of pixels.
base = EC 01

[Parameter]
name = count
offs = 2
bits = 8
desc = The amount of pixels to insert.



[Command]
name = checkGameVersion
mask = FF 00 00
desc = Checks the current game version, and jumps to a different script depending on if the current game is Cybeast Gregar or Cybeast Falzar.
base = EF

[Parameter]
name = jumpIfCybeastGregar
offs = 1
bits = 8
desc = The script to jump to if the current game is Cybeast Gregar, or 255 to continue with the current script.
type = jump
valn = mmbn-jump

[Parameter]
name = jumpIfCybeastFalzar
offs = 2
bits = 8
desc = The script to jump to if the current game is Cybeast Falzar, or 255 to continue with the current script.
type = jump
valn = mmbn-jump



[Command]
name = printBuffer
mask = FF 80 00
desc = Prints the contents of the specified 32-bit buffer as a decimal number.
base = F2 00
prnt = true

[Parameter]
name = buffer
offs = 1
bits = 7
desc = The buffer to print.

[Parameter]
name = minLength
offs = 2
bits = 4
desc = The minimum amount of characters to print. If the number consists of less digits, additional spaces are printed.

[Parameter]
name = padZeros
offs = 2.6
bits = 1
desc = If true, pads the amount of Zenny with zeros instead of spaces, if necessary.
valn = bool

[Parameter]
name = padLeft
offs = 2.7
bits = 1
desc = If true, places the padding, if any, to the left of the amount of Zenny instead of to the right.
valn = bool



[Command]
name = printNaviDataChipStat
mask = FF 80 00
desc = Prints a stat from the currently active Navi Data Chip. Only functions properly in the status screen.
base = F2 80
prnt = true

[Parameter]
name = stat
offs = 1
bits = 7
desc = The stat to print. Possible values are: 0 = HP, 1 = Attack, 2 = MegaFolder, 3 = Custom, 4 = Speed, 5 = Charge

[Parameter]
name = minLength
offs = 2
bits = 4
desc = The minimum amount of characters to print. If the number consists of less digits, additional spaces are printed.

[Parameter]
name = padZeros
offs = 2.6
bits = 1
desc = If true, pads the amount of Zenny with zeros instead of spaces, if necessary.
valn = bool

[Parameter]
name = padLeft
offs = 2.7
bits = 1
desc = If true, places the padding, if any, to the left of the amount of Zenny instead of to the right.
valn = bool



[Command]
name = printShortString
mask = FF FF
desc = Holdover from Mega Man Battle Network 4. Does not function in this game.
base = FA 00
rwnd = 1
prnt = true



[Command]
name = printLinkBuffer
mask = FF FF 00
desc = Prints the specified link string buffer (such as player name, player comment, opponent name, etc.).
base = FA 01
# Takes priority over printShortString.
plen = 2
prnt = true

[Parameter]
name = buffer
offs = 2
bits = 8
desc = The link string buffer to print.



[Command]
name = printModBuffer
mask = FF FF 00 00
desc = Prints the contents of the specified 32-bit buffer as a decimal number. Performs the same function as printBuffer, but there has much less options. Primarily used for Mod Card parameter buffers.
base = FA 02
# Takes priority over printShortString.
plen = 2
prnt = true

[Parameter]
name = length
offs = 2
bits = 4
desc = The exact number of characters to print. The contents of the buffer must have at most this number of digits. If it has less digits, the number is left-padded with spaces. If length equals zero, then this command prints as many characters as needed to represent the contents of the buffer in text, up to 8 characters.

[Parameter]
name = buffer
offs = 3
bits = 8
desc = The buffer to print. Must be at least 1.



[Extension]
name = printModBuffer
mask = FF FF 00 00
base = FA 03



[Command]
name = ereaderName
mask = FF FF 00
desc = Prints the specified name script data that was received from the e-Reader.
base = FF 00
prnt = true

[Parameter]
name = data
offs = 2
bits = 8
desc = The index of the data to print. 0 and 1 pertain to Rare Chip Data.



[Command]
name = ereaderDesc
mask = FF FF 00
desc = Prints the specified description script data that was received from the e-Reader.
base = FF 01
prnt = true

[Parameter]
name = data
offs = 2
bits = 8
desc = The index of the data to print. 0 and 1 pertain to Rare Chip Data.