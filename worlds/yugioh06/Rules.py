from worlds.generic.Rules import set_rule, add_rule
from worlds.yugioh06 import Limited_Duels, Theme_Duels, booster_packs


def set_rules(world):
    player = world.player
    world = world.multiworld

    # Campaign
    add_rule(world.get_location("Campaign Tier 1: 1 Win", player), lambda state: state.has("Tier 1 Beaten", player))
    add_rule(world.get_location("Campaign Tier 1: 3 Wins A", player), lambda state: state.has("Tier 1 Beaten", player, 3))
    add_rule(world.get_location("Campaign Tier 1: 3 Wins B", player), lambda state: state.has("Tier 1 Beaten", player, 3))
    add_rule(world.get_location("Campaign Tier 1: 5 Wins A", player), lambda state: state.has("Tier 1 Beaten", player, 5))
    add_rule(world.get_location("Campaign Tier 1: 5 Wins B", player), lambda state: state.has("Tier 1 Beaten", player, 5))
    add_rule(world.get_location("Campaign Tier 2: 1 Win", player), lambda state: state.has("Tier 2 Beaten", player))
    add_rule(world.get_location("Campaign Tier 2: 3 Wins A", player), lambda state: state.has("Tier 2 Beaten", player, 3))
    add_rule(world.get_location("Campaign Tier 2: 3 Wins B", player), lambda state: state.has("Tier 2 Beaten", player, 3))
    add_rule(world.get_location("Campaign Tier 2: 5 Wins A", player), lambda state: state.has("Tier 2 Beaten", player, 5))
    add_rule(world.get_location("Campaign Tier 2: 5 Wins B", player), lambda state: state.has("Tier 2 Beaten", player, 5))
    add_rule(world.get_location("Campaign Tier 3: 1 Win", player), lambda state: state.has("Tier 3 Beaten", player))
    add_rule(world.get_location("Campaign Tier 3: 3 Wins A", player), lambda state: state.has("Tier 3 Beaten", player, 3))
    add_rule(world.get_location("Campaign Tier 3: 3 Wins B", player), lambda state: state.has("Tier 3 Beaten", player, 3))
    add_rule(world.get_location("Campaign Tier 3: 5 Wins A", player), lambda state: state.has("Tier 3 Beaten", player, 5))
    add_rule(world.get_location("Campaign Tier 3: 5 Wins B", player), lambda state: state.has("Tier 3 Beaten", player, 5))
    add_rule(world.get_location("Campaign Tier 4: 5 Wins A", player), lambda state: state.has("Tier 4 Beaten", player, 5))
    add_rule(world.get_location("Campaign Tier 4: 5 Wins B", player), lambda state: state.has("Tier 4 Beaten", player, 5))

    # Bonuses
    add_rule(world.get_location("Duelist Bonus Level 1", player), lambda state: state.has("Tier 1 Beaten", player))
    add_rule(world.get_location("Duelist Bonus Level 2", player), lambda state: state.has("Tier 2 Beaten", player))
    add_rule(world.get_location("Duelist Bonus Level 3", player), lambda state: state.has("Tier 3 Beaten", player))
    add_rule(world.get_location("Duelist Bonus Level 4", player), lambda state: state.has("Tier 4 Beaten", player))
    add_rule(world.get_location("Duelist Bonus Level 5", player), lambda state: state.has("Tier 5 Beaten", player))
    add_rule(world.get_location("Max ATK Bonus", player), lambda state: state.yugioh06_difficulty(player, 2))
    add_rule(world.get_location("No Spell Cards Bonus", player), lambda state: state.yugioh06_difficulty(player, 2))
    add_rule(world.get_location("No Trap Cards Bonus", player), lambda state: state.yugioh06_difficulty(player, 2))
    add_rule(world.get_location("Low Deck Bonus", player), lambda state:
             state.has_any(["Reasoning", "Monster Gate", "Magical Merchant"], player) and
             state.yugioh06_difficulty(player, 3))
    add_rule(world.get_location("Extremely Low Deck Bonus", player), lambda state:
             state.has_any(["Reasoning", "Monster Gate", "Magical Merchant"], player) and
             state.yugioh06_difficulty(player, 5))
    add_rule(world.get_location("Exactly 0 LP Bonus", player), lambda state: state.yugioh06_difficulty(player, 2))
    add_rule(world.get_location("Quick Finish Bonus", player), lambda state: state.has("Quick-Finish", player))
    add_rule(world.get_location("Exodia Finish Bonus", player), lambda state: state.yugioh06_can_exodia_win(player))
    add_rule(world.get_location("Last Turn Finish Bonus", player),
             lambda state: state.yugioh06_can_last_turn_win(player))
    add_rule(world.get_location("Yata-Garasu Finish Bonus", player),
             lambda state: state.yugioh06_can_yata_lock(player))
    add_rule(world.get_location("Skull Servant Finish Bonus", player),
             lambda state: state.has("Skull Servant", player) and state.yugioh06_difficulty(player, 3))
    add_rule(world.get_location("Konami Bonus", player), lambda state: state.yugioh06_can_get_konami_bonus(player))
    # placeholder
    # TODO: Add more ways to do over 4000 at once
    add_rule(world.get_location("Max Damage Bonus", player), lambda state: state.has("Wave-Motion Cannon", player))
    # TODO: Special Summon Collection C isn't handled yet
    add_rule(world.get_location("Fusion Summon Bonus", player),
             lambda state: state.has_any(["Polymerization", "Fusion Gate", "Power Bond"], player))
    # TODO: Probably missing some from side sets
    add_rule(world.get_location("Ritual Summon Bonus", player), lambda state: state.has("Ritual", player))
    # TODO: Detail out the LP gain cards
    add_rule(world.get_location("Over 20000 LP Bonus", player),
             lambda state: state.has("LP Recovery Collection", player))
    # TODO: Add ways to help reduce life
    add_rule(world.get_location("Low LP Bonus", player), lambda state: state.yugioh06_difficulty(player, 5))
    add_rule(world.get_location("Extremely Low LP Bonus", player), lambda state: state.yugioh06_difficulty(player, 9))
    # TODO: Detail out the direct damage cards
    add_rule(world.get_location("Effect Damage Only Bonus", player),
             lambda state: state.has_any(["Wave-Motion Cannon", "Direct Damage Collection"], player))
    # TODO: Detail out the stall cards
    add_rule(world.get_location("Final Countdown Finish Bonus", player),
             lambda state: state.has_all(["Final Countdown", "Continuous Spell/Trap A"], player))
    add_rule(world.get_location("Destiny Board Finish Bonus", player),
             lambda state: state.has_all(["Destiny Board", "Continuous Spell/Trap A"], player))

    # Cards
    add_rule(world.get_location("Obtain all pieces of Exodia", player),
             lambda state: state.has("Exodia", player))
    add_rule(world.get_location("Obtain Final Countdown", player),
             lambda state: state.has("Final Countdown", player))
    add_rule(world.get_location("Obtain Victory Dragon", player),
             lambda state: state.has("Victory D", player))
    add_rule(world.get_location("Obtain Ojama Delta Hurricane and its required cards", player),
             lambda state: state.yugioh06_has_ojama_delta_hurricane(player))
    add_rule(world.get_location("Obtain Huge Revolution and its required cards", player),
             lambda state: state.yugioh06_has_huge_revolution(player))
    add_rule(world.get_location("Obtain Perfectly Ultimate Great Moth and its required cards", player),
             lambda state: state.yugioh06_has_perfectly_ultimate_great_moth( player))
    add_rule(world.get_location("Obtain Valkyrion the Magna Warrior and its pieces", player),
             lambda state: state.yugioh06_has_valkyrion_the_magna_warrior(player))
    add_rule(world.get_location("Dark Sage and its required cards", player),
             lambda state: state.yugioh06_has_dark_sage(player))
    add_rule(world.get_location("Obtain Destiny Board and its letters", player),
             lambda state: state.yugioh06_has_destiny_board(player))
    add_rule(world.get_location("Obtain all XYZ-Dragon Cannon fusions and their materials", player),
             lambda state: state.yugioh06_has_all_xyz_dragon_cannon_fusions(player))
    add_rule(world.get_location("Obtain VWXYZ-Dragon Catapult Cannon and the fusion materials", player),
             lambda state: state.yugioh06_has_vwxyz_dragon_catapult_cannon(player))
    add_rule(world.get_location("Obtain Hamon, Lord of Striking Thunder", player),
             lambda state: state.has("Hamon, Lord of Striking Thunder", player))
    add_rule(world.get_location("Obtain Raviel, Lord of Phantasms", player),
             lambda state: state.has("Raviel, Lord of Phantasms", player))
    add_rule(world.get_location("Obtain Uria, Lord of Searing Flames", player),
             lambda state: state.has("Uria, Lord of Searing Flames", player))
    add_rule(world.get_location("Obtain Gate Guardian and its pieces", player),
             lambda state: state.yugioh06_has_gate_guardian(player))
    add_rule(world.get_location("Dark Scorpion Combination and its required cards", player),
             lambda state: state.yugioh06_has_dark_scorpion_combination(player))
    # Limited Duels
    add_rule(world.get_location("LD01 All except Level 4 forbidden", player),
             lambda state: state.has("LD01 All except Level 4 forbidden Unlock", player))
    add_rule(world.get_location("LD01 All except Level 4 forbidden Complete", player),
             lambda state: state.has("LD01 All except Level 4 forbidden Unlock", player)),
    add_rule(world.get_location("LD02 Medium/high Level forbidden", player),
             lambda state: state.has("LD02 Medium/high Level forbidden Unlock", player)),
    add_rule(world.get_location("LD02 Medium/high Level forbidden Complete", player),
             lambda state: state.has("LD02 Medium/high Level forbidden Unlock", player)),
    add_rule(world.get_location("LD03 ATK 1500 or more forbidden", player),
             lambda state: state.has("LD03 ATK 1500 or more forbidden Unlock", player)),
    add_rule(world.get_location("LD03 ATK 1500 or more forbidden Complete", player),
             lambda state: state.has("LD03 ATK 1500 or more forbidden Unlock", player)),
    add_rule(world.get_location("LD04 Flip Effects forbidden", player),
             lambda state: state.has("LD04 Flip Effects forbidden Unlock", player)),
    add_rule(world.get_location("LD04 Flip Effects forbidden Complete", player),
             lambda state: state.has("LD04 Flip Effects forbidden Unlock", player)),
    add_rule(world.get_location("LD05 Tributes forbidden", player),
             lambda state: state.has("LD05 Tributes forbidden Unlock", player)),
    add_rule(world.get_location("LD05 Tributes forbidden Complete", player),
             lambda state: state.has("LD05 Tributes forbidden Unlock", player)),
    add_rule(world.get_location("LD06 Traps forbidden", player),
             lambda state: state.has("LD06 Traps forbidden Unlock", player)),
    add_rule(world.get_location("LD06 Traps forbidden Complete", player),
             lambda state: state.has("LD06 Traps forbidden Unlock", player)),
    add_rule(world.get_location("LD07 Large Deck A", player),
             lambda state: state.has("LD07 Large Deck A Unlock", player)),
    add_rule(world.get_location("LD07 Large Deck A Complete", player),
             lambda state: state.has("LD07 Large Deck A Unlock", player)),
    add_rule(world.get_location("LD08 Large Deck B", player),
             lambda state: state.has("LD08 Large Deck B Unlock", player)),
    add_rule(world.get_location("LD08 Large Deck B Complete", player),
             lambda state: state.has("LD08 Large Deck B Unlock", player)),
    add_rule(world.get_location("LD09 Sets Forbidden", player),
             lambda state: state.has("LD09 Sets Forbidden Unlock", player)),
    add_rule(world.get_location("LD09 Sets Forbidden Complete", player),
             lambda state: state.has("LD09 Sets Forbidden Unlock", player)),
    add_rule(world.get_location("LD10 All except LV monsters forbidden", player),
             lambda state: state.has("LD10 All except LV monsters forbidden Unlock", player)),
    add_rule(world.get_location("LD10 All except LV monsters forbidden Complete", player),
             lambda state: state.has("LD10 All except LV monsters forbidden Unlock", player)),
    add_rule(world.get_location("LD11 All except Fairies forbidden", player),
             lambda state: state.has("LD11 All except Fairies forbidden Unlock", player)),
    add_rule(world.get_location("LD11 All except Fairies forbidden Complete", player),
             lambda state: state.has("LD11 All except Fairies forbidden Unlock", player)),
    add_rule(world.get_location("LD12 All except Wind forbidden", player),
             lambda state: state.has("LD12 All except Wind forbidden Unlock", player)),
    add_rule(world.get_location("LD12 All except Wind forbidden Complete", player),
             lambda state: state.has("LD12 All except Wind forbidden Unlock", player)),
    add_rule(world.get_location("LD13 All except monsters forbidden", player),
             lambda state: state.has("LD13 All except monsters forbidden Unlock", player)),
    add_rule(world.get_location("LD13 All except monsters forbidden Complete", player),
             lambda state: state.has("LD13 All except monsters forbidden Unlock", player)),
    add_rule(world.get_location("LD14 Level 3 or below forbidden", player),
             lambda state: state.has("LD14 Level 3 or below forbidden Unlock", player)),
    add_rule(world.get_location("LD14 Level 3 or below forbidden Complete", player),
             lambda state: state.has("LD14 Level 3 or below forbidden Unlock", player)),
    add_rule(world.get_location("LD15 DEF 1500 or less forbidden", player),
             lambda state: state.has("LD15 DEF 1500 or less forbidden Unlock", player)),
    add_rule(world.get_location("LD15 DEF 1500 or less forbidden Complete", player),
             lambda state: state.has("LD15 DEF 1500 or less forbidden Unlock", player)),
    add_rule(world.get_location("LD16 Effect Monsters forbidden", player),
             lambda state: state.has("LD16 Effect Monsters forbidden Unlock", player)),
    add_rule(world.get_location("LD16 Effect Monsters forbidden Complete", player),
             lambda state: state.has("LD16 Effect Monsters forbidden Unlock", player)),
    add_rule(world.get_location("LD17 Spells forbidden", player),
             lambda state: state.has("LD17 Spells forbidden Unlock", player)),
    add_rule(world.get_location("LD17 Spells forbidden Complete", player),
             lambda state: state.has("LD17 Spells forbidden Unlock", player)),
    add_rule(world.get_location("LD18 Attacks forbidden", player),
             lambda state: state.has("LD18 Attacks forbidden Unlock", player)),
    add_rule(world.get_location("LD18 Attacks forbidden Complete", player),
             lambda state: state.has("LD18 Attacks forbidden Unlock", player)),
    add_rule(world.get_location("LD19 All except E-Hero's forbidden", player),
             lambda state: state.has("LD19 All except E-Hero's forbidden Unlock", player)),
    add_rule(world.get_location("LD19 All except E-Hero's forbidden Complete", player),
             lambda state: state.has("LD19 All except E-Hero's forbidden Unlock", player)),
    add_rule(world.get_location("LD20 All except Warriors forbidden", player),
             lambda state: state.has("LD20 All except Warriors forbidden Unlock", player)),
    add_rule(world.get_location("LD20 All except Warriors forbidden Complete", player),
             lambda state: state.has("LD20 All except Warriors forbidden Unlock", player)),
    add_rule(world.get_location("LD21 All except Dark forbidden", player),
             lambda state: state.has("LD21 All except Dark forbidden Unlock", player)),
    add_rule(world.get_location("LD21 All except Dark forbidden Complete", player),
             lambda state: state.has("LD21 All except Dark forbidden Unlock", player)),
    add_rule(world.get_location("LD22 All limited cards forbidden", player),
             lambda state: state.has("LD22 All limited cards forbidden Unlock", player)),
    add_rule(world.get_location("LD22 All limited cards forbidden Complete", player),
             lambda state: state.has("LD22 All limited cards forbidden Unlock", player)),
    add_rule(world.get_location("LD23 Refer to Mar 05 Banlist", player),
             lambda state: state.has("LD23 Refer to Mar 05 Banlist Unlock", player)),
    add_rule(world.get_location("LD23 Refer to Mar 05 Banlist Complete", player),
             lambda state: state.has("LD23 Refer to Mar 05 Banlist Unlock", player)),
    add_rule(world.get_location("LD24 Refer to Sept 04 Banlist", player),
             lambda state: state.has("LD24 Refer to Sept 04 Banlist Unlock", player)),
    add_rule(world.get_location("LD24 Refer to Sept 04 Banlist Complete", player),
             lambda state: state.has("LD24 Refer to Sept 04 Banlist Unlock", player)),
    add_rule(world.get_location("LD25 Low Life Points", player),
             lambda state: state.has("LD25 Low Life Points Unlock", player)),
    add_rule(world.get_location("LD25 Low Life Points Complete", player),
             lambda state: state.has("LD25 Low Life Points Unlock", player)),
    add_rule(world.get_location("LD26 All except Toons forbidden", player),
             lambda state: state.has("LD26 All except Toons forbidden Unlock", player)),
    add_rule(world.get_location("LD26 All except Toons forbidden Complete", player),
             lambda state: state.has("LD26 All except Toons forbidden Unlock", player)),
    add_rule(world.get_location("LD27 All except Spirits forbidden", player),
             lambda state: state.has("LD27 All except Spirits forbidden Unlock", player)),
    add_rule(world.get_location("LD27 All except Spirits forbidden Complete", player),
             lambda state: state.has("LD27 All except Spirits forbidden Unlock", player)),
    add_rule(world.get_location("LD28 All except Dragons forbidden", player),
             lambda state: state.has("LD28 All except Dragons forbidden Unlock", player)),
    add_rule(world.get_location("LD28 All except Dragons forbidden Complete", player),
             lambda state: state.has("LD28 All except Dragons forbidden Unlock", player)),
    add_rule(world.get_location("LD29 All except Spellcasters forbidden", player),
             lambda state: state.has("LD29 All except Spellcasters forbidden Unlock", player)),
    add_rule(world.get_location("LD29 All except Spellcasters forbidden Complete", player),
             lambda state: state.has("LD29 All except Spellcasters forbidden Unlock", player)),
    add_rule(world.get_location("LD30 All except Light forbidden", player),
             lambda state: state.has("LD30 All except Light forbidden Unlock", player)),
    add_rule(world.get_location("LD30 All except Light forbidden Complete", player),
             lambda state: state.has("LD30 All except Light forbidden Unlock", player)),
    add_rule(world.get_location("LD31 All except Fire forbidden", player),
             lambda state: state.has("LD31 All except Fire forbidden Unlock", player)),
    add_rule(world.get_location("LD31 All except Fire forbidden Complete", player),
             lambda state: state.has("LD31 All except Fire forbidden Unlock", player)),
    add_rule(world.get_location("LD32 Decks with multiples forbidden", player),
             lambda state: state.has("LD32 Decks with multiples forbidden Unlock", player)),
    add_rule(world.get_location("LD32 Decks with multiples forbidden Complete", player),
             lambda state: state.has("LD32 Decks with multiples forbidden Unlock", player)),
    add_rule(world.get_location("LD33 Special Summons forbidden", player),
             lambda state: state.has("LD33 Special Summons forbidden Unlock", player)),
    add_rule(world.get_location("LD33 Special Summons forbidden Complete", player),
             lambda state: state.has("LD33 Special Summons forbidden Unlock", player)),
    add_rule(world.get_location("LD34 Normal Summons forbidden", player),
             lambda state: state.has("LD34 Normal Summons forbidden Unlock", player)),
    add_rule(world.get_location("LD34 Normal Summons forbidden Complete", player),
             lambda state: state.has("LD34 Normal Summons forbidden Unlock", player)),
    add_rule(world.get_location("LD35 All except Zombies forbidden", player),
             lambda state: state.has("LD35 All except Zombies forbidden Unlock", player)),
    add_rule(world.get_location("LD35 All except Zombies forbidden Complete", player),
             lambda state: state.has("LD35 All except Zombies forbidden Unlock", player)),
    add_rule(world.get_location("LD36 All except Earth forbidden", player),
             lambda state: state.has("LD36 All except Earth forbidden Unlock", player)),
    add_rule(world.get_location("LD36 All except Earth forbidden Complete", player),
             lambda state: state.has("LD36 All except Earth forbidden Unlock", player)),
    add_rule(world.get_location("LD37 All except Water forbidden", player),
             lambda state: state.has("LD37 All except Water forbidden Unlock", player)),
    add_rule(world.get_location("LD37 All except Water forbidden Complete", player),
             lambda state: state.has("LD37 All except Water forbidden Unlock", player)),
    add_rule(world.get_location("LD38 Refer to Mar 04 Banlist", player),
             lambda state: state.has("LD38 Refer to Mar 04 Banlist Unlock", player)),
    add_rule(world.get_location("LD38 Refer to Mar 04 Banlist Complete", player),
             lambda state: state.has("LD38 Refer to Mar 04 Banlist Unlock", player)),
    add_rule(world.get_location("LD39 Monsters forbidden", player),
             lambda state: state.has("LD39 Monsters forbidden Unlock", player)),
    add_rule(world.get_location("LD39 Monsters forbidden Complete", player),
             lambda state: state.has("LD39 Monsters forbidden Unlock", player)),
    add_rule(world.get_location("LD40 Refer to Sept 05 Banlist", player),
             lambda state: state.has("LD40 Refer to Sept 05 Banlist Unlock", player)),
    add_rule(world.get_location("LD40 Refer to Sept 05 Banlist Complete", player),
             lambda state: state.has("LD40 Refer to Sept 05 Banlist Unlock", player)),
    add_rule(world.get_location("LD41 Refer to Sept 03 Banlist", player),
             lambda state: state.has("LD41 Refer to Sept 03 Banlist Unlock", player)),
    add_rule(world.get_location("LD41 Refer to Sept 03 Banlist Complete", player),
             lambda state: state.has("LD41 Refer to Sept 03 Banlist Unlock", player)),
    add_rule(world.get_location("TD01 Battle Damage", player),
             lambda state: state.has("TD01 Battle Damage Unlock", player)),
    
    # Theme Duels
    add_rule(world.get_location("TD01 Battle Damage Complete", player),
             lambda state: state.has("TD01 Battle Damage Unlock", player)),
    add_rule(world.get_location("TD02 Deflected Damage", player),
             lambda state: state.has("TD02 Deflected Damage Unlock", player)),
    add_rule(world.get_location("TD02 Deflected Damage Complete", player),
             lambda state: state.has("TD02 Deflected Damage Unlock", player)),
    add_rule(world.get_location("TD03 Normal Summon", player),
             lambda state: state.has("TD03 Normal Summon Unlock", player)),
    add_rule(world.get_location("TD03 Normal Summon Complete", player),
             lambda state: state.has("TD03 Normal Summon Unlock", player)),
    add_rule(world.get_location("TD04 Ritual Summon", player),
             lambda state: state.has("TD04 Ritual Summon Unlock", player)),
    add_rule(world.get_location("TD04 Ritual Summon Complete", player),
             lambda state: state.has("TD04 Ritual Summon Unlock", player)),
    add_rule(world.get_location("TD05 Special Summon A", player),
             lambda state: state.has("TD05 Special Summon A Unlock", player)),
    add_rule(world.get_location("TD05 Special Summon A Complete", player),
             lambda state: state.has("TD05 Special Summon A Unlock", player)),
    add_rule(world.get_location("TD06 20x Spell", player), lambda state: state.has("TD06 20x Spell Unlock", player)),
    add_rule(world.get_location("TD06 20x Spell Complete", player),
             lambda state: state.has("TD06 20x Spell Unlock", player)),
    add_rule(world.get_location("TD07 10x Trap", player), lambda state: state.has("TD07 10x Trap Unlock", player)),
    add_rule(world.get_location("TD07 10x Trap Complete", player),
             lambda state: state.has("TD07 10x Trap Unlock", player)),
    add_rule(world.get_location("TD08 Draw", player), lambda state: state.has("TD08 Draw Unlock", player)),
    add_rule(world.get_location("TD08 Draw Complete", player), lambda state: state.has("TD08 Draw Unlock", player)),
    add_rule(world.get_location("TD09 Hand Destruction", player),
             lambda state: state.has("TD09 Hand Destruction Unlock", player)),
    add_rule(world.get_location("TD09 Hand Destruction Complete", player),
             lambda state: state.has("TD09 Hand Destruction Unlock", player)),
    add_rule(world.get_location("TD10 During Opponent's Turn", player),
             lambda state: state.has("TD10 During Opponent's Turn Unlock", player)),
    add_rule(world.get_location("TD10 During Opponent's Turn Complete", player),
             lambda state: state.has("TD10 During Opponent's Turn Unlock", player)),
    add_rule(world.get_location("TD11 Recover", player), lambda state: state.has("TD11 Recover Unlock", player)),
    add_rule(world.get_location("TD11 Recover Complete", player),
             lambda state: state.has("TD11 Recover Unlock", player)),
    add_rule(world.get_location("TD12 Remove Monsters by Effect", player),
             lambda state: state.has("TD12 Remove Monsters by Effect Unlock", player)),
    add_rule(world.get_location("TD12 Remove Monsters by Effect Complete", player),
             lambda state: state.has("TD12 Remove Monsters by Effect Unlock", player)),
    add_rule(world.get_location("TD13 Flip Summon", player),
             lambda state: state.has("TD13 Flip Summon Unlock", player)),
    add_rule(world.get_location("TD13 Flip Summon Complete", player),
             lambda state: state.has("TD13 Flip Summon Unlock", player)),
    add_rule(world.get_location("TD14 Special Summon B", player),
             lambda state: state.has("TD14 Special Summon B Unlock", player)),
    add_rule(world.get_location("TD14 Special Summon B Complete", player),
             lambda state: state.has("TD14 Special Summon B Unlock", player)),
    add_rule(world.get_location("TD15 Token", player), lambda state: state.has("TD15 Token Unlock", player)),
    add_rule(world.get_location("TD15 Token Complete", player), lambda state: state.has("TD15 Token Unlock", player)),
    add_rule(world.get_location("TD16 Union", player), lambda state: state.has("TD16 Union Unlock", player)),
    add_rule(world.get_location("TD16 Union Complete", player), lambda state: state.has("TD16 Union Unlock", player)),
    add_rule(world.get_location("TD17 10x Quick Spell", player),
             lambda state: state.has("TD17 10x Quick Spell Unlock", player)),
    add_rule(world.get_location("TD17 10x Quick Spell Complete", player),
             lambda state: state.has("TD17 10x Quick Spell Unlock", player)),
    add_rule(world.get_location("TD18 The Forbidden", player),
             lambda state: state.has("TD18 The Forbidden Unlock", player)),
    add_rule(world.get_location("TD18 The Forbidden Complete", player),
             lambda state: state.has("TD18 The Forbidden Unlock", player)),
    add_rule(world.get_location("TD19 20 Turns", player), lambda state: state.has("TD19 20 Turns Unlock", player)),
    add_rule(world.get_location("TD19 20 Turns Complete", player),
             lambda state: state.has("TD19 20 Turns Unlock", player)),
    add_rule(world.get_location("TD20 Deck Destruction", player),
             lambda state: state.has("TD20 Deck Destruction Unlock", player)),
    add_rule(world.get_location("TD20 Deck Destruction Complete", player),
             lambda state: state.has("TD20 Deck Destruction Unlock", player)),
    add_rule(world.get_location("TD21 Victory D.", player),
             lambda state: state.has("TD21 Victory D. Unlock", player)),
    add_rule(world.get_location("TD21 Victory D. Complete", player),
             lambda state: state.has("TD21 Victory D. Unlock", player)),
    add_rule(world.get_location("TD22 The Preventers Fight Back", player),
             lambda state: state.has("TD22 The Preventers Fight Back Unlock", player)),
    add_rule(world.get_location("TD22 The Preventers Fight Back Complete", player),
             lambda state: state.has("TD22 The Preventers Fight Back Unlock", player)),
    add_rule(world.get_location("TD23 Huge Revolution", player),
             lambda state: state.has("TD23 Huge Revolution Unlock", player)),
    add_rule(world.get_location("TD23 Huge Revolution Complete", player),
             lambda state: state.has("TD23 Huge Revolution Unlock", player)),
    add_rule(world.get_location("TD24 Victory in 5 Turns", player),
             lambda state: state.has("TD24 Victory in 5 Turns Unlock", player)),
    add_rule(world.get_location("TD24 Victory in 5 Turns Complete", player),
             lambda state: state.has("TD24 Victory in 5 Turns Unlock", player)),
    add_rule(world.get_location("TD25 Moth Grows Up", player),
             lambda state: state.has("TD25 Moth Grows Up Unlock", player)),
    add_rule(world.get_location("TD25 Moth Grows Up Complete", player),
             lambda state: state.has("TD25 Moth Grows Up Unlock", player)),
    add_rule(world.get_location("TD26 Magnetic Power", player),
             lambda state: state.has("TD26 Magnetic Power Unlock", player)),
    add_rule(world.get_location("TD26 Magnetic Power Complete", player),
             lambda state: state.has("TD26 Magnetic Power Unlock", player)),
    add_rule(world.get_location("TD27 Dark Sage", player), lambda state: state.has("TD27 Dark Sage Unlock", player)),
    add_rule(world.get_location("TD27 Dark Sage Complete", player),
             lambda state: state.has("TD27 Dark Sage Unlock", player)),
    add_rule(world.get_location("TD28 Direct Damage", player),
             lambda state: state.has("TD28 Direct Damage Unlock", player)),
    add_rule(world.get_location("TD28 Direct Damage Complete", player),
             lambda state: state.has("TD28 Direct Damage Unlock", player)),
    add_rule(world.get_location("TD29 Destroy Monsters in Battle", player),
             lambda state: state.has("TD29 Destroy Monsters in Battle Unlock", player)),
    add_rule(world.get_location("TD29 Destroy Monsters in Battle Complete", player),
             lambda state: state.has("TD29 Destroy Monsters in Battle Unlock", player)),
    add_rule(world.get_location("TD30 Tribute Summon", player),
             lambda state: state.has("TD30 Tribute Summon Unlock", player)),
    add_rule(world.get_location("TD30 Tribute Summon Complete", player),
             lambda state: state.has("TD30 Tribute Summon Unlock", player)),
    add_rule(world.get_location("TD31 Special Summon C", player),
             lambda state: state.has("TD31 Special Summon C Unlock", player)),
    add_rule(world.get_location("TD31 Special Summon C Complete", player),
             lambda state: state.has("TD31 Special Summon C Unlock", player)),
    add_rule(world.get_location("TD32 Toon", player), lambda state: state.has("TD32 Toon Unlock", player)),
    add_rule(world.get_location("TD32 Toon Complete", player), lambda state: state.has("TD32 Toon Unlock", player)),
    add_rule(world.get_location("TD33 10x Counter", player),
             lambda state: state.has("TD33 10x Counter Unlock", player)),
    add_rule(world.get_location("TD33 10x Counter Complete", player),
             lambda state: state.has("TD33 10x Counter Unlock", player)),
    add_rule(world.get_location("TD34 Destiny Board", player),
             lambda state: state.has("TD34 Destiny Board Unlock", player)),
    add_rule(world.get_location("TD34 Destiny Board Complete", player),
             lambda state: state.has("TD34 Destiny Board Unlock", player)),
    add_rule(world.get_location("TD35 Huge Damage in a Turn", player),
             lambda state: state.has("TD35 Huge Damage in a Turn Unlock", player)),
    add_rule(world.get_location("TD35 Huge Damage in a Turn Complete", player),
             lambda state: state.has("TD35 Huge Damage in a Turn Unlock", player)),
    add_rule(world.get_location("TD36 V-Z In the House", player),
             lambda state: state.has("TD36 V-Z In the House Unlock", player)),
    add_rule(world.get_location("TD36 V-Z In the House Complete", player),
             lambda state: state.has("TD36 V-Z In the House Unlock", player)),
    add_rule(world.get_location("TD37 Uria, Lord of Searing Flames", player),
             lambda state: state.has("TD37 Uria, Lord of Searing Flames Unlock", player)),
    add_rule(world.get_location("TD37 Uria, Lord of Searing Flames Complete", player),
             lambda state: state.has("TD37 Uria, Lord of Searing Flames Unlock", player)),
    add_rule(world.get_location("TD38 Hamon, Lord of Striking Thunder", player),
             lambda state: state.has("TD38 Hamon, Lord of Striking Thunder Unlock", player)),
    add_rule(world.get_location("TD38 Hamon, Lord of Striking Thunder Complete", player),
             lambda state: state.has("TD38 Hamon, Lord of Striking Thunder Unlock", player)),
    add_rule(world.get_location("TD39 Raviel, Lord of Phantasms", player),
             lambda state: state.has("TD39 Raviel, Lord of Phantasms Unlock", player)),
    add_rule(world.get_location("TD39 Raviel, Lord of Phantasms Complete", player),
             lambda state: state.has("TD39 Raviel, Lord of Phantasms Unlock", player)),
    add_rule(world.get_location("TD40 Make a Chain", player),
             lambda state: state.has("TD40 Make a Chain Unlock", player)),
    add_rule(world.get_location("TD40 Make a Chain Complete", player),
             lambda state: state.has("TD40 Make a Chain Unlock", player)),
    add_rule(world.get_location("TD41 The Gatekeeper Stands Tall", player),
             lambda state: state.has("TD41 The Gatekeeper Stands Tall Unlock", player)),
    add_rule(world.get_location("TD41 The Gatekeeper Stands Tall Complete", player),
             lambda state: state.has("TD41 The Gatekeeper Stands Tall Unlock", player)),
    add_rule(world.get_location("TD42 Serious Damage", player),
             lambda state: state.has("TD42 Serious Damage Unlock", player)),
    add_rule(world.get_location("TD42 Serious Damage Complete", player),
             lambda state: state.has("TD42 Serious Damage Unlock", player)),
    add_rule(world.get_location("TD43 Return Monsters with Effects", player),
             lambda state: state.has("TD43 Return Monsters with Effects Unlock", player)),
    add_rule(world.get_location("TD43 Return Monsters with Effects Complete", player),
             lambda state: state.has("TD43 Return Monsters with Effects Unlock", player)),
    add_rule(world.get_location("TD44 Fusion Summon", player),
             lambda state: state.has("TD44 Fusion Summon Unlock", player)),
    add_rule(world.get_location("TD44 Fusion Summon Complete", player),
             lambda state: state.has("TD44 Fusion Summon Unlock", player)),
    add_rule(world.get_location("TD45 Big Damage at once", player),
             lambda state: state.has("TD45 Big Damage at once Unlock", player)),
    add_rule(world.get_location("TD45 Big Damage at once Complete", player),
             lambda state: state.has("TD45 Big Damage at once Unlock", player)),
    add_rule(world.get_location("TD46 XYZ In the House", player),
             lambda state: state.has("TD46 XYZ In the House Unlock", player)),
    add_rule(world.get_location("TD46 XYZ In the House Complete", player),
             lambda state: state.has("TD46 XYZ In the House Unlock", player)),
    add_rule(world.get_location("TD47 Spell Counter", player),
             lambda state: state.has("TD47 Spell Counter Unlock", player)),
    add_rule(world.get_location("TD47 Spell Counter Complete", player),
             lambda state: state.has("TD47 Spell Counter Unlock", player)),
    add_rule(world.get_location("TD48 Destroy Monsters with Effects", player),
             lambda state: state.has("TD48 Destroy Monsters with Effects Unlock", player)),
    add_rule(world.get_location("TD48 Destroy Monsters with Effects Complete", player),
             lambda state: state.has("TD48 Destroy Monsters with Effects Unlock", player)),
    add_rule(world.get_location("TD49 Plunder", player), lambda state: state.has("TD49 Plunder Unlock", player)),
    add_rule(world.get_location("TD49 Plunder Complete", player),
             lambda state: state.has("TD49 Plunder Unlock", player)),
    add_rule(world.get_location("TD50 Dark Scorpion Combination", player),
             lambda state: state.has("TD50 Dark Scorpion Combination Unlock", player)),
    add_rule(world.get_location("TD50 Dark Scorpion Combination Complete", player),
             lambda state: state.has("TD50 Dark Scorpion Combination Unlock", player)),

    world.completion_condition[player] = lambda state: state.has("Goal", player)
