# Instead of testing a fixed value (0x0f) on a bitfield, we add a function
# which counts the number of inserted jewels...
0a//getInsertedJewelsCount: |
  ld a,(wInsertedJewels)
  jp getNumSetBits
# ...then call it before comparing with the required amount to open the
# gates
0a/1092/: |
  call getInsertedJewelsCount
  cp option.tarmGateRequiredJewels

####################
# Bring X precious #
# items for the    #
# door to open.    #
####################
1f/1169/tarmRequirementText: |
  db $42,$03,$3e                              ; "Bring "
  db $09,$01                                  ; color start
  db $30 + option.tarmGateRequiredJewels      ; required jewel count digit
  db $05,$e8                                  ; space + color end
  db $03,$4a,$01                              ; "precious\n"
  
  db $04,$cc                                  ; "items"
  db $02,$a1,$01                              ; " for the"
  
  db $05,$a7                                  ; "door"
  db $03,$b0                                  ; " to "
  db $05,$02,$2e,$00                          ; "open."
