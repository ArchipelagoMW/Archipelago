
from worlds.AutoWorld import World

import math


text_mapping = {
    "A": 0x00, "B": 0x01, "C": 0x02, "D": 0x03, "E": 0x04, "F": 0x05, "G": 0x06, "H": 0x07, "I": 0x08, "J": 0x09,
    "K": 0x0A, "L": 0x0B, "M": 0x0C, "N": 0x0D, "O": 0x0E, "P": 0x0F, "Q": 0x10, "R": 0x11, "S": 0x12, "T": 0x13,
    "U": 0x14, "V": 0x15, "W": 0x16, "X": 0x17, "Y": 0x18, "Z": 0x19,

    "!": 0x1A, ".": 0x1B, "-": 0x1C, ",": 0x1D, "?": 0x1E, " ": 0x1F,

    "0": 0x22, "1": 0x23, "2": 0x24, "3": 0x25, "4": 0x26, "5": 0x27, "6": 0x28, "7": 0x29, "8": 0x2A, "9": 0x2B,

    "a": 0x40, "b": 0x41, "c": 0x42, "d": 0x43, "e": 0x44, "f": 0x45, "g": 0x46, "h": 0x47, "i": 0x48, "j": 0x49,
    "k": 0x4A, "l": 0x4B, "m": 0x4C, "n": 0x4D, "o": 0x4E, "p": 0x4F, "q": 0x50, "r": 0x51, "s": 0x52, "t": 0x53,
    "u": 0x54, "v": 0x55, "w": 0x56, "x": 0x57, "y": 0x58, "z": 0x59,

    "#": 0x5A, "(": 0x5B, ")": 0x5C, "'": 0x5D
}

title_text_mapping = {
    "A": [0x0A, 0x38], "B": [0x0B, 0x38], "C": [0x0C, 0x38], "D": [0x0D, 0x38], "E": [0x0E, 0x38],
    "F": [0x0F, 0x38], "G": [0x10, 0x38], "H": [0x11, 0x38], "I": [0x12, 0x38], "J": [0x13, 0x38],
    "K": [0x14, 0x38], "L": [0x15, 0x38], "M": [0x16, 0x38], "N": [0x17, 0x38], "O": [0x18, 0x38],
    "P": [0x19, 0x38], "Q": [0x1A, 0x38], "R": [0x1B, 0x38], "S": [0x1C, 0x38], "T": [0x1D, 0x38],
    "U": [0x1E, 0x38], "V": [0x1F, 0x38], "W": [0x20, 0x38], "X": [0x21, 0x38], "Y": [0x22, 0x38],
    "Z": [0x23, 0x38], " ": [0xFC, 0x38], ".": [0x24, 0x38],
    "0": [0x00, 0x38], "1": [0x01, 0x38], "2": [0x02, 0x38], "3": [0x03, 0x38], "4": [0x04, 0x38],
    "5": [0x05, 0x38], "6": [0x06, 0x38], "7": [0x07, 0x38], "8": [0x08, 0x38], "9": [0x09, 0x38],
}

default_text_table = {
    "intro": [0x2A5D9, [
        # "Bowser has stolen all of Mario's abilities. Can you help Mario travel across Dinosaur land to get them back and save the Princess from him?"
        0x01, 0x4E, 0x56, 0x52, 0x44, 0x51, 0x1F, 0x47, 0x40, 0x52, 0x1F, 0x52, 0x53, 0x4E, 0x4B, 0x44,
        0x4D, 0x9F, 0x40, 0x4B, 0x4B, 0x1F, 0x4E, 0x45, 0x1F, 0x0C, 0x40, 0x51, 0x48, 0x4E, 0x5D, 0x52,
        0x9F, 0x40, 0x41, 0x48, 0x4B, 0x48, 0x53, 0x48, 0x44, 0x52, 0x1B, 0x1F, 0x02, 0x40, 0x4D, 0x1F,
        0x58, 0x4E, 0xD4, 0x47, 0x44, 0x4B, 0x4F, 0x1F, 0x0C, 0x40, 0x51, 0x48, 0x4E, 0x1F, 0x53, 0x51,
        0x40, 0x55, 0x44, 0x4B, 0x9F, 0x40, 0x42, 0x51, 0x4E, 0x52, 0x52, 0x1F, 0x03, 0x48, 0x4D, 0x4E,
        0x52, 0x40, 0x54, 0x51, 0x9F, 0x4B, 0x40, 0x4D, 0x43, 0x1F, 0x53, 0x4E, 0x1F, 0x46, 0x44, 0x53,
        0x1F, 0x53, 0x47, 0x44, 0x4C, 0x9F, 0x41, 0x40, 0x42, 0x4A, 0x1F, 0x40, 0x4D, 0x43, 0x1F, 0x52,
        0x40, 0x55, 0x44, 0x1F, 0x53, 0x47, 0x44, 0x9F, 0x0F, 0x51, 0x48, 0x4D, 0x42, 0x44, 0x52, 0x52,
        0x1F, 0x45, 0x51, 0x4E, 0x4C, 0x1F, 0x47, 0x48, 0x4C, 0x1E,
    ]],
    "yoshis_island_1_box1": [0x2A86A, [
        # "-POINT OF ADVICE- You can  hold  ane xtra item  in the box at  the top of the screen. To use it, press the SELECT Button"
        0x1C, 0x0F, 0x0E, 0x08, 0x0D, 0x13, 0x1F, 0x0E, 0x05, 0x1F, 0x00, 0x03, 0x15, 0x08, 0x02, 0x04,
        0x9C, 0x18, 0x4E, 0x54, 0x1F, 0x1F, 0x42, 0x40, 0x4D, 0x1F, 0x1F, 0x47, 0x4E, 0x4B, 0x43, 0x1F,
        0x1F, 0x40, 0xCD, 0x44, 0x57, 0x53, 0x51, 0x40, 0x1F, 0x48, 0x53, 0x44, 0x4C, 0x1F, 0x1F, 0x48,
        0x4D, 0x1F, 0x53, 0x47, 0xC4, 0x41, 0x4E, 0x57, 0x1F, 0x40, 0x53, 0x1F, 0x1F, 0x53, 0x47, 0x44,
        0x1F, 0x53, 0x4E, 0x4F, 0x1F, 0x4E, 0xC5, 0x53, 0x47, 0x44, 0x1F, 0x52, 0x42, 0x51, 0x44, 0x44,
        0x4D, 0x1B, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x13, 0xCE, 0x54, 0x52, 0x44, 0x1F, 0x48, 0x53, 0x1D,
        0x1F, 0x1F, 0x4F, 0x51, 0x44, 0x52, 0x52, 0x1F, 0x53, 0x47, 0xC4, 0x12, 0x04, 0x0B, 0x04, 0x02,
        0x13, 0x1F, 0x01, 0x54, 0x53, 0x53, 0x4E, 0x4D,
    ]],
    "yoshis_island_1_box2": [0x2A8E4, [
        # "-POINT OF ADVICE- To pick up a shell, use the X or Y Button. To throw a shell upwards, look up and let go of the button"
        0x1C, 0x0F, 0x0E, 0x08, 0x0D, 0x13, 0x1F, 0x0E, 0x05, 0x1F, 0x00, 0x03, 0x15, 0x08, 0x02, 0x04,
        0x9C, 0x13, 0x4E, 0x1F, 0x1F, 0x1F, 0x4F, 0x48, 0x42, 0x4A, 0x1F, 0x1F, 0x1F, 0x54, 0x4F, 0x1F,
        0x1F, 0x1F, 0xC0, 0x52, 0x47, 0x44, 0x4B, 0x4B, 0x1D, 0x1F, 0x1F, 0x54, 0x52, 0x44, 0x1F, 0x1F,
        0x53, 0x47, 0x44, 0x1F, 0x97, 0x4E, 0x51, 0x1F, 0x1F, 0x18, 0x1F, 0x1F, 0x01, 0x54, 0x53, 0x53,
        0x4E, 0x4D, 0x1B, 0x1F, 0x1F, 0x13, 0xCE, 0x53, 0x47, 0x51, 0x4E, 0x56, 0x1F, 0x1F, 0x1F, 0x1F,
        0x40, 0x1F, 0x1F, 0x1F, 0x52, 0x47, 0x44, 0x4B, 0xCB, 0x54, 0x4F, 0x56, 0x40, 0x51, 0x43, 0x52,
        0x1D, 0x1F, 0x1F, 0x4B, 0x4E, 0x4E, 0x4A, 0x1F, 0x1F, 0x54, 0xCF, 0x40, 0x4D, 0x43, 0x1F, 0x4B,
        0x44, 0x53, 0x1F, 0x46, 0x4E, 0x1F, 0x4E, 0x45, 0x1F, 0x1F, 0x53, 0x47, 0xC4, 0x41, 0x54, 0x53,
        0x53, 0x4E, 0x4D,
    ]],
    "yoshis_island_2_box1": [0x2A968, [
        # "To do a spin jump, press the A Button. A Super Mario spin jump can break some of the blocks and defeat some of the tougher enemies"
        0x13, 0x4E, 0x1F, 0x43, 0x4E, 0x1F, 0x40, 0x1F, 0x52, 0x4F, 0x48, 0x4D, 0x1F, 0x49, 0x54, 0x4C,
        0x4F, 0x9D, 0x4F, 0x51, 0x44, 0x52, 0x52, 0x1F, 0x1F, 0x1F, 0x1F, 0x53, 0x47, 0x44, 0x1F, 0x1F,
        0x1F, 0x1F, 0x1F, 0x80, 0x01, 0x54, 0x53, 0x53, 0x4E, 0x4D, 0x1B, 0x1F, 0x1F, 0x1F, 0x1F, 0x00,
        0x1F, 0x12, 0x54, 0x4F, 0x44, 0xD1, 0x0C, 0x40, 0x51, 0x48, 0x4E, 0x1F, 0x1F, 0x1F, 0x52, 0x4F,
        0x48, 0x4D, 0x1F, 0x1F, 0x49, 0x54, 0x4C, 0xCF, 0x42, 0x40, 0x4D, 0x1F, 0x41, 0x51, 0x44, 0x40,
        0x4A, 0x1F, 0x52, 0x4E, 0x4C, 0x44, 0x1F, 0x1F, 0x4E, 0xC5, 0x53, 0x47, 0x44, 0x1F, 0x1F, 0x1F,
        0x41, 0x4B, 0x4E, 0x42, 0x4A, 0x52, 0x1F, 0x1F, 0x1F, 0x40, 0x4D, 0xC3, 0x43, 0x44, 0x45, 0x44,
        0x40, 0x53, 0x1F, 0x52, 0x4E, 0x4C, 0x44, 0x1F, 0x4E, 0x45, 0x1F, 0x53, 0x47, 0xC4, 0x53, 0x4E,
        0x54, 0x46, 0x47, 0x44, 0x51, 0x1F, 0x44, 0x4D, 0x44, 0x4C, 0x48, 0x44, 0x52,
    ]],
    #1c0f0E080d131f0E051F000315080204
    #"fooobar1":     [0x2A9F6, "-POINT OF ADVICE-"
    # ],
    #"fooobar2":     [0x2AA79, "-POINT OF ADVICE-"
    # ],
    #"fooobar3":     [0x2AD09, "-POINT OF ADVICE-"
    # ],
}

rando_text_table = [
    "Don't send a baby yoshi to oblivion",
    "Hope you can remember the secret exits",
    "Hope you can remember regrab",
    "Kaizo tech is not in logic, but it looks cool",
    "Stuck in BK? smh",
    "ENABLING CHAOS MODE IN 10... 9... 8... just kidding",
    # References to other games in Archipelago
    "The other Mario would have BLJ'd here",
    "Factorio needs a steady supply of red and green yoshi",
    "The way of the hero is... uh... nevermind",
    "Pokemon Red is stuck in S.S. Anne using Strength on the truck again.",
    # SMW Central Tip Box Jokes
    "Mario's canon height is 8' 11.",
    "Floating Munchers, while not very aesthetic, make good pets.",
    "gomba jumpscare",
    "a sliding koopa is in your future.",
]

def string_to_bytes(input_string):
    out_array = bytearray()
    for letter in input_string:
        out_array.append(text_mapping[letter] if letter in text_mapping else text_mapping["."])

    return out_array


def generate_text_box(input_string):
    out_bytes = bytearray()
    box_line_count = 0
    box_line_chr_count = 0
    for word in input_string.split():
        if box_line_chr_count + len(word) > 18:
            out_bytes[-1] += 0x80
            box_line_count += 1
            box_line_chr_count = 0

        out_bytes.extend(string_to_bytes(word))
        box_line_chr_count += len(word)

        if box_line_chr_count < 18:
            box_line_chr_count += 1
            out_bytes.append(0x1F)

    for i in range(box_line_count, 8):
        out_bytes.append(0x9F)

    return out_bytes


def generate_goal_text(world: World):
    out_array = bytearray()
    if world.options.goal == "yoshi_egg_hunt":
        required_yoshi_eggs = world.required_egg_count
        actual_yoshi_eggs = world.actual_egg_count
        out_array += bytearray([0x9F, 0x9F])
        out_array += string_to_bytes(" You must acquire")
        out_array[-1] += 0x80
        out_array += string_to_bytes(f'    {required_yoshi_eggs:03} of {actual_yoshi_eggs:03}')
        out_array[-1] += 0x80
        out_array += string_to_bytes(f'    Yoshi Eggs,')
        out_array[-1] += 0x80
        out_array += string_to_bytes("then return here.")
        out_array[-1] += 0x80
        out_array += bytearray([0x9F, 0x9F])
    else:
        bosses_required = world.options.bosses_required.value
        out_array += bytearray([0x9F, 0x9F])
        out_array += string_to_bytes(" You must defeat")
        out_array[-1] += 0x80
        out_array += string_to_bytes(f'    {bosses_required:02} Bosses,')
        out_array[-1] += 0x80
        out_array += string_to_bytes("then defeat Bowser")
        out_array[-1] += 0x80
        out_array += bytearray([0x9F, 0x9F, 0x9F])

    return out_array


def generate_received_text(item_name: str, player_name: str):
    out_array = bytearray()

    item_name = item_name[:18]
    player_name = player_name[:18]

    item_buffer = max(0, math.floor((18 - len(item_name)) / 2))
    player_buffer = max(0, math.floor((18 - len(player_name)) / 2))

    out_array += bytearray([0x9F, 0x9F])
    out_array += string_to_bytes("     Received")
    out_array[-1] += 0x80
    out_array += bytearray([0x1F] * item_buffer)
    out_array += string_to_bytes(item_name)
    out_array[-1] += 0x80
    out_array += string_to_bytes("       from")
    out_array[-1] += 0x80
    out_array += bytearray([0x1F] * player_buffer)
    out_array += string_to_bytes(player_name)
    out_array[-1] += 0x80
    out_array += bytearray([0x9F, 0x9F])

    return out_array


def generate_sent_text(item_name: str, player_name: str):
    out_array = bytearray()

    item_name = item_name[:18]
    player_name = player_name[:18]

    item_buffer = max(0, math.floor((18 - len(item_name)) / 2))
    player_buffer = max(0, math.floor((18 - len(player_name)) / 2))

    out_array += bytearray([0x9F, 0x9F])
    out_array += string_to_bytes("       Sent")
    out_array[-1] += 0x80
    out_array += bytearray([0x1F] * item_buffer)
    out_array += string_to_bytes(item_name)
    out_array[-1] += 0x80
    out_array += string_to_bytes("        to")
    out_array[-1] += 0x80
    out_array += bytearray([0x1F] * player_buffer)
    out_array += string_to_bytes(player_name)
    out_array[-1] += 0x80
    out_array += bytearray([0x9F, 0x9F])

    return out_array
