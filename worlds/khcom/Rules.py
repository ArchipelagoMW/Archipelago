from BaseClasses import CollectionState, MultiWorld

def set_rules(multiworld: MultiWorld, player: int):
    #Location rules.
    #Keys
    multiworld.get_location("Key of Guidance F02" + str, player).access_rule = lambda state: state.has("Key of Beginnings F02", player)
    multiworld.get_location("Key of Guidance F03" + str, player).access_rule = lambda state: state.has("Key of Beginnings F03", player)
    multiworld.get_location("Key of Guidance F04" + str, player).access_rule = lambda state: state.has("Key of Beginnings F04", player)
    multiworld.get_location("Key of Guidance F05" + str, player).access_rule = lambda state: state.has("Key of Beginnings F05", player)
    multiworld.get_location("Key of Guidance F06" + str, player).access_rule = lambda state: state.has("Key of Beginnings F06", player)
    multiworld.get_location("Key of Guidance F07" + str, player).access_rule = lambda state: state.has("Key of Beginnings F07", player)
    multiworld.get_location("Key of Guidance F08" + str, player).access_rule = lambda state: state.has("Key of Beginnings F08", player)
    multiworld.get_location("Key of Guidance F09" + str, player).access_rule = lambda state: state.has("Key of Beginnings F09", player)
    multiworld.get_location("Key of Guidance F12" + str, player).access_rule = lambda state: state.has("Key of Beginnings F12", player)
    multiworld.get_location("Key to Truth F02"    + str, player).access_rule = lambda state: state.has("Key of Guidance F02"  , player)
    multiworld.get_location("Key to Truth F03"    + str, player).access_rule = lambda state: state.has("Key of Guidance F03"  , player)
    multiworld.get_location("Key to Truth F04"    + str, player).access_rule = lambda state: state.has("Key of Guidance F04"  , player)
    multiworld.get_location("Key to Truth F05"    + str, player).access_rule = lambda state: state.has("Key of Guidance F05"  , player)
    multiworld.get_location("Key to Truth F06"    + str, player).access_rule = lambda state: state.has("Key of Guidance F06"  , player)
    multiworld.get_location("Key to Truth F07"    + str, player).access_rule = lambda state: state.has("Key of Guidance F07"  , player)
    multiworld.get_location("Key to Truth F08"    + str, player).access_rule = lambda state: state.has("Key of Guidance F08"  , player)
    multiworld.get_location("Key to Truth F09"    + str, player).access_rule = lambda state: state.has("Key of Guidance F09"  , player)
    #Progression
    multiworld.get_location("Card Soldier (Red)"  + str, player).access_rule = lambda state: state.has("Key of Beginnings F02", player)
    multiworld.get_location("Trickmaster"         + str, player).access_rule = lambda state: state.has("Key to Truth F02"     , player)
    multiworld.get_location("Hi-Potion"           + str, player).access_rule = lambda state: state.has("Key of Guidance F03"  , player)
    multiworld.get_location("Hades"               + str, player).access_rule = lambda state: state.has("Key to Truth F03"     , player)
    multiworld.get_location("Cloud"               + str, player).access_rule = lambda state: state.has("Key to Truth F03"     , player)
    multiworld.get_location("Parasite Cage"       + str, player).access_rule = lambda state: state.has("Key of Guidance F04"  , player)
    multiworld.get_location("Dumbo"               + str, player).access_rule = lambda state: state.has("Key to Truth F04"     , player)
    multiworld.get_location("Ether"               + str, player).access_rule = lambda state: state.has("Key of Guidance F05"  , player)
    multiworld.get_location("Jafar"               + str, player).access_rule = lambda state: state.has("Key to Truth F05"     , player)
    multiworld.get_location("Genie"               + str, player).access_rule = lambda state: state.has("Key to Truth F05"     , player)
    multiworld.get_location("Oogie Boogie"        + str, player).access_rule = lambda state: state.has("Key to Truth F06"     , player)
    multiworld.get_location("Thunder"             + str, player).access_rule = lambda state: state.has("Key to Truth F06"     , player)
    multiworld.get_location("Ursula"              + str, player).access_rule = lambda state: state.has("Key to Truth F07"     , player)
    multiworld.get_location("Aero"                + str, player).access_rule = lambda state: state.has("Key to Truth F07"     , player)
    multiworld.get_location("Hook"                + str, player).access_rule = lambda state: state.has("Key to Truth F08"     , player)
    multiworld.get_location("Tinker Bell"         + str, player).access_rule = lambda state: state.has("Key to Truth F08"     , player)
    multiworld.get_location("Dragon Malificent"   + str, player).access_rule = lambda state: state.has("Key to Truth F09"     , player)
    multiworld.get_location("Vexen"               + str, player).access_rule = lambda state: state.has("Key of Beginnings F11", player)
    multiworld.get_location("Mega-Potion"         + str, player).access_rule = lambda state: state.has("Key of Beginnings F11", player)
    multiworld.get_location("Darkside"            + str, player).access_rule = lambda state: state.has("Key of Guidance F12"  , player)
    multiworld.get_location("Riku"                + str, player).access_rule = lambda state: state.has("Key of Guidance F12"  , player)
    multiworld.get_location("Larxene"             + str, player).access_rule = lambda state: state.has("Key of Guidance F12"  , player)
    multiworld.get_location("Axel"                + str, player).access_rule = lambda state: state.has("Key of Beginnings F13", player)
    multiworld.get_location("Marluxia"            + str, player).access_rule = lambda state: state.has("Key of Beginnings F13", player)
    #Room of Rewards
    multiworld.get_location("Lionheart"           + str, player).access_rule = lambda state: state.has("Key of Rewards F01"   , player)
    multiworld.get_location("Metal Chocobo"       + str, player).access_rule = lambda state: state.has("Key of Rewards F03"   , player)
    multiworld.get_location("Mushu"               + str, player).access_rule = lambda state: state.has("Key of Rewards F09"   , player)
    multiworld.get_location("Megalixir"           + str, player).access_rule = lambda state: state.has("Key of Rewards F12"   , player)

    # Region rules.
    multiworld.get_entrance("Floor 2" , player).access_rule = lambda state: state.has("Wonderland"      , player)
    multiworld.get_entrance("Floor 3" , player).access_rule = lambda state: state.has("Olympus Coliseum", player)
    multiworld.get_entrance("Floor 4" , player).access_rule = lambda state: state.has("Monstro"         , player)
    multiworld.get_entrance("Floor 5" , player).access_rule = lambda state: state.has("Agrabah"         , player)
    multiworld.get_entrance("Floor 6" , player).access_rule = lambda state: state.has("Halloween Town"  , player)
    multiworld.get_entrance("Floor 7" , player).access_rule = lambda state: state.has("Atlantica"       , player)
    multiworld.get_entrance("Floor 8" , player).access_rule = lambda state: state.has("Never Land"      , player)
    multiworld.get_entrance("Floor 9" , player).access_rule = lambda state: state.has("Hollow Bastion"  , player)
    multiworld.get_entrance("Floor 10", player).access_rule = lambda state: state.has("100 Acre Wood"   , player)
    multiworld.get_entrance("Floor 11", player).access_rule = lambda state: state.has("Twilight Town"   , player)
    multiworld.get_entrance("Floor 12", player).access_rule = lambda state: state.has("Destiny Islands" , player)
    multiworld.get_entrance("Floor 13", player).access_rule = lambda state: state.has("Castle Oblivion" , player)
    # Win condition.
    multiworld.completion_condition[player] = lambda state: state.has("Marluxia", player)
