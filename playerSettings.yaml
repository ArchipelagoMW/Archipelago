# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify your Archipelago settings are valid at this site:
#        https://archipelago.gg/check

# Your name in-game. Spaces will be replaced with underscores and there is a 16-character limit.
#   {player} will be replaced with the player's slot number.
#   {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#   {number} will be replaced with the counter value of the name.
#   {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default A Link to the Past Template

game: A Link to the Past
requires:
  version: 0.3.6 # Version of Archipelago required for this yaml to work as expected.

A Link to the Past:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99
  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0
  local_items:
    # Forces these items to be in their native world.
    []
  non_local_items:
    # Forces these items to be outside their native world.
    []
  early_items:
    # Force the specified items to be in locations that are reachable from the start.
    {}
  start_inventory:
    # Start with these items.
    {}
  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []
  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []
  exclude_locations:
    # Prevent these locations from having an important item
    []
  priority_locations:
    # Prevent these locations from having an unimportant item
    []
  item_links:
    # Share part of your item pool with other players.
    []
  crystals_needed_for_gt:
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 50
    random: 0
    random-low: 0
    random-high: 0
  crystals_needed_for_ganon:
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 50
    random: 0
    random-low: 0
    random-high: 0
  goals:
    # Determines the victory condition.
    #
    # Ganon: Climb GT, defeat Agahnim 2, and then kill Ganon.
    # Crystals: Only killing Ganon is required. However, items may still be placed in GT.
    # Bosses: Defeat the boss of all dungeons, including Agahnim's tower and GT (Aga 2).
    # Pedestal: Pull the Triforce from the Master Sword pedestal.
    # Ganon Pedestal: Pull the Master Sword pedestal, then kill Ganon.
    # Triforce Hunt: Collect enough Triforce pieces spread throughout the worlds, then turn them in to Murahadala 
    #   in front of Hyrule Castle
    # Ganon Triforce Ganon: Collect enough Triforce pieces spread throughout the worlds, then kill Ganon.
    # Local Triforce Hunt: Same as Triforce Hunt, but all Triforce Pieces are local.
    # Local Ganon Triforce Hunt: Same as Ganon Triforce Hunt, but all Triforce Pieces are local.
    # Ice Rod Hunt: Start with full inventory, except Ice rod. Find the Ice rod, then kill Trinexx at Turtle rock.
    ganon: 50
    crystals: 0
    bosses: 0
    pedestal: 0
    ganon_pedestal: 0 
    triforce_hunt: 0
    local_triforce_hunt: 0
    ganon_triforce_hunt: 0
    local_ganon_triforce_hunt: 0
    ice_rod_hunt: 0
  triforce_pieces_mode:
    # If Goal, is a Triforce Hunt. Determine how to calculate the extra available triforce pieces.
    # There can only be at most 90 Triforce Pieces in one one.
    #
    # Extra: available = triforce_pieces_extra + triforce_pieces_required
    # Percentage: available = (triforce_pieces_percentage /100) * triforce_pieces_required
    # Available: available = triforce_pieces_available
    extra: 0
    percentage: 0
    available: 50
  triforce_pieces_extra: 
    # Set to how many extra triforces pieces are available to collect in the world.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 90
    0: 0
    5: 50
    10: 50
    15: 0
    20: 0
  triforce_pieces_percentage:
    # Set to how many triforce pieces according to a percentage of the required ones, are available to collect in the world.
    #
    # You can define additional values greater than the minimum value.
    # Minimum value is 100
    100: 0
    150: 50
    200: 0
  triforce_pieces_available:
    # Set to how many triforces pieces are available to collect in the world.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 90
    25: 0
    30: 50
    40: 0
    50: 0
  triforce_pieces_required:
    # Set how many triforce pieces you need to win the game in a triforce hunt.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 90
    15: 0
    20: 50
    30: 0
    40: 0
    50: 0
  open_pyramid:
    # Determines whether the hole at the top of pyramid is open.
    # Goal will open the pyramid if the goal requires you to kill Ganon, without needing to kill Agahnim 2.
    # Auto is the same as goal except if Ganon's dropdown is in another location, the hole will be closed.
    closed: 0
    open: 0
    goal: 50
    auto: 0
  dungeon_counters:
    # Displays the amount of items checked in a dungeon.
    #
    # On: Always visible in dungeons.
    # Pickup: Shows when compass is picked up.
    # Default: Shows when compass is picked up, if the compass is shuffled.
    # Off: Never show item count in dungeons.
    on: 0
    pickup: 50
    default: 0
    off: 0
  bigkey_shuffle:
    # Big Key Placement
    original_dungeon: 50
    own_dungeons: 0
    own_world: 0
    any_world: 0
    different_world: 0
    start_with: 0
  smallkey_shuffle:
    # Small Key Placement
    original_dungeon: 50
    own_dungeons: 0
    own_world: 0
    any_world: 0
    different_world: 0
    start_with: 0
    universal: 0
  compass_shuffle:
    # Compass Placement
    original_dungeon: 50
    own_dungeons: 0
    own_world: 0
    any_world: 0
    different_world: 0
    start_with: 0
  map_shuffle:
    # Map Placement
    original_dungeon: 50
    own_dungeons: 0
    own_world: 0
    any_world: 0
    different_world: 0
    start_with: 0
  progressive:
    # Enable or disable progressive items (swords, shields, bow)
    off: 0
    grouped_random: 0
    on: 50
  swordless:
    # No swords. Curtains in Skull Woods and Agahnim's
    # Tower are removed, Agahnim's Tower barrier can be
    # destroyed with hammer. Misery Mire and Turtle Rock
    # can be opened without a sword. Hammer damages Ganon.
    # Ether and Bombos Tablet can be activated with Hammer
    # (and Book).
    false: 50
    true: 0
  mode:
    # Determines how the game begins.
    #
    # Standard: Begin the game by rescuing Zelda from her cell and escorting her to the Sanctuary.
    # Open: Begin the game from your choice of Link's House or the Sanctuary.
    # Inverted: Begin in the Dark World. The Moon Pearl is required to avoid bunny-state in Light World,
    #   and the Light World game map is altered
    standard: 0
    open: 50
    inverted: 0
  glitches_required:
    # Determines the logic required to complete your seed.
    #
    # None: No glitches required.
    # Minor: Puts fake flipper, waterwalk, super bunny shenanigans, and etc into logic.
    # Overworld: Assumes the player has knowledge of both overworld major glitches (boots clips, mirror clips) and
    #   minor glitches.
    # Hybrid Major: In addition to overworld glitches, also requires underworld clips between dungeons.
    # No Logic: Your own items are placed with no regard to any logic; such as your Fire Rod can be on your Trinexx.
    #   Other players items are placed into your world under HMG logic.
    none: 50
    minor_glitches: 0
    overworld_glitches: 0
    hybrid_major_glitches: 0
    no_logic: 0
  dark_room_logic:
    # Logic for unlit dark rooms.
    #
    # Lamp: Require the Lamp for these rooms to be considered accessible.
    # Torches: In addition to the Lamp, allow the Fire rod and presence of easily accessible torches for access.
    # None: All dark rooms are always considered doable, meaning this may force completion of rooms in complete 
    #   darkness.
    lamp: 50
    torches: 0
    none: 0
  misery_mire_medallion:
    # Required medallion to open Misery Mire front entrance
    random: 50
    Ether: 0
    Bombos: 0
    Quake: 0
  turtle_rock_medallion:
    # Required medallion to open Turtle Rock front entrance
    random: 50
    Ether: 0
    Bombos: 0
    Quake: 0
  entrance_shuffle:
    # Shuffles entrances for dungeons, overworld tiles, etc.
    none: 50 # Vanilla game map. All entrances and exits lead to their original locations. You probably want this option
    dungeonssimple: 0 # Shuffle just dungeons amongst each other, swapping dungeons entirely, so Hyrule Castle is always 1 dungeon
    dungeonsfull: 0 # Shuffle any dungeon entrance with any dungeon interior, so Hyrule Castle can be 4 different dungeons, but keep dungeons to a specific world
    dungeonscrossed: 0 # like dungeonsfull, but allow cross-world traversal through a dungeon. Warning: May force repeated dungeon traversal
    simple: 0 # Entrances are grouped together before being randomized. Simple uses the most strict grouping rules
    restricted: 0 # Less strict than simple
    full: 0 # Less strict than restricted
    crossed: 0 # Less strict than full
    insanity: 0 # Very few grouping rules. Good luck.
    # You can also define entrance shuffle seed, like so:
    crossed-1000: 0 # using this method, you can have the same layout as another player and share entrance information
    # However, many other settings like logic, world state, retro etc. may affect the shuffle result as well.
    crossed-group-myfriends: 0 # using this method, everyone with "group-myfriends" will share the same seed
  item_pool:
    # Adds or removes items in the pool the player can collect.
    #
    # Easy: Doubled upgrades, progressives, and etc.
    # Normal: Item availability remains unchanged from vanilla game.
    # Hard: Reduced upgrade availability (max: 14 hearts, blue mail, tempered sword, fire shield, no silvers unless 
    #   swordless).
    # Expert: Minimum upgrade availability (max: 8 hearts, green mail, master sword, fighter shield, no silvers 
    #   unless swordless)
    easy: 0
    normal: 50
    hard: 0
    expert: 0
  item_functionality:
    # Changes the functionality of some items.
    #
    # Easy: Allow Hammer to damage ganon, Allow Hammer tablet collection, Allow swordless medallion use everywhere.
    # Normal: Vanilla item functionality.
    # Hard: Reduced helpfulness of items (potions less effective, can't catch faeries, cape uses double magic, byrna
    #   does not grant invulnerability, boomerangs do not stun, silvers disabled outside ganon)
    # Expert: Vastly reduces the helpfulness of items (potions barely effective, can't catch faeries, cape uses 
    #   double magic, byrna does not grant invulnerability, boomerangs and hookshot do not stun, silvers disabled 
    #   outside ganon)
    easy: 0
    normal: 50
    hard: 0
    expert: 0
  retro_bow:
    # Zelda-1 like mode. You have to purchase a quiver to shoot arrows using rupees.
    false: 50
    true: 0
  retro_caves:
    # Zelda-1 like mode. There are randomly placed take-any caves that contain one Sword and
    # choices of Heart Container/Blue Potion.
    false: 50
    true: 0
  hints:
    # On/Full: Put item and entrance placement hints on telepathic tiles and some NPCs, Full removes joke hints.
    off: 0
    on: 50
    full: 0
  scams:
    # If on, these Merchants will no longer tell you what they're selling.
    off: 50
    king_zora: 0
    bottle_merchant: 0
    all: 0
  restrict_dungeon_item_on_boss:
    # Don't place dungeon-native items on the dungeon's boss.
    false: 50
    true: 0
  boss_shuffle:
    # Shuffles bosses around to different locations.
    # Basic will shuffle all bosses except Ganon and Agahnim anywhere they can be placed.
    # Full chooses 3 bosses at random to be placed twice instead of Lanmolas, Moldorm, and Helmasaur.
    # Chaos allows any boss to appear any number of times.
    # Singularity places a single boss in as many places as possible, and a second boss in any remaining
    # locations.
    # Supports plando placement. Formatting here:
    # https://archipelago.gg/tutorial/A%20Link%20to%20the%20Past/plando/en
    none: 50
    basic: 0
    full: 0
    chaos: 0
    singularity: 0
  pot_shuffle:
    # Shuffle contents of pots within "supertiles" (item will still be nearby original placement).
    false: 50
    true: 0
  enemy_shuffle:
    # Randomize every enemy spawn.
    # If mode is Standard, Hyrule Castle is left out (may result in visually wrong enemy sprites in that area.)
    false: 50
    true: 0
  killable_thieves:
    # Makes Thieves killable.
    false: 50
    true: 0
  enemy_damage:
    # Changes enemy damage values.
    #
    # Default: Vanilla enemy damage.
    # Shuffled: Enemies deal 0 to 4 hearts and armor helps.
    # Chaos: Enemies deal 0 to 8 hearts and armor just reshuffles the damage.
    default: 50
    shuffled: 0
    chaos: 0
  enemy_health:
    # Changes enemy health values.
    #
    # Default: Vanilla enemy HP
    # Easy: Enemies have reduced health
    # Hard: Enemies have increased health
    # Expert: Enemies have greatly increased health
    default: 50
    easy: 0
    hard: 0
    expert: 0
  shuffle_prizes:
    # Shuffles prizes or bonk packs.
    #
    # None: Do not shuffle prize packs.
    # G: Shuffle "general" prize packs, as in enemy, tree pull, dig etc.
    # B: Shuffle "bonk" prize packs.
    # BG: Shuffle both G and B.
    none: 0
    g: 50
    b: 0
    bg: 0
  bush_shuffle:
    # Randomize chance that a bush contains an enemy as well as which enemy may spawn.
    false: 50
    true: 0
  shop_shuffle:
    # Determines the inventories/prices for shops.
    #
    # You can add additional combinations of these values like so:
    #   shop_shuffle:
    #     uwiP: 50
    none: 50
    g: 0 # Generate new default inventories for overworld/underworld shops, and unique shops.
    f: 0 # Generate new default inventories for every shop independently.
    i: 0 # Shuffle default inventories of the shops around.
    p: 0 # Randomize the prices of the items in shop inventories.
    u: 0 # Shuffle capacity upgrades into the item pool (and allow them to traverse the multiworld).
    w: 0 # Consider witch's hut like any other shop and shuffle/randomize it too.
    P: 0 # Prices of the items in shop inventories cost hearts, arrow, or bombs instead of rupees.
    ip: 0 # Shuffle inventories and randomize prices.
    fpu: 0 # Generate new inventories, randomize prices and shuffle capacity upgrades into item pool.
    uip: 0 # Shuffle inventories, randomize prices and shuffle capacity upgrades into the item pool.
  shop_item_slots:
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    0: 50
    random: 0
    random-low: 0
    random-high: 0
  shop_price_modifier:
    # Percentage modifier for shuffled item prices in shops
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 400
    100: 50
    random: 0
    random-low: 0
    random-high: 0
  tile_shuffle:
    # Randomize flying tiles floor patterns.
    false: 50
    true: 0
  ow_palettes:
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0
  uw_palettes:
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0
  hud_palettes:
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0
  sword_palettes:
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0
  shield_palettes:
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0
  sprite:
    # Enter the name of your preferred sprite and weight it appropriately.
    Link: 50
    random: 0
    randomonhit: 0 # Random sprite on hit
    randomonenter: 0 # Random sprite on entering the underworld.
    randomonexit: 0 # Random sprite on exiting the underworld.
    randomonslash: 0 # Random sprite on sword slashes
    randomonitem: 0 # Random sprite on getting items.
    randomonbonk: 0 # Random sprite on bonk.
    randomonall: 0 # Random sprite on any and all currently supported events. Refer to above for the supported events.
  # sprite_pool: # When specified, limits the pool of sprites used for randomon-event to the specified pool.  Uncomment to use this.
  #   - link
  #   - pride link
  #   - penguin link
  #   - random # You can specify random multiple times for however many potentially unique random sprites you want in your pool.
  random_sprite_on_event:
    # # An alternative to specifying randomonhit / randomonexit / etc... in sprite down below.
    enabled:
      # If enabled, sprite down below is ignored completely, (although it may become the sprite pool)
      on: 0
      off: 1
    on_hit:
      # Random sprite on hit. Being hit by things that cause 0 damage still counts.
      on: 1
      off: 0
    on_enter:
      # Random sprite on underworld entry. Note that entering hobo counts.
      on: 0
      off: 1
    on_exit:
      # Random sprite on underworld exit. Exiting hobo does not count.
      on: 0
      off: 1
    on_slash:
      # Random sprite on sword slash. Note, it still counts if you attempt to slash while swordless.
      on: 0
      off: 1
    on_item:
      # Random sprite on getting an item.  Anything that causes you to hold an item above your head counts.
      on: 0
      off: 1
    on_bonk:
      # Random sprite on bonk.
      on: 0
      off: 1
    on_everything:
      # Random sprite on ALL currently implemented events, even if not documented at present time.
      on: 0
      off: 1
    use_weighted_sprite_pool:
      # Always on if no sprite_pool exists, otherwise it controls whether to use sprite as a weighted sprite pool.
      on: 0
      off: 1
  heartbeep:
    # Controls the frequency of the low-health beeping.
    normal: 50
    double: 0
    half: 0
    quarter: 0
    off: 0
  heartcolor:
    # Controls the color of your health hearts.
    red: 50
    blue: 0
    green: 0
    yellow: 0
  quickswap:
    # Enable switching items by pressing the L+R shoulder buttons.
    false: 0
    true: 50
  menuspeed:
    # Controls how fast the item menu opens and closes.
    normal: 50
    instant: 0
    double: 0
    triple: 0
    quadruple: 0
    half: 0
  music:
    # If "false", all in-game music will be disabled.
    false: 0
    true: 50
  reduceflashing:
    # Reduces instances of flashing such as lightning attacks, weather, ether and more.
    false: 0
    true: 50
  triforcehud:
    # Disable visibility of the triforce hud unless collecting a piece or speaking to Murahadala
    #
    # Normal: Original behavior (always visible)
    # Hide Goal: Hide counter until a piece is collected or speaking to Murahadala
    # Hide Required: Always visible, but required amount is invisible until determined by Murahadala
    # Hide Both: Hide both under above circumstances
    normal: 50
    hide_goal: 0
    hide_required: 0
    hide_both: 0
  glitch_boots:
    # Start with Pegasus Boots in any glitched logic mode that makes use of them.
    false: 0
    true: 50
  beemizer_total_chance:
    # Percentage chance for each junk-fill item (rupees, bombs, arrows) to be
    # replaced with either a bee swarm trap or a single bottle-filling bee.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0
  beemizer_trap_chance:
    # Percentage chance for each replaced junk-fill item to be a bee swarm
    # trap; all other replaced items are single bottle-filling bees.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    60: 50
    random: 0
    random-low: 0
    random-high: 0
  timer:
    # Enables a built-in timer with special settings.
    #
    # None: No timer will be displayed.
    # Timed: Starts with clock at zero. Green clocks subtract 4 minutes (total 20). Blue clocks subtract 
    #   2 minutes (total 10). Red clocks add two minutes (total 10). Winner is the player with the lowest 
    #   time at the end.
    # Timed OHKO: Starts the clock at ten minutes. Green clocks add five minutes (total 25). As long as 
    #   the clock as at zero, Link will die in one hit.
    # OHKO: Timer always at zero. Permanent OHKO.
    # Timed Countdown: Starts the clock with forty minutes. Same clocks as timed mode, but if the clock 
    #   hits zero you "lose". You can still keep playing, though.
    # Display: Displays a timer, but otherwise does not affect gameplay or the item pool.
    none: 50
    timed: 0
    timed_ohko: 0
    ohko: 0
    timed_countdown: 0
    display: 0
  countdown_start_time:
    # For timed_ohko and timed_countdown timer modes, the amount of time in minutes to start with.
    # Starting with 0 in timed_ohko, will force OHKO from the start.
    #
    # You can define additional values.
    0: 0
    10: 50
    20: 0
    30: 0
    60: 0
  red_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a red clock.
    #
    # You can define additional values.
    -2: 50
    1: 0
  blue_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a blue clock.
    #
    # You can define additional values.
    1: 0
    2: 50
  green_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a green clock.
    #
    # You can define additional values.
    4: 50
    10: 0
    15: 0
  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0
  allow_collect:
    # Allows for !collect / co-op to auto-open chests containing items for other players.
    # Off by default, because it currently crashes on real hardware.
    false: 50
    true: 0
